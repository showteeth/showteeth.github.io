<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>showteeth&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://showteeth.tech/"/>
  <updated>2019-03-13T16:01:16.514Z</updated>
  <id>http://showteeth.tech/</id>
  
  <author>
    <name>showteeth</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pv-命令执行的进度信息</title>
    <link href="http://showteeth.tech/posts/6225.html"/>
    <id>http://showteeth.tech/posts/6225.html</id>
    <published>2019-03-13T15:27:07.000Z</published>
    <updated>2019-03-13T16:01:16.514Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>这个需要安装pv，需要root权限，后面在有root权限的机器上执行这个操作</p></div><a id="more"></a><h2 id="开始于二级标题"><a href="#开始于二级标题" class="headerlink" title="开始于二级标题"></a>开始于二级标题</h2><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://linux.die.net/man/1/pv" target="_blank" rel="noopener">官方文档</a></li><li><a href="https://www.poftut.com/linux-pv-command-tutorial-examples-monitor-progress-copybackupcompress/" target="_blank" rel="noopener">很好的英文示例讲解博客</a></li><li><a href="https://www.tecmint.com/monitor-copy-backup-tar-progress-in-linux-using-pv-command/" target="_blank" rel="noopener">英文示例博客</a></li><li><a href="https://wangchujiang.com/linux-command/c/pv.html" target="_blank" rel="noopener">中文讲解博客</a></li><li><a href="https://ywnz.com/linux/pv/" target="_blank" rel="noopener">中文讲解博客</a></li><li><a href="https://linux.cn/article-6734-1.html?pr" target="_blank" rel="noopener">中文讲解博客</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;这个需要安装pv，需要root权限，后面在有root权限的机器上执行这个操作&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTML块级标签和行内标签</title>
    <link href="http://showteeth.tech/posts/8829.html"/>
    <id>http://showteeth.tech/posts/8829.html</id>
    <published>2019-03-13T14:16:09.000Z</published>
    <updated>2019-03-13T16:03:58.338Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>这是一篇<a href="https://www.cnblogs.com/yanqiu/p/8987126.html" target="_blank" rel="noopener">转载</a>的文章，主要记录了HTML的块级标签和行内标签各自包括的内容</p></div><a id="more"></a><h2 id="块级标签"><a href="#块级标签" class="headerlink" title="块级标签"></a>块级标签</h2><table><thead><tr class="header"><th style="text-align:left">标签</th><th style="text-align:left">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align:left">&lt;address&gt;</td><td style="text-align:left">定义地址</td></tr><tr class="even"><td style="text-align:left">&lt;article&gt;</td><td style="text-align:left">定义文章</td></tr><tr class="odd"><td style="text-align:left">&lt;aside&gt;</td><td style="text-align:left">定义页面内容之外的内容</td></tr><tr class="even"><td style="text-align:left">&lt;audio&gt;</td><td style="text-align:left">定义声音内容</td></tr><tr class="odd"><td style="text-align:left">&lt;blockquote&gt;</td><td style="text-align:left">定义长的引用</td></tr><tr class="even"><td style="text-align:left">&lt;canvas&gt;</td><td style="text-align:left">定义图形</td></tr><tr class="odd"><td style="text-align:left">&lt;caption&gt;</td><td style="text-align:left">定义表格标题</td></tr><tr class="even"><td style="text-align:left">&lt;dd&gt;</td><td style="text-align:left">定义定义列表中项目的描述</td></tr><tr class="odd"><td style="text-align:left">&lt;div&gt;</td><td style="text-align:left">定义文档中的节</td></tr><tr class="even"><td style="text-align:left">&lt;dl&gt;</td><td style="text-align:left">定义定义列表</td></tr><tr class="odd"><td style="text-align:left">&lt;dt&gt;</td><td style="text-align:left">定义定义列表中的项目</td></tr><tr class="even"><td style="text-align:left">&lt;details&gt;</td><td style="text-align:left">定义元素的细节</td></tr><tr class="odd"><td style="text-align:left">&lt;fieldset&gt;</td><td style="text-align:left">定义围绕表单中元素的边框</td></tr><tr class="even"><td style="text-align:left">&lt;figcaption&gt;</td><td style="text-align:left">定义 figure 元素的标题</td></tr><tr class="odd"><td style="text-align:left">&lt;figure&gt;</td><td style="text-align:left">定义媒介内容的分组，以及它们的标题</td></tr><tr class="even"><td style="text-align:left">&lt;footer&gt;</td><td style="text-align:left">定义 section 或 page 的页脚</td></tr><tr class="odd"><td style="text-align:left">&lt;form&gt;</td><td style="text-align:left">定义供用户输入的 HTML 表单</td></tr><tr class="even"><td style="text-align:left">&lt;h1&gt; to &lt;h6&gt;</td><td style="text-align:left">定义 HTML 标题</td></tr><tr class="odd"><td style="text-align:left">&lt;header&gt;</td><td style="text-align:left">定义 section 或 page 的页眉</td></tr><tr class="even"><td style="text-align:left">&lt;hr&gt;</td><td style="text-align:left">定义水平线</td></tr><tr class="odd"><td style="text-align:left">&lt;legend&gt;</td><td style="text-align:left">定义 fieldset 元素的标题</td></tr><tr class="even"><td style="text-align:left">&lt;li&gt;</td><td style="text-align:left">定义列表的项目</td></tr><tr class="odd"><td style="text-align:left">&lt;menu&gt;</td><td style="text-align:left">定义命令的列表或菜单</td></tr><tr class="even"><td style="text-align:left">&lt;meter&gt;</td><td style="text-align:left">定义预定义范围内的度量</td></tr><tr class="odd"><td style="text-align:left">&lt;nav&gt;</td><td style="text-align:left">定义导航链接</td></tr><tr class="even"><td style="text-align:left">&lt;noframes&gt;</td><td style="text-align:left">定义针对不支持框架的用户的替代内容</td></tr><tr class="odd"><td style="text-align:left">&lt;noscript&gt;</td><td style="text-align:left">定义针对不支持客户端脚本的用户的替代内容</td></tr><tr class="even"><td style="text-align:left">&lt;ol&gt;</td><td style="text-align:left">定义有序列表</td></tr><tr class="odd"><td style="text-align:left">&lt;output&gt;</td><td style="text-align:left">定义输出的一些类型</td></tr><tr class="even"><td style="text-align:left">&lt;p&gt;</td><td style="text-align:left">定义段落</td></tr><tr class="odd"><td style="text-align:left">&lt;pre&gt;</td><td style="text-align:left">定义预格式文本</td></tr><tr class="even"><td style="text-align:left">&lt;section&gt;</td><td style="text-align:left">定义 section</td></tr><tr class="odd"><td style="text-align:left">&lt;table&gt;</td><td style="text-align:left">定义表格</td></tr><tr class="even"><td style="text-align:left">&lt;tbody&gt;</td><td style="text-align:left">定义表格中的主体内容</td></tr><tr class="odd"><td style="text-align:left">&lt;td&gt;</td><td style="text-align:left">定义表格中的单元</td></tr><tr class="even"><td style="text-align:left">&lt;tfoot&gt;</td><td style="text-align:left">定义表格中的表注内容（脚注）</td></tr><tr class="odd"><td style="text-align:left">&lt;th&gt;</td><td style="text-align:left">定义表格中的表头单元格</td></tr><tr class="even"><td style="text-align:left">&lt;thead&gt;</td><td style="text-align:left">定义表格中的表头内容</td></tr><tr class="odd"><td style="text-align:left">&lt;time&gt;</td><td style="text-align:left">定义日期/时间</td></tr><tr class="even"><td style="text-align:left">&lt;tr&gt;</td><td style="text-align:left">定义表格中的行</td></tr><tr class="odd"><td style="text-align:left">&lt;ul&gt;</td><td style="text-align:left">定义无序列表</td></tr></tbody></table><hr><p><br></p><h2 id="行内标签"><a href="#行内标签" class="headerlink" title="行内标签"></a>行内标签</h2><table><thead><tr class="header"><th style="text-align:left">标签</th><th style="text-align:left">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align:left">&lt;a&gt;</td><td style="text-align:left">定义锚</td></tr><tr class="even"><td style="text-align:left">&lt;abbr&gt;</td><td style="text-align:left">定义缩写</td></tr><tr class="odd"><td style="text-align:left">&lt;acronym&gt;</td><td style="text-align:left">定义只取首字母的缩写</td></tr><tr class="even"><td style="text-align:left">&lt;b&gt;</td><td style="text-align:left">定义粗体字</td></tr><tr class="odd"><td style="text-align:left">&lt;bdo&gt;</td><td style="text-align:left">定义文字方向</td></tr><tr class="even"><td style="text-align:left">&lt;big&gt;</td><td style="text-align:left">定义大号文本</td></tr><tr class="odd"><td style="text-align:left">&lt;br&gt;</td><td style="text-align:left">定义简单的折行</td></tr><tr class="even"><td style="text-align:left">&lt;button&gt;</td><td style="text-align:left">定义按钮 (push button)</td></tr><tr class="odd"><td style="text-align:left">&lt;cite&gt;</td><td style="text-align:left">定义引用(citation)</td></tr><tr class="even"><td style="text-align:left">&lt;code&gt;</td><td style="text-align:left">定义计算机代码文本</td></tr><tr class="odd"><td style="text-align:left">&lt;command&gt;</td><td style="text-align:left">定义命令按钮</td></tr><tr class="even"><td style="text-align:left">&lt;dfn&gt;</td><td style="text-align:left">定义定义项目</td></tr><tr class="odd"><td style="text-align:left">&lt;del&gt;</td><td style="text-align:left">定义被删除文本</td></tr><tr class="even"><td style="text-align:left">&lt;em&gt;</td><td style="text-align:left">定义强调文本</td></tr><tr class="odd"><td style="text-align:left">&lt;embed&gt;</td><td style="text-align:left">定义外部交互内容或插件</td></tr><tr class="even"><td style="text-align:left">&lt;i&gt;</td><td style="text-align:left">定义斜体字</td></tr><tr class="odd"><td style="text-align:left">&lt;img&gt;</td><td style="text-align:left">定义图像</td></tr><tr class="even"><td style="text-align:left">&lt;input&gt;</td><td style="text-align:left">定义输入控件</td></tr><tr class="odd"><td style="text-align:left">&lt;kbd&gt;</td><td style="text-align:left">定义键盘文本</td></tr><tr class="even"><td style="text-align:left">&lt;label&gt;</td><td style="text-align:left">定义 input 元素的标注</td></tr><tr class="odd"><td style="text-align:left">&lt;map&gt;</td><td style="text-align:left">定义图像映射</td></tr><tr class="even"><td style="text-align:left">&lt;mark&gt;</td><td style="text-align:left">定义有记号的文本</td></tr><tr class="odd"><td style="text-align:left">&lt;objec&gt;</td><td style="text-align:left">定义内嵌对象</td></tr><tr class="even"><td style="text-align:left">&lt;progress&gt;</td><td style="text-align:left">定义任何类型的任务的进度</td></tr><tr class="odd"><td style="text-align:left">&lt;q&gt;</td><td style="text-align:left">定义短的引用</td></tr><tr class="even"><td style="text-align:left">&lt;samp&gt;</td><td style="text-align:left">定义计算机代码样本</td></tr><tr class="odd"><td style="text-align:left">&lt;select&gt;</td><td style="text-align:left">定义选择列表（下拉列表）</td></tr><tr class="even"><td style="text-align:left">&lt;small&gt;</td><td style="text-align:left">定义小号文本</td></tr><tr class="odd"><td style="text-align:left">&lt;span&gt;</td><td style="text-align:left">定义文档中的节</td></tr><tr class="even"><td style="text-align:left">&lt;strong&gt;</td><td style="text-align:left">定义强调文本</td></tr><tr class="odd"><td style="text-align:left">&lt;sub&gt;</td><td style="text-align:left">定义下标文本</td></tr><tr class="even"><td style="text-align:left">&lt;sup&gt;</td><td style="text-align:left">定义上标文本</td></tr><tr class="odd"><td style="text-align:left">&lt;textarea&gt;</td><td style="text-align:left">定义多行的文本输入控件</td></tr><tr class="even"><td style="text-align:left">&lt;time&gt;</td><td style="text-align:left">定义日期/时间</td></tr><tr class="odd"><td style="text-align:left">&lt;tt&gt;</td><td style="text-align:left">定义打字机文本</td></tr><tr class="even"><td style="text-align:left">&lt;var&gt;</td><td style="text-align:left">定义文本的变量部分</td></tr><tr class="odd"><td style="text-align:left">&lt;video&gt;</td><td style="text-align:left">定义视频</td></tr><tr class="even"><td style="text-align:left">&lt;wbr&gt;</td><td style="text-align:left">定义可能的换行符</td></tr></tbody></table><hr><p><br></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.jianshu.com/p/d69878549d92" target="_blank" rel="noopener">关于两者之间的转换</a></li><li><a href="https://www.cnblogs.com/yanqiu/p/8987126.html" target="_blank" rel="noopener">HTML中块级元素和行内元素的总结和区分，本文内容摘自此文章</a></li></ul><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;这是一篇&lt;a href=&quot;https://www.cnblogs.com/yanqiu/p/8987126.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;转载&lt;/a&gt;的文章，主要记录了HTML的块级标签和行内标签各自包括的内容&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="前段" scheme="http://showteeth.tech/categories/%E5%89%8D%E6%AE%B5/"/>
    
    
      <category term="基础" scheme="http://showteeth.tech/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>转载其他博主博客</title>
    <link href="http://showteeth.tech/posts/52283.html"/>
    <id>http://showteeth.tech/posts/52283.html</id>
    <published>2019-03-13T12:40:50.000Z</published>
    <updated>2019-03-13T15:03:24.867Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>这篇博客整理了转载博客到自己搭建的博客的方法，主要包括转载<strong>CSDN博客</strong>、<strong>博客园博客</strong>、<strong>简书</strong>以及<strong>其他自建博客</strong>等</p></div><a id="more"></a><h2 id="转载CSDN博客"><a href="#转载CSDN博客" class="headerlink" title="转载CSDN博客"></a>转载CSDN博客</h2><div id="article_content" class="article_content csdn-tracking-statistics tracking-click"><div class="markdown_views"><h3 id="检查"><a name="t2"></a><a target="_blank"></a>博客页面右键，点击【检查】</h3><img src="https://img-blog.csdn.net/20180205164141852?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfNDE2NTIyNzQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"> 点击检查后，页面右侧出现<strong>html</strong>代码，如下图： <img src="https://img-blog.csdn.net/20180205164538679?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfNDE2NTIyNzQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><h3 id="找内容"><a name="t3"></a><a target="_blank"></a>找到article_content内容</h3><img src="https://img-blog.csdn.net/20180205164709557?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfNDE2NTIyNzQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><h3 id="复制"><a name="t4"></a><a target="_blank"></a>复制article_content内容</h3>在选中html的article_content代码处右键，点击<strong>【Copy】</strong>,再点击<strong>【Copy outerHTML】</strong>即可，至此，博客内容的html代码复制完成 <img src="https://img-blog.csdn.net/20180205164702137?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfNDE2NTIyNzQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><h3 id="新建"><a name="t5"></a><a target="_blank"></a>新建markdown博客</h3><ul><li>如果是<strong>转载到CSDN博客</strong>需要注意：<strong>使用markdown编辑器</strong>，CSDN博客默认的是<a href="https://www.baidu.com/s?wd=html%E7%BC%96%E8%BE%91%E5%99%A8&amp;tn=24004469_oem_dg&amp;rsv_dl=gh_pl_sl_csd" target="_blank"><strong>html编辑器</strong></a>，在博客设置中<strong>修改成markdown编辑器</strong>，在html编辑器中是无法将html代码转换成相应博客内容</li><li>如果是<strong>转载到自己搭建的博客</strong>，比如我的这个博客，需要注意：按照上述方法会得到<mark>很多的空格</mark>，这是因为直接使用html来编写markdown，只要存在换行(如标签换行)都会在最终生成的页面中得到一个空格，为了解决这个问题可以在整个<code>article_content</code>标签外加上<code>escape</code>标签即可，这个和<a href="http://showteeth.tech/posts/65136.html" target="_blank"><strong>插入html表格</strong></a>的处理是一样的</li><li>HTML <mark>区块标签间的 Markdown 格式语法将不会被处理</mark>，但 Markdown 语法在 HTML <mark>行内标签间是有效的</mark>，具体的行内标签和区块标签包含的内容见<mark><a href="http://showteeth.tech/posts/8829.html" target="_blank">这篇博客</a></mark></li><li>在手动更改html内容时需要注意：每个标题的<code>id</code>是<mark>不可以相同</mark>的，不然<strong>生成的目录会出问题</strong>，点击不能到达相应的标题(目录是根据<code>id</code>生成的)</li><li>最后特别要注意的是，我们发表转载文章的时候一定要标注<strong>转载</strong>，尊重原创！！</li></ul></div></div><hr><h2 id="转载博客园博客"><a href="#转载博客园博客" class="headerlink" title="转载博客园博客"></a>转载博客园博客</h2><p>将上述转载CSDN博客中<code>article_content</code>替换成<code>data-note-content</code>即可</p><hr><h2 id="转载简书博客"><a href="#转载简书博客" class="headerlink" title="转载简书博客"></a>转载简书博客</h2><p>将上述转载CSDN博客中<code>article_content</code>替换成<code>cnblogs_post_body</code>即可</p><hr><h2 id="转载其他自建博客"><a href="#转载其他自建博客" class="headerlink" title="转载其他自建博客"></a>转载其他自建博客</h2><p>将上述转载CSDN博客中<code>article_content</code>替换成<code>post-body</code>即可</p><p>其他博客依据上述规律<strong>找到对应的文章主体内容</strong>，然后按照转载CSDN博客的方法进行处理即可</p><hr><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://blog.csdn.net/zhongjianblackberry/article/details/79456338" target="_blank" rel="noopener">CSDN怎么转载别人的博客</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;这篇博客整理了转载博客到自己搭建的博客的方法，主要包括转载&lt;strong&gt;CSDN博客&lt;/strong&gt;、&lt;strong&gt;博客园博客&lt;/strong&gt;、&lt;strong&gt;简书&lt;/strong&gt;以及&lt;strong&gt;其他自建博客&lt;/strong&gt;等&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="折腾" scheme="http://showteeth.tech/categories/%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="工具" scheme="http://showteeth.tech/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>shell-数组</title>
    <link href="http://showteeth.tech/posts/46714.html"/>
    <id>http://showteeth.tech/posts/46714.html</id>
    <published>2019-03-06T15:36:25.000Z</published>
    <updated>2019-03-07T07:54:28.654Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>这里写摘要，显示更好看</p></div><a id="more"></a><h2 id="开始于二级标题"><a href="#开始于二级标题" class="headerlink" title="开始于二级标题"></a>开始于二级标题</h2><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://baijiahao.baidu.com/s?id=1608244941950314734&amp;wfr=spider&amp;for=pchttps://www.cnblogs.com/hanframe/p/3564313.html" target="_blank" rel="noopener">shell编程中使用数组进行操作</a></li><li><a href="http://www.runoob.com/linux/linux-shell-array.html" target="_blank" rel="noopener">Shell 数组</a></li><li><a href="https://www.kancloud.cn/thinkphp/linux-command-line" target="_blank" rel="noopener">The Linux Command Line 中文版</a></li><li><a href="https://nicesu.gitbooks.io/shell-guide/content/chapter4/46.html" target="_blank" rel="noopener">shell-guide</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;这里写摘要，显示更好看&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://showteeth.tech/categories/Linux/"/>
    
    
      <category term="shell编程" scheme="http://showteeth.tech/tags/shell%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>shell-if判断</title>
    <link href="http://showteeth.tech/posts/58105.html"/>
    <id>http://showteeth.tech/posts/58105.html</id>
    <published>2019-03-06T15:35:59.000Z</published>
    <updated>2019-03-07T07:54:28.651Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>这里写摘要，显示更好看</p></div><a id="more"></a><h2 id="开始于二级标题"><a href="#开始于二级标题" class="headerlink" title="开始于二级标题"></a>开始于二级标题</h2><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="http://man.linuxde.net/shell-script/shell-5" target="_blank" rel="noopener">条件测试操作与流程控制语句</a></li><li><a href="http://www.runoob.com/linux/linux-shell-process-control.html" target="_blank" rel="noopener">Shell 流程控制</a></li><li><a href="https://www.cnblogs.com/IcanFixIt/p/6782513.html" target="_blank" rel="noopener">Linux Shell——流程控制</a></li><li><a href="https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/106.html" target="_blank" rel="noopener">鸟哥的linux私房菜</a></li><li><a href="https://www.kancloud.cn/thinkphp/linux-command-line" target="_blank" rel="noopener">The Linux Command Line 中文版</a></li><li><a href="https://legacy.gitbook.com/book/linuxstory/advanced-bash-scripting-guide-in-chinese/details" target="_blank" rel="noopener">高级Bash脚本编程指南中文版</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;这里写摘要，显示更好看&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://showteeth.tech/categories/Linux/"/>
    
    
      <category term="shell编程" scheme="http://showteeth.tech/tags/shell%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>shell-循环结构</title>
    <link href="http://showteeth.tech/posts/16486.html"/>
    <id>http://showteeth.tech/posts/16486.html</id>
    <published>2019-03-06T15:35:40.000Z</published>
    <updated>2019-03-07T07:54:28.647Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>这里写摘要，显示更好看</p></div><a id="more"></a><h2 id="开始于二级标题"><a href="#开始于二级标题" class="headerlink" title="开始于二级标题"></a>开始于二级标题</h2><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="http://man.linuxde.net/shell-script/shell-5" target="_blank" rel="noopener">条件测试操作与流程控制语句</a></li><li><a href="http://www.runoob.com/linux/linux-shell-process-control.html" target="_blank" rel="noopener">Shell 流程控制</a></li><li><a href="https://www.cnblogs.com/IcanFixIt/p/6782513.html" target="_blank" rel="noopener">Linux Shell——流程控制</a></li><li><a href="https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/106.html" target="_blank" rel="noopener">鸟哥的linux私房菜</a></li><li><a href="https://www.kancloud.cn/thinkphp/linux-command-line" target="_blank" rel="noopener">The Linux Command Line 中文版</a></li><li><a href="https://legacy.gitbook.com/book/linuxstory/advanced-bash-scripting-guide-in-chinese/details" target="_blank" rel="noopener">高级Bash脚本编程指南中文版</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;这里写摘要，显示更好看&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://showteeth.tech/categories/Linux/"/>
    
    
      <category term="shell编程" scheme="http://showteeth.tech/tags/shell%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>diff-比较文件差异</title>
    <link href="http://showteeth.tech/posts/56778.html"/>
    <id>http://showteeth.tech/posts/56778.html</id>
    <published>2019-03-06T12:14:22.000Z</published>
    <updated>2019-03-06T13:04:14.240Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>这里写摘要，显示更好看</p></div><a id="more"></a><h2 id="diff简介"><a href="#diff简介" class="headerlink" title="diff简介"></a>diff简介</h2><p><mark>这个和前面讲到的<code>comm</code>命令和<code>cmp</code>命令的不同之处在于</mark>：</p><h2 id="diff命令用法"><a href="#diff命令用法" class="headerlink" title="diff命令用法"></a>diff命令用法</h2><h3 id="diff命令格式"><a href="#diff命令格式" class="headerlink" title="diff命令格式"></a>diff命令格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="diff-options说明"><a href="#diff-options说明" class="headerlink" title="diff options说明"></a>diff options说明</h3><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.cnblogs.com/peida/archive/2012/12/12/2814048.html" target="_blank" rel="noopener">实例较多</a></li><li><a href="https://linux.cn/article-2298-1.html" target="_blank" rel="noopener">举例说明Linux diff 命令</a></li><li><a href="http://www.runoob.com/linux/linux-comm-diff.html" target="_blank" rel="noopener">参数讲解</a></li><li><a href="http://www.ruanyifeng.com/blog/2012/08/how_to_read_diff.html" target="_blank" rel="noopener">清晰的讲解</a></li><li><a href="http://wiki.jikexueyuan.com/project/shell-learning/file-comparing-cmp-diff-patch.html" target="_blank" rel="noopener">文件比较 cmp，diff，patch</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;这里写摘要，显示更好看&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://showteeth.tech/categories/Linux/"/>
    
    
      <category term="常用基本命令" scheme="http://showteeth.tech/tags/%E5%B8%B8%E7%94%A8%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>cmp-比较文件差异</title>
    <link href="http://showteeth.tech/posts/62860.html"/>
    <id>http://showteeth.tech/posts/62860.html</id>
    <published>2019-03-06T11:57:37.000Z</published>
    <updated>2019-03-13T16:09:09.213Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>这里写摘要，显示更好看</p></div><a id="more"></a><h2 id="cmp简介"><a href="#cmp简介" class="headerlink" title="cmp简介"></a>cmp简介</h2><p><code>cmp</code>命令用于比较两个文件是否有差异；当相互比较的两个文件<strong>完全一样</strong>时，则该命令不会有输出结果；若发现<strong>有所差异</strong>，<strong>默认会标示出第一个不同之处的字符和列数编号</strong></p><p>若不指定任何文件名称或是所给予的文件名为<code>-</code>，则<code>cmp</code>指令会从标准输入读取数据</p><p><mark>这个和前面讲到的<code>comm</code>命令的不同之处在于</mark>：comm命令对已排序的文件进行比较并将结果分为3列，便于提取文件比较的结果，如得到两个文件的差集、交集、并集和对称差集等，而cmp命令侧重于比较两个文件差异，大多用于比较同一个文件修改之后和修改之前的差异，并且cmp比较文件不需要进行排序。</p><hr><p><br></p><h2 id="cmp命令用法"><a href="#cmp命令用法" class="headerlink" title="cmp命令用法"></a>cmp命令用法</h2><h3 id="cmp命令格式"><a href="#cmp命令格式" class="headerlink" title="cmp命令格式"></a>cmp命令格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">  cmp [OPTION] FILE1 [FILE2 [SKIP1 [SKIP2]]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># The optional SKIP1 and SKIP2 specify the number of bytes to skip</span></span><br><span class="line"><span class="comment"># at the beginning of each file (zero by default).</span></span><br></pre></td></tr></table></figure><p><strong>Compare two files byte by byte</strong></p><hr><h3 id="cmp-options说明"><a href="#cmp-options说明" class="headerlink" title="cmp options说明"></a>cmp options说明</h3><style>table th:first-of-type{width:15%}table th:nth-of-type(2){width:25%}table th:nth-of-type(3){width:60%}</style><table><thead><tr><th>参数</th><th>完整参数</th><th>说明</th></tr></thead><tbody><tr><td>-b</td><td>–print-bytes</td><td>除了标明差异处所在之外，一并显示该字符所对应字符和字节值</td></tr><tr><td>-i SKIP</td><td>–ignore-initial=SKIP</td><td>跳过一定的字节数(不包括SKIP)</td></tr><tr><td>-i SKIP1:SKIP2</td><td>–ignore-initial=SKIP1:SKIP2</td><td>从两个文件中跳过不同的字节数，SKIP1是FILE1跳过的字节数，SKIP为FILE2跳过的字节数</td></tr><tr><td>-l</td><td>–verbose</td><td>显示所有不同字节的字节位置（和值）</td></tr><tr><td>-n</td><td>–bytes=LIMIT</td><td>限制要比较的字节数(包括LIMIT)</td></tr><tr><td>-s</td><td>–quiet, –silent</td><td>抑制正常生成的输出，只返回文件是否相同的退出码(可以通过<code>$?</code>得到)</td></tr></tbody></table><hr><h3 id="cmp-i选项可选单位"><a href="#cmp-i选项可选单位" class="headerlink" title="cmp -i选项可选单位"></a>cmp -i选项可选单位</h3><table><thead><tr><th>简写</th><th>全称</th><th>说明</th></tr></thead><tbody><tr><td>kB</td><td>kilobytes</td><td>1000</td></tr><tr><td>K</td><td>kibibytes</td><td>1024</td></tr><tr><td>MB</td><td>megabytes</td><td>1,000,000</td></tr><tr><td>M</td><td>mebibytes</td><td>1,048,576</td></tr><tr><td>GB</td><td>gigabytes</td><td>1,000,000,000</td></tr><tr><td>G</td><td>gibibytes</td><td>1,073,741,824</td></tr></tbody></table><hr><p><br></p><h2 id="cmp用法实例"><a href="#cmp用法实例" class="headerlink" title="cmp用法实例"></a>cmp用法实例</h2><h3 id="测试文件"><a href="#测试文件" class="headerlink" title="测试文件"></a>测试文件</h3><blockquote><p><code>cat test1.txt</code><br>Absncn 50<br>Asldssja 60<br>Jslkadjls 85</p></blockquote><blockquote><p><code>cat test2.txt</code><br>Absncn 50<br>AsldssjE 62<br>Jslkadjls 85</p></blockquote><hr><h3 id="使用默认方式比较文件不同"><a href="#使用默认方式比较文件不同" class="headerlink" title="使用默认方式比较文件不同"></a>使用默认方式比较文件不同</h3><p>默认会告诉在第几行的第几个字节出现不同：</p><blockquote><p><code>cmp test1.txt test2.txt</code><br>test1.txt test2.txt differ: byte 18, line 2</p></blockquote><p><strong>注意这里的<code>byte 18</code>来源：系统默认编码方式为UTF-8(查看方式见<a href="http://showteeth.tech/posts/56690.html">这篇文章</a>)，1个英文字符 = 1个字节；换行符占一个字节；空格占一个字节；第二行的结果存在差异的话，字符会从第一行的第一个开始算起，叠加的，不是单独每一行算</strong></p><h3 id="b-显示不同的字节及字节值"><a href="#b-显示不同的字节及字节值" class="headerlink" title="-b-显示不同的字节及字节值"></a>-b-显示不同的字节及字节值</h3><blockquote><p><code>cmp -b test1.txt test2.txt</code><br>test1.txt test2.txt differ: byte 18, line 2 is <strong>141 a 105 E</strong></p></blockquote><p><strong>只会显示第一个，不会显示所有的</strong>，具体是字母a和E不同，字节值分别为141和105(这个没算。。。)</p><hr><h3 id="i-跳过指定的字节"><a href="#i-跳过指定的字节" class="headerlink" title="-i-跳过指定的字节"></a>-i-跳过指定的字节</h3><blockquote><p><code>cmp -b -i 18 test1.txt test2.txt</code><br>test1.txt test2.txt differ: <strong>byte 3</strong>, line 1 is 60 0 62 2</p></blockquote><p>跳过<strong>前18个之后开始的第3个字节</strong>，0和2不同</p><div class="note info"><p>注意这个是<strong>不包括指定跳过的那个字节位置</strong>，比如这里的字节数为18的位置</p></div><hr><h3 id="i-从两个文件跳过不同数量的字节"><a href="#i-从两个文件跳过不同数量的字节" class="headerlink" title="-i-从两个文件跳过不同数量的字节"></a>-i-从两个文件跳过不同数量的字节</h3><blockquote><p><code>cmp -b -i 18:18 test1.txt test2.txt</code><br>test1.txt test2.txt differ: byte 3, line 1 is 60 0 62 2</p></blockquote><p>18:18：第一个文件跳过的字节数为18，第二个文件跳过的字节数也是18</p><hr><h3 id="l-显示所有不同字节的字节位置（和值）"><a href="#l-显示所有不同字节的字节位置（和值）" class="headerlink" title="-l-显示所有不同字节的字节位置（和值）"></a>-l-显示所有不同字节的字节位置（和值）</h3><blockquote><p><code>cmp -l test1.txt test2.txt</code><br>18 141 105<br>21 60 62</p></blockquote><p>输出结果：</p><ul><li>第一列（如上所示）表示不同<strong>字节的位置</strong>（字节数）</li><li>第二列表示<strong>第一个文件</strong>中不同字节的字节值</li><li>第三列表示<strong>第二个文件</strong>中不同字节的字节值</li></ul><p>前面的<code>-b</code>等参数只会显示<strong>第一个</strong>不同的字节位置和值，这里会<strong>显示所有的</strong>字节数字和值</p><hr><h3 id="n-限制要比较的字节数"><a href="#n-限制要比较的字节数" class="headerlink" title="-n-限制要比较的字节数"></a>-n-限制要比较的字节数</h3><p>最多只比较的字符数：</p><blockquote><p><code>cmp -n 17 test1.txt test2.txt</code><br><code>cmp -n 18 test1.txt test2.txt</code><br>test1.txt test2.txt differ: <strong>byte 18</strong>, line 2</p></blockquote><p>如果和<code>-i</code>参数联合使用：</p><blockquote><p><code>cmp -b -l -i 3 -n 18 test1.txt test2.txt</code><br>15 141 a 105 E<br>18 60 0 62 2</p></blockquote><p>注意这里相比于没有设置跳过字节会多出一行差异的结果，<strong>表明-n是相对字节位置，而不是绝对的字节位置</strong></p><p>和不使用<code>-i</code>的对比：</p><blockquote><p><code>cmp -b -l -n 18 test1.txt test2.txt</code><br>18 141 a 105 E</p></blockquote><div class="note info"><ul><li>注意这里是<strong>包括指定跳过的那个字节位置</strong>，比如这里的字节数为18的位置，因为包括了所以才会输出在byte18位置存在区别</li><li><strong>-n指定的是相对字节位置，而不是绝对字节位置</strong>，比如上面跳过前3个字符之后出现差异的就成了第15个字节位置的，同时因为-n设置为18向后推移3个字节，就会出现了第二个不同的位置，而如果不设置-i参数就不会得到第二个不同的位置</li></ul></div><hr><h3 id="s-抑制正常生成的输出，只返回反映文件是否相同的退出码"><a href="#s-抑制正常生成的输出，只返回反映文件是否相同的退出码" class="headerlink" title="-s-抑制正常生成的输出，只返回反映文件是否相同的退出码"></a>-s-抑制正常生成的输出，只返回反映文件是否相同的退出码</h3><blockquote><p><code>cmp -s -b test1.txt test2.txt</code></p></blockquote><p>没有输出结果，也就是原本需要输出的在哪一行存在差异都不会输出来了，然后查看命令的退出码：</p><blockquote><p>echo $?</p></blockquote><p>得到的结果是<code>1</code>，表明文件是不相同的，这样可<strong>得到文件是否相同的信息，但是并不关注具体的差异在什么地方</strong></p><p>而如果不加<code>-s</code>就会正常输出：</p><blockquote><p><code>cmp -b test1.txt test2.txt</code><br>test1.txt test2.txt differ: byte 18, line 2 is 141 a 105 E</p></blockquote><p>同时不加<code>-s</code>查看查看命令的退出码：</p><blockquote><p>echo $?</p></blockquote><p>得到的结果和加了<code>-s</code>一样都返回的是<code>1</code></p><div class="note info"><p>在脚本中使用<code>cmp</code>命令时，此选项可以会派上用场。 例如，根据文件是否相同(通过访问命令的退出代码可以知道)来进行下一步的操作，这个时候我们可能并<strong>不关心具体文件的差异在什么地方，而是关心文件是不是有差异这个整体的结果</strong></p></div><h3 id="显示运行进度"><a href="#显示运行进度" class="headerlink" title="显示运行进度"></a>显示运行进度</h3><p>这个需要结合<a href="http://showteeth.tech/posts/6225.html">pv命令</a>，安装和使用<a href="http://showteeth.tech/posts/6225.html">pv命令</a>之后再进行学习，参考参考链接的前两个</p><hr><p><br></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.howtoforge.com/linux-cmp-command/" target="_blank" rel="noopener">Linux cmp command tutorial for beginners （7 examples）</a></li><li><a href="https://www.howtoing.com/linux-cmp-command" target="_blank" rel="noopener">Linux初学者的cmp命令教程（7个例子）</a></li><li><a href="https://www.computerhope.com/unix/ucmp.htm" target="_blank" rel="noopener">Linux cmp command-关于-i参数单位的问题很好</a></li><li><a href="https://www.tutorialspoint.com/unix_commands/cmp.htm" target="_blank" rel="noopener">cmp - Unix, Linux Command</a></li></ul><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;这里写摘要，显示更好看&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://showteeth.tech/categories/Linux/"/>
    
    
      <category term="常用基本命令" scheme="http://showteeth.tech/tags/%E5%B8%B8%E7%94%A8%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>journey</title>
    <link href="http://showteeth.tech/posts/34270.html"/>
    <id>http://showteeth.tech/posts/34270.html</id>
    <published>2019-03-06T08:12:34.000Z</published>
    <updated>2019-03-13T12:14:03.220Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>这里写摘要，显示更好看</p></div><a id="more"></a><h2 id="景点"><a href="#景点" class="headerlink" title="景点"></a>景点</h2><h3 id="磁器口"><a href="#磁器口" class="headerlink" title="磁器口"></a>磁器口</h3><ul><li>吃的：陈麻花-推荐<strong>陈昌银</strong>或者<strong>夏麻花</strong>、<strong>张老汉手工酸辣粉</strong>（磁器口必吃之一）</li><li>有很多文艺的小咖啡馆或者书店</li><li>磁器口的主街人满为患，商业化严重，<strong>更建议去侧街</strong>，也是咖啡馆一条街，客量少，店面装饰都很有文艺味儿，<strong>是来磁器口的正确打开方式</strong>。（在此安利一家咖啡馆——<strong>懒鱼时光馆</strong>，上图即是该咖啡馆，是一家有故事的咖啡馆）</li></ul><h3 id="洪崖洞"><a href="#洪崖洞" class="headerlink" title="洪崖洞"></a>洪崖洞</h3><ul><li><strong>晚上去</strong>，白天不好看，晚上有灯光</li><li>主要是建筑构造和风貌</li></ul><h3 id="南山一棵树观景台"><a href="#南山一棵树观景台" class="headerlink" title="南山一棵树观景台"></a>南山一棵树观景台</h3><ul><li>可以将重庆所有的美景尽收眼底！建议<strong>夜晚去</strong>，重庆的夜景很美很美很美！<ul><li>门票：门票30，学生证15</li></ul></li><li>吃的：泉水鸡、枇杷园（火锅）</li></ul><h3 id="十八梯"><a href="#十八梯" class="headerlink" title="十八梯"></a><del>十八梯</del></h3><ul><li>电影《从你的全世界路过》</li><li>十八梯是重庆渝中半岛的一条街，从重庆城的上半城（山顶）通到下半城（山脚），全部由石阶铺成，<strong>把山顶的繁华商业区和山下江边的老城区连起来</strong>。</li><li><strong>拆迁了</strong></li></ul><h3 id="朝天门两江游"><a href="#朝天门两江游" class="headerlink" title="朝天门两江游"></a>朝天门两江游</h3><ul><li>重庆很出名的两江交汇：<strong>长江与嘉陵江</strong></li><li>夜景</li></ul><h3 id="长江索道"><a href="#长江索道" class="headerlink" title="长江索道"></a>长江索道</h3><ul><li>到达对岸后不用着急回来可以在那边拍拍照，然后再返回来</li></ul><h3 id="皇冠大扶梯"><a href="#皇冠大扶梯" class="headerlink" title="皇冠大扶梯"></a>皇冠大扶梯</h3><ul><li>亚洲第二长的一级提升坡地大扶梯</li><li>这个扶梯<strong>不用刻意去</strong>，如果方便可以去坐坐，其实<em>就是一个长长的扶梯</em>，但是因为有坡度而且特别长所以很炫酷！</li></ul><h3 id="中山四路"><a href="#中山四路" class="headerlink" title="中山四路"></a>中山四路</h3><ul><li>历史遗迹很多，除了中国民主党派博物馆的特园外，此地还有桂园、周公馆、戴公馆、张骧公馆、国民政府总统府旧址等</li></ul><h3 id="解放碑"><a href="#解放碑" class="headerlink" title="解放碑"></a>解放碑</h3><ul><li><strong>解放碑是重庆的标志</strong>，特别是圣诞节和跨年的时候，大家会不约而同地去解放碑一同度过！场面壮观到每年都会提前进行封路。</li><li>解放碑那有一条<strong>好吃街</strong>，可以去吃吃～</li><li><strong>李串串</strong></li></ul><h3 id="两江影视城民国街"><a href="#两江影视城民国街" class="headerlink" title="两江影视城民国街"></a>两江影视城民国街</h3><ul><li>再现了百年老重庆风土人情</li><li>影视城里重现了当时的解放碑、磁器口、朝天门、十八梯，特别有意思</li><li>当地也可以<strong>租民国服装</strong></li></ul><h2 id="小吃"><a href="#小吃" class="headerlink" title="小吃"></a>小吃</h2><h3 id="重庆小面"><a href="#重庆小面" class="headerlink" title="重庆小面"></a>重庆小面</h3><h3 id="重庆火锅"><a href="#重庆火锅" class="headerlink" title="重庆火锅"></a>重庆火锅</h3><ul><li><strong>大龙火锅</strong>。以<strong>超辣</strong>闻名，吃这家店的人超级多，中午都得排很久的队</li></ul><h3 id="串串"><a href="#串串" class="headerlink" title="串串"></a>串串</h3><ul><li>串串推荐小郡肝、李记、怒火八零等等</li></ul><h3 id="酸辣粉-凉粉-冰粉凉虾-凉糕"><a href="#酸辣粉-凉粉-冰粉凉虾-凉糕" class="headerlink" title="酸辣粉/凉粉/冰粉凉虾/凉糕"></a>酸辣粉/凉粉/冰粉凉虾/凉糕</h3><ul><li><strong>莱得快</strong>的杂酱酸辣粉</li><li><strong>阿坤</strong>的杂酱酸辣粉、苕皮、海带，有点辣。但是阿坤里面有甜品所以可以也点一份甜品，防止被辣着，推荐它们的双皮奶。</li><li>好又来酸辣粉（口碑店家）、手工酸辣粉（视觉和味觉两不误）</li></ul><h3 id="麻辣鱼-酸菜鱼-尖椒兔"><a href="#麻辣鱼-酸菜鱼-尖椒兔" class="headerlink" title="麻辣鱼/酸菜鱼/尖椒兔"></a>麻辣鱼/酸菜鱼/尖椒兔</h3><ul><li>大渡口，店名是：<strong>霸王兔</strong></li></ul><h3 id="夜啤酒-万州烤鱼-烧烤"><a href="#夜啤酒-万州烤鱼-烧烤" class="headerlink" title="夜啤酒/万州烤鱼/烧烤"></a>夜啤酒/万州烤鱼/烧烤</h3><h3 id="奶制品"><a href="#奶制品" class="headerlink" title="奶制品"></a>奶制品</h3><ul><li>重庆本土的<strong>天友</strong>，以及后发的<strong>奶牛梦工厂</strong></li></ul><h2 id="参考路线"><a href="#参考路线" class="headerlink" title="参考路线"></a>参考路线</h2><ul><li><a href="https://www.zhihu.com/question/36219939/answer/109923082" target="_blank" rel="noopener">两天</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;这里写摘要，显示更好看&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="生活" scheme="http://showteeth.tech/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="旅游" scheme="http://showteeth.tech/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>comm-文件比较，文本文件的交集、差集与求差</title>
    <link href="http://showteeth.tech/posts/39582.html"/>
    <id>http://showteeth.tech/posts/39582.html</id>
    <published>2019-03-06T06:22:30.000Z</published>
    <updated>2019-03-07T03:24:23.127Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>对两个文件内容进行比较，注意文件<strong>需要排序</strong>，相比于其他比较文件的命令，<code>comm</code>可以将文件内容不同的分列显示，<strong>便于提取(文件求交、并、差、对称差等)所需要的内容</strong>，另外两个文件比较命令包括<code>cmp</code>、<code>diff</code></p></div><a id="more"></a><h2 id="comm用法"><a href="#comm用法" class="headerlink" title="comm用法"></a>comm用法</h2><p><code>comm</code>命令会<strong>一行行(line by line)地</strong>比较两个<mark>已排序文件</mark>的差异，并将其结果显示出来，如果没有指定任何参数，则会把<strong>结果分成3行显示</strong>：</p><ul><li>第1行<strong>仅</strong>是在<strong>第1个文件中</strong>出现过的列</li><li>第2行是<strong>仅</strong>在<strong>第2个文件中</strong>出现过的列</li><li>第3行则是在第1与第2个文件里<strong>都出现过</strong>的列。</li></ul><p>若给予的文件名称为<code>-</code>，则<code>comm</code>命令会从<strong>标准输入</strong>设备读取数据</p><h3 id="comm命令格式"><a href="#comm命令格式" class="headerlink" title="comm命令格式"></a>comm命令格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Usage: </span><br><span class="line">  comm [OPTION] FILE1 FILE2</span><br></pre></td></tr></table></figure><hr><h3 id="comm-options说明"><a href="#comm-options说明" class="headerlink" title="comm options说明"></a>comm options说明</h3><style>table th:first-of-type{width:20%}table th:nth-of-type(2){width:80%}</style><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-1</td><td>不显示第1列（即不显示只在file1中找到的行）</td></tr><tr><td>-2</td><td>不显示第2列（即不显示只在file2中找到的行）</td></tr><tr><td>-3</td><td>不显示第3列（即不显示在两个文件中都找到的行）</td></tr><tr><td>–check-order</td><td>判断所有输入文件是不是已经排好序</td></tr><tr><td>–nocheck-order</td><td>不判断所有输入文件是不是已经排好序</td></tr><tr><td>–output-delimiter=STR</td><td>指定输出结果的分隔符</td></tr></tbody></table><hr><p><br></p><h2 id="comm用法实例"><a href="#comm用法实例" class="headerlink" title="comm用法实例"></a>comm用法实例</h2><h3 id="测试文件"><a href="#测试文件" class="headerlink" title="测试文件"></a>测试文件</h3><blockquote><p>cat a.txt<br>aaa<br>bbb<br>ccc<br>111<br>ddd<br>eee<br>222</p></blockquote><blockquote><p>cat b.txt<br>bbb<br>ccc<br>aaa<br>hhh<br>ttt<br>jjj</p></blockquote><p>注意上面两个文件都没有排序，看看comm对没排序文件的处理</p><hr><h3 id="使用默认方式对文本进行比较"><a href="#使用默认方式对文本进行比较" class="headerlink" title="使用默认方式对文本进行比较"></a>使用默认方式对文本进行比较</h3><blockquote><p><code>comm a.txt b.txt</code><br>aaa<br>bbb<br>ccc<br>comm: file 1 is not in sorted order<br>comm: file 2 is not in sorted order<br>111<br>aaa<br>ddd<br>eee<br>222<br>hhh<br>ttt<br>jjj</p></blockquote><p>从上面可以看出，没排序comm命令会爆出问题，但是仍然会运行得到结果；发现因为没有排序的原因，第二个文件的<code>aaa</code>在第一个文件中也存在但是却被当成了file2独有的。<strong>总的来说就是如果没排序，comm命令会爆出问题但不会停止运行，并且结果会存在问题</strong>，正常结果如下：</p><blockquote><p><code>sort -k 1,1 a.txt |comm - &lt;(sort -k 1,1 b.txt)</code><br>111<br>222<br>aaa<br>bbb<br>ccc<br>ddd<br>eee<br>hhh<br>jjj<br>ttt</p></blockquote><p>可以看出默认情况会输出三列，第一列是第一个文件独有的内容，第二列是第二个文件独有的内容，第三列是第三个文件独有的内容，各列是以制表符<code>\t</code>作为定界符，可以通过对定界符-制表符<code>\t</code>的操作来达到相应的目的。</p><p>由于参数较为简单，这里就不单独列出每个参数单独的用法的示例，主要给出<strong>参数组合用法以及和定界符组合使用的示例如下</strong>：</p><table><thead><tr><th>集合操作</th><th>含义及对应的参数组合</th></tr></thead><tbody><tr><td>A∩B</td><td>文件交集，-12</td></tr><tr><td>A∪B</td><td>文件的并集，将输出整合为一列，去掉定界符\t</td></tr><tr><td>A-B</td><td>差集，-23</td></tr><tr><td>B-A</td><td>差集，-13</td></tr><tr><td>A∆B</td><td>对称差集，并集减去交集，也就是去除文件中相同的部分，需要使用-3以及将剩下两列整合为一列</td></tr></tbody></table><h3 id="12-A∩B-文件交集"><a href="#12-A∩B-文件交集" class="headerlink" title="-12-A∩B-文件交集"></a>-12-A∩B-文件交集</h3><p>默认输出结果的第三列就是两个文件共有的部分：</p><blockquote><p><code>sort -k 1,1 a.txt |comm -12 - &lt;(sort -k 1,1 b.txt)</code><br>aaa<br>bbb<br>ccc</p></blockquote><hr><h3 id="定界符-t-A∪B-文件的并集"><a href="#定界符-t-A∪B-文件的并集" class="headerlink" title="定界符\t-A∪B-文件的并集"></a>定界符\t-A∪B-文件的并集</h3><p>并集就是将三列输出结果合并：</p><blockquote><p><code>sort -k 1,1 a.txt |comm - &lt;(sort -k 1,1 b.txt) |sed &#39;s/\t//g&#39;</code><br>111<br>222<br>aaa<br>bbb<br>ccc<br>ddd<br>eee<br>hhh<br>jjj<br>ttt</p></blockquote><hr><h3 id="23-A-B-差集"><a href="#23-A-B-差集" class="headerlink" title="-23-A-B-差集"></a>-23-A-B-差集</h3><p>差集就是在A中但是不在B中的部分，去掉第三列(A、B共有的)以及第二列B独有的：</p><blockquote><p><code>sort -k 1,1 a.txt |comm -23 - &lt;(sort -k 1,1 b.txt)</code><br>111<br>222<br>ddd<br>eee</p></blockquote><hr><h3 id="12-B-A-差集"><a href="#12-B-A-差集" class="headerlink" title="-12-B-A-差集"></a>-12-B-A-差集</h3><p>差集就是在B中但是不在A中的部分，去掉第三列(A、B共有的)以及第一列A独有的：</p><blockquote><p><code>sort -k 1,1 a.txt |comm -13 - &lt;(sort -k 1,1 b.txt)</code><br>hhh<br>jjj<br>ttt</p></blockquote><hr><h3 id="3-定界符-t-A∆B-对称差集"><a href="#3-定界符-t-A∆B-对称差集" class="headerlink" title="-3+定界符\t-A∆B-对称差集"></a>-3+定界符\t-A∆B-对称差集</h3><p>对称差集就是两个文件独有的内容的并集：</p><blockquote><p><code>sort -k 1,1 a.txt |comm -3 - &lt;(sort -k 1,1 b.txt) |sed &#39;s/\t//g&#39;</code><br>111<br>222<br>ddd<br>eee<br>hhh<br>jjj<br>ttt</p></blockquote><hr><h3 id="多列文件的处理"><a href="#多列文件的处理" class="headerlink" title="多列文件的处理"></a>多列文件的处理</h3><p>多列文件处理会<strong>将一整行当成一个元素进行比较</strong>，来列出各个文件独有的、文件共有的信息，具体的每列代表的意思和单列文件相同，注意如果<strong>文件内容是使用<code>\t</code>作为分隔符，产生的结果输出会重叠</strong></p><blockquote><p><code>cat c.txt</code><br>aaa 111<br>bbb 222</p></blockquote><blockquote><p><code>cat d.txt</code><br>aaa 222<br>bbb 222<br>ccc 333</p></blockquote><blockquote><p><code>comm c.txt d.txt</code><br>aaa 111<br>aaa 222<br>bbb 222<br>ccc 333</p></blockquote><p>文件内容是使用<code>\t</code>作为分隔符，产生的结果输出会重叠：</p><blockquote><p><code>sed &#39;s/ /\t/&#39; c.txt |comm - &lt;(sed &#39;s/ /\t/&#39; d.txt)</code><br>aaa 111<br>aaa 222<br>bbb 222<br>ccc 333</p></blockquote><hr><p><br></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="http://man.linuxde.net/comm" target="_blank" rel="noopener">comm命令</a></li><li><a href="http://www.runoob.com/linux/linux-comm-comm.html" target="_blank" rel="noopener">Linux comm命令</a></li><li><a href="https://www.cnblogs.com/nerxious/archive/2013/01/09/2853004.html" target="_blank" rel="noopener">简明Linux命令行笔记：comm</a></li></ul><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;对两个文件内容进行比较，注意文件&lt;strong&gt;需要排序&lt;/strong&gt;，相比于其他比较文件的命令，&lt;code&gt;comm&lt;/code&gt;可以将文件内容不同的分列显示，&lt;strong&gt;便于提取(文件求交、并、差、对称差等)所需要的内容&lt;/strong&gt;，另外两个文件比较命令包括&lt;code&gt;cmp&lt;/code&gt;、&lt;code&gt;diff&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://showteeth.tech/categories/Linux/"/>
    
    
      <category term="常用基本命令" scheme="http://showteeth.tech/tags/%E5%B8%B8%E7%94%A8%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>anaconda安装多版本python及常用命令</title>
    <link href="http://showteeth.tech/posts/34297.html"/>
    <id>http://showteeth.tech/posts/34297.html</id>
    <published>2019-03-05T15:27:36.000Z</published>
    <updated>2019-03-07T01:47:33.958Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>anaconda作为python的包管理工具(现在已经不仅仅是python的，R的包以及其他很多包都有)非常使用和强大，这里主要学习了使用anaconda创建python2和python3环境，并在两者之间进行切换，最后还给出了anaconda的常用命令，后续还可以补充!</p></div><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>原本是通过anaconda给电脑安装的python3，但是今天在从github上下载使用一个package时候报错：</p><blockquote><p>SyntaxError: Missing parentheses in call to ‘print’. Did you mean print(‘File does not exist: %s’ % filepath)?</p></blockquote><p>后来发现这个是因为<strong>python版本的问题</strong>，所以就需要<strong>重新再安装一个python2的环境</strong></p><hr><h2 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h2><p>这个本来可以使用简单地打开<code>anaconda navigator</code>图形界面进行<code>creat</code>环境即可，但是秉承着想对anaconda进行学习的态度，这里主要使用命令行的形式。</p><h3 id="显示所有环境名字和路径"><a href="#显示所有环境名字和路径" class="headerlink" title="显示所有环境名字和路径"></a>显示所有环境名字和路径</h3><p>创建新环境之前先看看目前的电脑有哪些环境：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info --envs</span><br></pre></td></tr></table></figure><p></p><blockquote><p># conda environments:<br>#<br>base * C:\Users\14910\Anaconda3<br>rstudio C:\Users\14910\Anaconda3\envs\rstudio</p></blockquote><p>发现电脑只有一个原装的<code>base</code>环境，也就是<code>python3</code>的环境以及我自己安装的<code>rstudio</code>环境，同时需要注意<strong>上面的<code>*</code>表明是当前使用的环境！</strong></p><hr><h3 id="创建环境并指定环境名称和python版本"><a href="#创建环境并指定环境名称和python版本" class="headerlink" title="创建环境并指定环境名称和python版本"></a>创建环境并指定环境名称和python版本</h3><p>这一步是使用<code>conda create</code>创建环境，同时指定环境的名称为<code>pyenv2_7</code>，使用的python版本为<code>python=2.7</code>：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --name pyenv2_7 python=2.7</span><br></pre></td></tr></table></figure><p></p><hr><h3 id="再次显示所有环境名字和路径"><a href="#再次显示所有环境名字和路径" class="headerlink" title="再次显示所有环境名字和路径"></a>再次显示所有环境名字和路径</h3><p>创建新环境再次查看现在所有的环境名称和对应的路径：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info --envs</span><br></pre></td></tr></table></figure><p></p><p>发现已经出现了新建的环境：</p><blockquote><p># conda environments:<br>#<br>base * C:\Users\14910\Anaconda3<br>pyenv2_7 C:\Users\14910\Anaconda3\envs\pyenv2_7<br>rstudio C:\Users\14910\Anaconda3\envs\rstudio</p></blockquote><p>由于只是创建了环境，还没有激活，所以当前使用的环境(<code>*</code>标记的)还是<code>base</code>环境，<strong>新建的环境需要激活才能够使用</strong></p><hr><h3 id="激活环境"><a href="#激活环境" class="headerlink" title="激活环境"></a>激活环境</h3><p>为了能够使用新创建的环境还需要激活：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate pyenv2_7</span><br></pre></td></tr></table></figure><p></p><p>为了验证环境是不是已经成功应用，检查python版本：</p><blockquote><p>python –version<br>Python 2.7.15 :: Anaconda, Inc.</p></blockquote><p>发现环境已经安装成功</p><hr><h3 id="退出环境"><a href="#退出环境" class="headerlink" title="退出环境"></a>退出环境</h3><p>使用完成之后推出新建的环境，回到<code>base</code>环境：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><p></p><p><strong>注意<code>conda deactivate</code>后面不需要跟退出的环境名，直接就退出当前环境，退出环境之后直接就进入了base环境</strong>。</p><hr><h2 id="anaconda-常用命令"><a href="#anaconda-常用命令" class="headerlink" title="anaconda 常用命令"></a>anaconda 常用命令</h2><ul><li>activate // 切换到base环境</li><li>activate learn // 切换到learn环境</li><li>conda deactivate // 退出当前环境</li><li>conda create -n learn python=3 // 创建一个名为learn的环境并指定python版本为3(的最新版本)</li><li>conda env list (conda env –info) // 列出conda管理的所有环境</li><li>conda list // 列出当前环境的所有包</li><li>conda install requests (pip install requests) // 安装requests包</li><li>conda remove requests (pip uninstall requests) // 卸载requets包</li><li>conda update requests // 更新requests包</li><li>conda remove -n learn –all // <strong>删除learn环境及下属所有包</strong></li><li>conda env export &gt; environment.yaml // <strong>导出当前环境的包信息</strong></li><li>conda env create -f environment.yaml // <strong>用配置文件创建新的虚拟环境</strong></li></ul><hr><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://blog.csdn.net/tangwenbo124/article/details/74784044" target="_blank" rel="noopener">ananconda创建新环境，python 2.7、3.5共存，pycharm 使用conda新环境，win10、linux下通用</a></li><li><a href="https://www.jb51.net/article/114614.htm" target="_blank" rel="noopener">利用Anaconda完美解决Python 2与python 3的共存问题</a></li></ul><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;anaconda作为python的包管理工具(现在已经不仅仅是python的，R的包以及其他很多包都有)非常使用和强大，这里主要学习了使用anaconda创建python2和python3环境，并在两者之间进行切换，最后还给出了anaconda的常用命令，后续还可以补充!&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Python" scheme="http://showteeth.tech/categories/Python/"/>
    
    
      <category term="工具" scheme="http://showteeth.tech/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>使用Travis CI自动部署github项目</title>
    <link href="http://showteeth.tech/posts/62916.html"/>
    <id>http://showteeth.tech/posts/62916.html</id>
    <published>2019-03-05T01:26:30.000Z</published>
    <updated>2019-03-06T04:41:05.761Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>linux系统，换电脑之后再写！</p></div><a id="more"></a><h2 id="开始于二级标题"><a href="#开始于二级标题" class="headerlink" title="开始于二级标题"></a>开始于二级标题</h2><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://segmentfault.com/a/1190000011218410?utm_source=tag-newest" target="_blank" rel="noopener">Travis CI 自动化部署博客</a></li><li><a href="http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html" target="_blank" rel="noopener">持续集成服务 Travis CI 教程</a></li><li><a href="https://www.cnblogs.com/zqzjs/p/6119750.html" target="_blank" rel="noopener">Travis CI用来持续集成你的项目</a></li><li><a href="https://www.cnblogs.com/morang/p/7228488.html" target="_blank" rel="noopener">使用travis-ci自动部署github上的项目</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;linux系统，换电脑之后再写！&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="折腾" scheme="http://showteeth.tech/categories/%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="工具" scheme="http://showteeth.tech/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>管理多个SSH公钥</title>
    <link href="http://showteeth.tech/posts/51573.html"/>
    <id>http://showteeth.tech/posts/51573.html</id>
    <published>2019-03-05T01:21:56.000Z</published>
    <updated>2019-03-05T09:20:37.015Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>项目托管可能需要在多个平台上进行，这就需要设置多个SSH公钥来简化代码提交步骤，这里学习总结了同时使用多个SSH公钥提交代码至不同平台（coding pages、github）的方法</p></div><a id="more"></a><h2 id="SSH-key介绍"><a href="#SSH-key介绍" class="headerlink" title="SSH key介绍"></a>SSH key介绍</h2><p>SSH key提供了一种与GitHub或其他平台通信的方式，通过这种方式，能够在不输入密码的情况下，将GitHub或其他平台作为自己的remote端服务器，进行版本控制。</p><p>需要注意的是<strong>不同平台的SSH key各不相同</strong>，所以为了能在各个平台上方便地使用git进行版本控制，就需要设置多个SSH key。</p><p><strong>使用SSH key的步骤</strong>：</p><ul><li>在客户端生成SSH key（密钥对：公钥-&gt;锁头和私钥-&gt;钥匙，利用了公钥和私钥实现数据加密和解密）</li><li>在服务端的配置文件中加入你的公钥。（比如我们需要再GitHub中粘贴你的公钥）</li></ul><p><strong>具体原理</strong>：用户将自己的公钥储存在远程主机上，登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回远程主机，远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录，不再要求密码。</p><hr><p><br></p><h2 id="生成SSH-key"><a href="#生成SSH-key" class="headerlink" title="生成SSH key"></a>生成SSH key</h2><p>默认情况下，使用<code>ssh-keygen</code>生成会在<code>C:\Users\user\.ssh</code>目录下生成SSH key(<code>id_rsa</code>和<code>id_rsa.pub(公钥)</code>)，为了使生成了SSH key互不干扰，所以需要使用<code>-f</code>参数进行设置生成了SSH key名称，不然可能会覆盖。</p><p>在<strong>git bash</strong>中输入：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"YOUR_EMAIL@YOUREMAIL.COM"</span> -f ~/.ssh/keyname(eg:github)</span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"YOUR_EMAIL@YOUREMAIL.COM"</span> -f ~/.ssh/coding_pages</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line">-t：指定要创建的密钥类型，默认是 rsa ，可以省略</span><br><span class="line">-C：添加注释，比如邮箱；</span><br><span class="line">-f：指定用来保存密钥的文件名；</span><br><span class="line">-b：指定密钥长度；</span><br><span class="line">-e：读取openssh的私钥或者公钥文件；</span><br><span class="line">-i：读取未加密的ssh-v2兼容的私钥/公钥文件，然后在标准输出设备上显示openssh兼容的私钥/公钥；</span><br><span class="line">-l：显示公钥文件的指纹数据；</span><br><span class="line">-N：提供一个新密语；</span><br><span class="line">-P：提供（旧）密语；</span><br><span class="line">-q：静默模式；</span><br></pre></td></tr></table></figure><p></p><p>上述命令输入后，会出现<strong>如下提示</strong>：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line"><span class="comment"># Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]</span></span><br></pre></td></tr></table></figure><p></p><ul><li>可以不输入文件名，使用默认文件名（推荐），那么就会生成 github 和 github.pub 两个秘钥文件；</li><li>接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是github管理者的密码）；</li><li>也可以不输入密码，直接按回车，那么push的时候就不需要输入密码，直接提交到github上了；</li><li>将 github.pub 文件的内容添加到github上面的ssh key</li></ul><p>以上是生成一个的过程，生成另一个的过程也是相同的操作。</p><hr><p><br></p><h2 id="添加生成的SSH"><a href="#添加生成的SSH" class="headerlink" title="添加生成的SSH"></a>添加生成的SSH</h2><p>将上述得到的公钥(以<strong>pub结尾的文件</strong>内容复制到平台相应的ssh key添加部位)：</p><div><br><img title="github_key" alt="github_key" class="class1 class2" src="http://pn9abh3rj.bkt.clouddn.com/static/images/github_key.png?imageView2/2/w/600"><br></div><div><br><img title="coding_pages_key" alt="coding_pages_key" class="class1 class2" src="http://pn9abh3rj.bkt.clouddn.com/static/images/coding_pages_key.png?imageView2/2/w/600"><br></div><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>在 <code>C:\Users\user\.ssh</code> 目录下新建一个config文件，并添加如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitlab</span></span><br><span class="line">Host 公司github的地址 如：github.com</span><br><span class="line">HostName 公司github的地址 如：github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/github</span><br><span class="line"></span><br><span class="line"><span class="comment">#github</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/github</span><br><span class="line"></span><br><span class="line"><span class="comment">#github</span></span><br><span class="line">Host git.dev.tencent.com</span><br><span class="line">    HostName git.dev.tencent.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/coding_pages</span><br></pre></td></tr></table></figure><p>上述host地址的得到可以通过点击平台任意一个项目的<code>clone and download</code>看到，冒号<code>:</code>前面的就是host地址了</p><hr><p><br></p><h2 id="验证SSH-key是否添加成功"><a href="#验证SSH-key是否添加成功" class="headerlink" title="验证SSH key是否添加成功"></a>验证SSH key是否添加成功</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># github</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># coding pages</span></span><br><span class="line">ssh -T git@git.dev.tencent.com</span><br></pre></td></tr></table></figure><p>输出结果：</p><blockquote><p>Hi showteeth! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><blockquote><p>Coding 提示: Hello showteeth, You’ve connected to Coding.net via SSH. This is a personal key.<br>showteeth，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥</p></blockquote><p>到这里留完成了管理多个SSH公钥的步骤，接下来就可以不用输入密码地将代码托管到相应的平台上了!</p><hr><p><br></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.jianshu.com/p/3e57bb0f8185" target="_blank" rel="noopener">如何同时使用多个SSH公钥提交代码至不同平台</a></li><li><a href="https://blog.csdn.net/DBB_zifeng/article/details/71698865" target="_blank" rel="noopener">管理多个SSH公钥密钥</a></li><li><a href="https://www.jianshu.com/p/a869072a0092" target="_blank" rel="noopener">同一台电脑关于多个SSH KEY管理</a></li></ul><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;项目托管可能需要在多个平台上进行，这就需要设置多个SSH公钥来简化代码提交步骤，这里学习总结了同时使用多个SSH公钥提交代码至不同平台（coding pages、github）的方法&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="折腾" scheme="http://showteeth.tech/categories/%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="工具" scheme="http://showteeth.tech/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>PDF转HTML-pdf2htmlex</title>
    <link href="http://showteeth.tech/posts/40996.html"/>
    <id>http://showteeth.tech/posts/40996.html</id>
    <published>2019-03-04T03:41:11.000Z</published>
    <updated>2019-03-04T06:43:30.913Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>pdf2htmlex是一款将pdf文件转换为html文件的工具，在github上有接近8000个star！这里主要介绍了其安装和使用方法，安装在windows下是使用了docker。</p></div><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="windows下安装"><a href="#windows下安装" class="headerlink" title="windows下安装"></a>windows下安装</h3><p>由于电脑是windows系统，所以只能按照<a href="https://gist.github.com/cnstar9988/3571c66b49050d98df92142dc19fbb00" target="_blank" rel="noopener">这里</a>给定的教程进行安装，无奈尝试了很多次，最终都以失败告终，都有点想放弃使用这个工具了，但是后来尝试了其他工具如<a href="https://github.com/mgufrone/pdf-to-html" target="_blank" rel="noopener">pdf-to-html</a>，但是效果很差，出来的效果和原本的pdf差很多，所以还是放弃了。</p><p>最近忽然发现应该可以使用docker进行安装，所以尝试使用<a href="https://www.docker.com/" target="_blank" rel="noopener">docker</a>，接下来就是安装和使用docker：</p><ul><li>注册docker账号然后下载</li><li>安装docker，这里注意如果电脑上安装了360会提示<strong>发现黑客新建用户帐号，建议阻止</strong>，鉴于360的一贯行为以及阻止后不能顺利安装，我选择了允许操作</li><li>安装完成之后会<strong>注销和重启电脑</strong>，这个按照提示操作即可</li><li>最后需要注意的是<strong>运行docker是在命令行形式下运行</strong>，而不是直接打开桌面的快捷方式</li></ul><hr><h3 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h3><p>使用docker安装pdf2htmlex，可以参考<a href="https://github.com/BWITS/pdf2htmlEX_docker" target="_blank" rel="noopener">官方给出的教程</a>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull bwits/pdf2htmlex-alpine</span><br></pre></td></tr></table></figure><p>输入上述命令后<strong>发现错误</strong>：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error response from daemon: Get https://registry-1.docker.io/v2/: net/http: request canceled <span class="keyword">while</span> waiting <span class="keyword">for</span> connection (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br></pre></td></tr></table></figure><p></p><p>上网搜了一下，发现这个错误是因为网络原因导致无法拉取镜像，解决方法：<strong>使用国内的Docker仓库daocloud</strong>：</p><ul><li>进入<a href="https://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="noopener">daocloud关于docker加速器的网站</a>，找到<strong>配置 Docker 加速器</strong>下对应的操作系统，因为我使用的windows系统，所以选择windows系统下的<code>http://f1361db2.m.daocloud.io</code></li></ul><img title="docker配置镜像" alt="docker配置镜像" class="class1 class2" src="http://pn9abh3rj.bkt.clouddn.com/static/images/docker配置镜像2.png?imageView2/2/w/500"><ul><li>将上述所得到的的地址写入<code>docker-&gt;setting-&gt;daemon-&gt;registry mirrors</code>中，然后<strong>apply</strong>，docker会提示<strong>restart</strong>：</li></ul><img title="配置docker加速器" alt="配置docker加速器" class="class1 class2" src="http://pn9abh3rj.bkt.clouddn.com/static/images/docker配置镜像.png?imageView2/2/w/500"><ul><li>上述操作完成之后重新执行命令，发现下载速度飞快~~~</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull bwits/pdf2htmlex-alpine</span><br></pre></td></tr></table></figure><hr><p><br></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="通过docker命令"><a href="#通过docker命令" class="headerlink" title="通过docker命令"></a>通过docker命令</h3><p>详细的使用参考<a href="https://github.com/coolwanglu/pdf2htmlEX/wiki/Quick-Start" target="_blank" rel="noopener">工具的github</a>，这里我只尝试较为简单的：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -ti --rm -v D:/pdf2html:/pdf bwits/pdf2htmlex pdf2htmlEX --zoom 1.8  resume.pdf</span><br></pre></td></tr></table></figure><p></p><p>用到的docker参数说明：</p><ul><li><code>-v</code>：挂载宿主机目录，~/pdf对应于C:\Users\user\pdf，/pdf的容器的目录，在容器启动后，容器内会自动创建/pdf目录，也就是冒号<code>:</code>前面的目录是宿主机目录，后面的目录是容器内目录。<strong>注意使用时docker会提示需要使用文件权限</strong>，如果宿主机目录放在C盘，还要输入电脑密码</li><li><code>--rm</code>：默认情况下，每个container在退出时，它的文件系统也会保存下来，该参数可以让docker在container结束时自动清理其所产生的数据</li><li><code>-ti</code>：以交互模式启动一个容器</li></ul><hr><h3 id="创建命令调用别名"><a href="#创建命令调用别名" class="headerlink" title="创建命令调用别名"></a>创建命令调用别名</h3><p>因为使用的docker安装，每次调用可能全长命令比较麻烦，所以这里使用alias创建命令别名-pdf2htmlEX：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自己修改挂载目录</span></span><br><span class="line"><span class="built_in">alias</span> pdf2htmlEX=<span class="string">"docker run -ti --rm -v D:/pdf2html:/pdf bwits/pdf2htmlex pdf2htmlEX"</span></span><br></pre></td></tr></table></figure><p>这里一直没有成功不知道是为什么，总是显示<code>文件名、目录名或卷标语法不正确。</code>，但我直接使用命令不使用alias的方式却能正常使用，所以就没有继续使用这个</p><blockquote><p>系统自带的cmd是不支持alias的，我这里使用的是<a href="https://cmder.net/" target="_blank" rel="noopener">cmder</a>，很强大的命令行工具，关于如何在windows下配置这个工具，可以参考博客中关于配置cmder的文章</p></blockquote><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;pdf2htmlex是一款将pdf文件转换为html文件的工具，在github上有接近8000个star！这里主要介绍了其安装和使用方法，安装在windows下是使用了docker。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="工具" scheme="http://showteeth.tech/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="pdf2htmlex" scheme="http://showteeth.tech/tags/pdf2htmlex/"/>
    
  </entry>
  
  <entry>
    <title>coding_pages和mkdocs使用</title>
    <link href="http://showteeth.tech/posts/54578.html"/>
    <id>http://showteeth.tech/posts/54578.html</id>
    <published>2019-03-03T08:31:43.000Z</published>
    <updated>2019-03-05T09:56:22.851Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>coding pages和mkdocs使用简介</p></div><a id="more"></a><h2 id="注册coding-pages"><a href="#注册coding-pages" class="headerlink" title="注册coding pages"></a>注册coding pages</h2><ul><li>前往其<a href="https://coding.net/" target="_blank" rel="noopener">官网</a>，常规的注册方法即可</li><li>关于会员：<ul><li><a href="https://feedback.coding.net/topics/7257" target="_blank" rel="noopener">免费升级</a>好像</li><li>升级之前不可以创建项目，如果有项目需要转让或者删除，具体操作步骤<a href="https://dev.tencent.com/help/doc/account/up-to-tencent#CODING-3" target="_blank" rel="noopener">参考文章</a></li></ul></li></ul><hr><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><ul><li>填写项目标识，项目标识在最后创建完pages之后就会显示为username.coding.me/项目标识/</li><li>项目名称填写：username.coding.me，相当于 github 上面的 name.github.io</li><li>创建完成即进入项目，选择代码下的代码浏览，创建<code>index.html</code>页面(注意名字一定要叫 <code>index.html</code>)，随意写一段话：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My Coding Pages<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello Coding!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>然后点击左侧<strong>代码</strong>下的 <strong>Pages 服务</strong>，选择<strong>静态 Pages 服务</strong>，一键创建pages</li><li>静态 Coding Pages 允许的部署分支来源为master 分支和coding-pages 分支，默认部署来源是master 分支，用户可在设置(右上角)里更改部署来源（实测发现只有master分支）。部署成功后后可通过<code>&lt;user_name&gt;.coding.me／&lt;project_name&gt;</code>形式的 URL 访问静态 Pages</li><li>如果需要自定义域名，这个也在pages服务中的设置(右上角)中进行设置</li></ul><hr><p><br></p><h2 id="结合mkdocs"><a href="#结合mkdocs" class="headerlink" title="结合mkdocs"></a>结合mkdocs</h2><h3 id="安装相关packages"><a href="#安装相关packages" class="headerlink" title="安装相关packages"></a>安装相关packages</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装mkdocs</span></span><br><span class="line">pip install mkdocs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装主题</span></span><br><span class="line">pip install mkdocs-material</span><br></pre></td></tr></table></figure><hr><h3 id="常规用法："><a href="#常规用法：" class="headerlink" title="常规用法："></a>常规用法：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建新项目</span></span><br><span class="line">mkdocs new my-project</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动内建服务器</span></span><br><span class="line">mkdocs serve</span><br><span class="line"></span><br><span class="line"><span class="comment"># 站点生成，创建了一个 site 新目录</span></span><br><span class="line">mkdocs build</span><br></pre></td></tr></table></figure><hr><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改主题和头像</span></span><br><span class="line">theme:</span><br><span class="line">  name: material</span><br><span class="line">  favicon: <span class="string">'/dark_logo_16x16.jpg'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加页面</span></span><br><span class="line">nav:</span><br><span class="line">- 主页 : index.md</span><br><span class="line">- 软件 : about.md</span><br><span class="line">- 项目 : about.md</span><br><span class="line">- 关于 : about.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 支持中文搜索，虽然search功能(lunr.js)暂不直接支持中文，但测试发现设置为日语后，中文和英文搜索都可以使用</span></span><br><span class="line">extra:</span><br><span class="line">  search:</span><br><span class="line">    language: <span class="string">'jp'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加扩展</span></span><br><span class="line">markdown_extensions:</span><br><span class="line">  - admonition</span><br><span class="line">  - codehilite:</span><br><span class="line">      guess_lang: <span class="literal">false</span></span><br><span class="line">      linenums: <span class="literal">false</span></span><br><span class="line">  ......</span><br><span class="line"><span class="comment"># 自定义的CSS和JS</span></span><br><span class="line">extra_javascript:</span><br><span class="line">  - <span class="string">'js/extra.js'</span></span><br><span class="line">  - <span class="string">'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML'</span></span><br><span class="line"></span><br><span class="line">extra_css:</span><br><span class="line">  - <span class="string">'css/extra.css'</span></span><br></pre></td></tr></table></figure><hr><h3 id="上传到coding-pages"><a href="#上传到coding-pages" class="headerlink" title="上传到coding pages"></a>上传到coding pages</h3><ul><li>将coding pages项目clone到本地：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里本想使用ssh的链接，但是失败，提示repo不存在，但是使用https的却可以成功，需要再看看问题</span></span><br><span class="line">git <span class="built_in">clone</span> https://git.dev.tencent.com/showteeth/project.git bio_projects</span><br></pre></td></tr></table></figure><ul><li>将原本mkdoc目录下的文件拷进这个目录</li><li><p>部署到coding pages，详细参考<a href="https://www.mkdocs.org/user-guide/deploying-your-docs/" target="_blank" rel="noopener">官方教程</a></p><ul><li>自动将相应内容推送到项目的 master 分支上，默认会部署在 gh-pages 分支上，而我的账户好像只能部署在master分支上，所以只能修改分支<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mkdocs gh-deploy -b master</span><br></pre></td></tr></table></figure></li></ul></li><li><p>输入链接即可访问</p></li></ul><p>最后吐槽一句：coding pages真的好慢好慢！！！！</p><hr><p><br></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.mkdocs.org/" target="_blank" rel="noopener">mkdocs的官方网站</a></li><li><a href="https://github.com/mkdocs/mkdocs" target="_blank" rel="noopener">mkdocs的github</a></li><li><a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">mkdocs主题material的相关材料（拓展、代码高亮）</a></li><li><a href="https://docs.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">readthedocs的官方网站（介绍的比较简答，具体实施还是需要看mkdocs的网站说明）</a></li><li><a href="https://readthedocs.org/" target="_blank" rel="noopener">readthedocs托管文档</a></li><li><a href="https://cyent.github.io/markdown-with-mkdocs-material/syntax/note_style/" target="_blank" rel="noopener">支持的markdown语法</a></li><li><a href="https://cyent.github.io/markdown-with-mkdocs-material/" target="_blank" rel="noopener">基于mkdocs-material搭建个人静态博客(含支持的markdown语法)</a></li><li><a href="https://docs.flc.io/more/github-travis-mkdocs-document/" target="_blank" rel="noopener">使用mkdocs搭建的文档库</a></li></ul><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;coding pages和mkdocs使用简介&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="折腾" scheme="http://showteeth.tech/categories/%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="coding pages" scheme="http://showteeth.tech/tags/coding-pages/"/>
    
  </entry>
  
  <entry>
    <title>jupyter主题、插件、技巧、server搭建</title>
    <link href="http://showteeth.tech/posts/13473.html"/>
    <id>http://showteeth.tech/posts/13473.html</id>
    <published>2019-03-02T14:16:26.000Z</published>
    <updated>2019-03-05T07:55:51.248Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>针对默认的jupyter notebook的页面进行修改、增加一些插件使jupyter的使用更加方便，整理一些jupyter使用技巧，最后是关于搭建jupyter server的内容</p></div><a id="more"></a><h2 id="jupyter默认页面的修改"><a href="#jupyter默认页面的修改" class="headerlink" title="jupyter默认页面的修改"></a>jupyter默认页面的修改</h2><p>jupyter默认页面的修改主要是使用<a href="https://github.com/dunovank/jupyter-themes" target="_blank" rel="noopener">jupyter-themes</a>包。</p><h3 id="jupyter-themes安装"><a href="#jupyter-themes安装" class="headerlink" title="jupyter-themes安装"></a>jupyter-themes安装</h3><p>常规的<code>pip</code>安装方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install jupyterthemes</span></span><br><span class="line">pip install jupyterthemes</span><br><span class="line"></span><br><span class="line"><span class="comment"># upgrade to latest version</span></span><br><span class="line">pip install --upgrade jupyterthemes</span><br></pre></td></tr></table></figure><ul><li>为了达到最好的效果，建议notebook的版本是<code>&gt;=5.6.0</code>，如果低于此版本可以使用<code>pip install --upgrade notebook</code>进行升级</li><li>refreshing / removing / resetting：如果想要恢复默认值或者使新采用的主题生效，可能需要清除浏览器缓存（不一定非要进行，看自己的浏览器和系统，真遇到情况可以参考<a href="https://github.com/dunovank/jupyter-themes/issues/86" target="_blank" rel="noopener">issue</a>）；进行上述操作后刷新浏览器肯定是要刷新浏览器的！</li><li>安装或其他问题直接上<a href="https://github.com/dunovank/jupyter-themes" target="_blank" rel="noopener">github</a>找答案！</li></ul><hr><h3 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h3><p>命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jt  [-h] [-l] [-t THEME] [-f MONOFONT] [-fs MONOSIZE] [-nf NBFONT]</span><br><span class="line">    [-nfs NBFONTSIZE] [-tf TCFONT] [-tfs TCFONTSIZE] [-dfs DFFONTSIZE]</span><br><span class="line">    [-m MARGINS] [-cursw CURSORWIDTH] [-cursc CURSORCOLOR] [-vim]</span><br><span class="line">    [-cellw CELLWIDTH] [-lineh LINEHEIGHT] [-altp] [-altmd] [-altout]</span><br><span class="line">    [-P] [-T] [-N] [-r] [-dfonts]</span><br></pre></td></tr></table></figure><p>具体的参数说明：</p><table><thead><tr><th>cl options</th><th>arg</th><th>default</th></tr></thead><tbody><tr><td>Usage help</td><td>-h</td><td>–</td></tr><tr><td>List Themes</td><td>-l</td><td>–</td></tr><tr><td>Theme Name to Install</td><td>-t</td><td>–</td></tr><tr><td>Code Font</td><td>-f</td><td>–</td></tr><tr><td>Code Font-Size</td><td>-fs</td><td>11</td></tr><tr><td>Notebook Font</td><td>-nf</td><td>–</td></tr><tr><td>Notebook Font Size</td><td>-nfs</td><td>13</td></tr><tr><td>Text/MD Cell Font</td><td>-tf</td><td>–</td></tr><tr><td>Text/MD Cell Fontsize</td><td>-tfs</td><td>13</td></tr><tr><td>Pandas DF Fontsize</td><td>-dfs</td><td>9</td></tr><tr><td>Output Area Fontsize</td><td>-ofs</td><td>8.5</td></tr><tr><td>Mathjax Fontsize (%)</td><td>-mathfs</td><td>100</td></tr><tr><td>Intro Page Margins</td><td>-m</td><td>auto</td></tr><tr><td>Cell Width</td><td>-cellw</td><td>980</td></tr><tr><td>Line Height</td><td>-lineh</td><td>170</td></tr><tr><td>Cursor Width</td><td>-cursw</td><td>2</td></tr><tr><td>Cursor Color</td><td>-cursc</td><td>–</td></tr><tr><td>Alt Prompt Layout</td><td>-altp</td><td>–</td></tr><tr><td>Alt Markdown BG Color</td><td>-altmd</td><td>–</td></tr><tr><td>Alt Output BG Color</td><td>-altout</td><td>–</td></tr><tr><td>Style Vim NBExt*</td><td>-vim</td><td>–</td></tr><tr><td>Toolbar Visible</td><td>-T</td><td>–</td></tr><tr><td>Name &amp; Logo Visible</td><td>-N</td><td>–</td></tr><tr><td>Kernel Logo Visible</td><td>-kl</td><td>–</td></tr><tr><td>Reset Default Theme</td><td>-r</td><td>–</td></tr><tr><td>Force Default Fonts</td><td>-dfonts</td><td>–</td></tr></tbody></table><p>github上有具体的示例用法，建议大家去看看，我这里挑选我最喜欢的配置如下：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jt -t monokai -f firacode -fs 12 -cellw 70% -ofs 10 -dfs 11 -T -N -altp -lineh 140</span><br></pre></td></tr></table></figure><p></p><ul><li>上述命令是在cmd中输入进行配置，而不是在jupyter notebook中</li><li>-fs：字体大小</li><li>-ofs：输出字体大小</li><li>-dfs：pandas dataframe字体大小</li><li>-cellw：主体宽度</li><li>-T：显示导航栏</li><li>-N：显示文件名称</li><li>-altp：不显示格子左上角的number</li><li>-lineh：行高</li></ul><p>设置完成之后发现<strong>jupyter的logo没有完全显示出来</strong>，同时<strong>文件名称也只显示了一部分</strong>，这些需要修改，找到<code>C:\Users\username\.jupyter\custom</code>目录下的<code>custom.css</code>进行修改:<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 将none改为block来显示jupyter的logo --&gt;</span></span><br><span class="line">div#ipython_notebook &#123;</span><br><span class="line"> display: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 将height: initial修改为20px，这个可以自己设置 --&gt;</span></span><br><span class="line">span.save_widget span.filename &#123;</span><br><span class="line"> margin-left: 8px;</span><br><span class="line"> height: 22px;</span><br><span class="line"> font-size: 100%;</span><br><span class="line"> color: #a6e22e;</span><br><span class="line"> background-color: #282828;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>上述修改每次重新修改主题相关配置后都需要重新修改</p><p>修改绘图配置：<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> jupyterthemes <span class="keyword">import</span> jtplot</span><br><span class="line">jtplot.style(theme=<span class="string">'grade3'</span>,ticks=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p></p><hr><p><br></p><h2 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h2><p>主要使用的包是<a href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions" target="_blank" rel="noopener">jupyter_contrib_nbextensions</a>，这是一个非常强大的包，里面包含了很多在jupyter notebook只很常用的插件，包括代码段、显示目录等等等，同时这个包还提供了一个链接：<a href="https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">A collection of various notebook extensions for Jupyter</a>，里面总结了可以用在jupyter notebook中的插件。</p><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install the python package</span></span><br><span class="line"><span class="comment">## 这个安装经常失败，下载速度太慢了</span></span><br><span class="line">pip install jupyter_contrib_nbextensions</span><br><span class="line"></span><br><span class="line"><span class="comment">## 换用这个了</span></span><br><span class="line">pip install https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install javascript and css files</span></span><br><span class="line">jupyter contrib nbextension install --user</span><br></pre></td></tr></table></figure><p>上述两步安装完成之后就可以在jupyter的homo page看到如下的插件：</p><img title="jupyter插件" alt="jupyter插件" class="class1 class2" src="http://pn9abh3rj.bkt.clouddn.com/static/images/jupyter插件.png?imageView2/2/w/600"><p>选取插件安装：</p><ul><li><strong>Code prettify</strong></li></ul><p>插件的快捷键：ctrl + l进行单个cell的prettify（也可以在选中cell时直接点击导航栏的小锤子按钮）、Ctrl-Shift-L进行所有的的prettify<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这个插件安装后提示yapf没有安装</span></span><br><span class="line">pip install yapf</span><br></pre></td></tr></table></figure><p></p><p>After checking “Snippets Menu” in Configurable nbextensions, Snippets did’t appear in</p><ul><li><strong>Collapsible headings</strong>-折叠标题</li><li><strong>Snippets</strong>-自定义代码片段</li></ul><p>修改<code>C:\Users\user\AppData\Roaming\jupyter\nbextensions\snippets\snippets.json</code>来添加新的代码段，注意是上面的地址，<strong>而不是anaconda目录下的文件，如果修改了anaconda下的文件不起作用</strong>。<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "name" : "common_use",</span><br><span class="line">    "code" : [</span><br><span class="line">        "import os",</span><br><span class="line">        "import sys",</span><br><span class="line">        "import numpy as np",</span><br><span class="line">        "import pandas as pd"</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>编辑完成之后想要生效需要重启jupyter notebook</p><ul><li><strong>Table of Contents (2)</strong>-显示目录结构</li></ul><p>这个和上面的jupyter-themes好像要有些冲突，导航栏遮挡部分的目录结构，现在还不知道有没有什么解决办法， 可以取舍一下</p><ul><li><strong>Highlight selected word</strong>-高亮代码中与选中部分相同的</li><li><strong>highlighter</strong>-高亮选中的文本</li><li><strong>ExecuteTime</strong>-显示每个cell的运行时间</li><li><strong>table_beautifier</strong>-让输出的table更好看</li><li><strong>Snippets Menu</strong>-和snippet类似，但是<mark>没有正常工作，需要看看为什么？？？</mark></li><li><strong>Hinterland</strong>-自动补全代码</li></ul><hr><p><br></p><h2 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h2><ul><li><a href="https://www.jianshu.com/p/a85bc2a8fa56" target="_blank" rel="noopener">多行输出</a></li><li><a href="https://zhuanlan.zhihu.com/p/32600329" target="_blank" rel="noopener">关于Jupyter Notebook的28个技巧(快捷键、Magic命令等)</a></li></ul><h2 id="jupyter-server搭建"><a href="#jupyter-server搭建" class="headerlink" title="jupyter server搭建"></a>jupyter server搭建</h2><ul><li><a href="https://bitmingw.com/2017/07/09/run-jupyter-notebook-server/" target="_blank" rel="noopener">搭建 ipython/jupyter notebook 服务器</a></li><li><a href="https://jupyter-notebook.readthedocs.io/en/stable/public_server.html" target="_blank" rel="noopener">Running a notebook server</a></li></ul><hr><p><br></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;针对默认的jupyter notebook的页面进行修改、增加一些插件使jupyter的使用更加方便，整理一些jupyter使用技巧，最后是关于搭建jupyter server的内容&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Python" scheme="http://showteeth.tech/categories/Python/"/>
    
    
      <category term="工具" scheme="http://showteeth.tech/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>HTML中的实体空格与markdown空格缩进</title>
    <link href="http://showteeth.tech/posts/58681.html"/>
    <id>http://showteeth.tech/posts/58681.html</id>
    <published>2019-03-01T08:07:24.000Z</published>
    <updated>2019-03-05T14:19:16.552Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>本文主要学习了HTML中的6种实体空格以及在实际markdown写作中会涉及到的空格缩进应该使用哪种空格实体会比较好，最后发现使用<code>&amp;emsp;</code>-全角空格在中文markdown写作中是最合适的</p></div><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在markdown写作过程中，我们可能需要再文本中插入一些空格，比如中文的首行缩进，与word文档写作直接使用space键空两格即可出现空格不同，markdown不会识别这种空格(四个空格会代表代码块)，为了达到插入空格的效果就需要使用<strong>HTML中的空格实体</strong></p><hr><h2 id="HTML中的实体空格"><a href="#HTML中的实体空格" class="headerlink" title="HTML中的实体空格"></a>HTML中的实体空格</h2><p>HTML提供了6种空格实体（space entity），它们拥有不同的宽度，<strong>非断行空格（<code>&amp;nbsp;</code>）是常规空格的宽度，可运行于所有主流浏览器</strong>。其他几种空格（<code>&amp;ensp;</code>、<code>&amp;emsp;</code>、<code>&amp;thinsp;</code>、<code>&amp;zwnj;</code>、<code>&amp;zwj;</code>）在<strong>不同浏览器中宽度各异</strong></p><h3 id="amp-nbsp-不换行空格"><a href="#amp-nbsp-不换行空格" class="headerlink" title="&amp;nbsp;-不换行空格"></a><code>&amp;nbsp;</code>-不换行空格</h3><p>&emsp;&emsp;它叫不换行空格，全称是 <strong>No-Break Space</strong>，它是最常见和我们<em>使用最多</em>的空格，大多数的人可能只接触了<code>&amp;nbsp;</code>，它是<strong>按下space键产生的空格，一般两个<code>&amp;nbsp;</code>对应于一个中文字符</strong>。在HTML中，如果你用空格键产生此空格，空格是不会累加的（只算1个），要使用html实体表示才可累加，<strong>该空格占据宽度受字体影响明显而强烈</strong>。</p><p>示例如下：</p><ul><li><font face="\5FAE\8F6F\96C5\9ED">微软雅黑&nbsp;&nbsp;字体，前面有两个<code>&amp;nbsp;</code>空格</font></li><li><font face="\9ED1\4F53">这是黑体&nbsp;&nbsp;字体，前面有两个<code>&amp;nbsp;</code>空格</font></li><li><font face="\5B8B\4F53">这是宋体&nbsp;&nbsp;字体，前面有两个<code>&amp;nbsp;</code>空格</font></li></ul><p>发现在不同字体中，空格的大小是不同的！</p><hr><h3 id="amp-ensp-半角空格"><a href="#amp-ensp-半角空格" class="headerlink" title="&amp;ensp;-半角空格"></a><code>&amp;ensp;</code>-半角空格</h3><p>&emsp;&emsp;它叫<strong>半角空格</strong>，全称是 <strong>En Space</strong>，<code>en</code>是字体排印学的计量单位，为<code>em</code>宽度的一半。根据定义，它等同于字体度的一半（如16px字体中就是8px）。名义上是小写字母<code>n</code>的宽度。此空格传承空格家族一贯的特性：透明的，<strong>此空格有个相当稳健的特性，就是其占据的宽度正好是<u>1/2个中文宽度</u>，而且<mark>基本上不受字体影响</mark></strong></p><p>示例如下：</p><ul><li><font face="\5FAE\8F6F\96C5\9ED">微软雅黑&ensp;&ensp;字体，前面有两个<code>&amp;ensp;</code>空格</font></li><li><font face="\9ED1\4F53">这是黑体&ensp;&ensp;字体，前面有两个<code>&amp;ensp;</code>空格</font></li><li><font face="\5B8B\4F53">这是宋体&ensp;&ensp;字体，前面有两个<code>&amp;ensp;</code>空格</font></li></ul><p>发现在不同字体中，空格的大小是不变的，并且两格空格占据一个字体大小！</p><hr><h3 id="amp-emsp-全角空格"><a href="#amp-emsp-全角空格" class="headerlink" title="&amp;emsp;-全角空格"></a><code>&amp;emsp;</code>-全角空格</h3><p>&emsp;&emsp;它叫<strong>全角空格</strong>，全称是 <strong>Em Space</strong>，<code>em</code>是字体排印学的计量单位，相当于当前指定的点数。例如，<code>1 em</code>在16px的字体中就是16px。此空格也传承空格家族一贯的特性：透明的，<strong>此空格也有个相当稳健的特性，就是其占据的宽度正好是<u>1个中文宽度</u>，而且<mark>基本上不受字体影响</mark></strong>，和上面的<code>&amp;ensp;</code>-半角空格特性相同，但是是一个中文宽度</p><p>示例如下：</p><ul><li><font face="\5FAE\8F6F\96C5\9ED">微软雅黑&emsp;&emsp;字体，前面有两个<code>&amp;emsp;</code>空格</font></li><li><font face="\9ED1\4F53">这是黑体&emsp;&emsp;字体，前面有两个<code>&amp;emsp;</code>空格</font></li><li><font face="\5B8B\4F53">这是宋体&emsp;&emsp;字体，前面有两个<code>&amp;emsp;</code>空格</font></li></ul><p>发现在不同字体中，空格的大小是不变的，并且两格空格占据两个字体大小！</p><hr><h3 id="amp-thinsp-窄空格"><a href="#amp-thinsp-窄空格" class="headerlink" title="&amp;thinsp;-窄空格"></a><code>&amp;thinsp;</code>-窄空格</h3><p>&emsp;&emsp;它叫<strong>窄空格</strong>，全称是 <strong>Thin Space</strong>。我们不妨称之为“瘦弱空格”，就是该空格长得比较瘦弱，身体单薄，占据的宽度比较小。它是<code>em</code>之六分之一宽(前面的<code>&amp;ensp;</code>-半角空格是<code>em</code>宽度的一半，<code>&amp;emsp;</code>-全角空格就是<code>em</code>宽度)</p><p>示例如下：</p><ul><li><font face="\5FAE\8F6F\96C5\9ED">微软雅黑&emsp;字体，前面有一个<code>&amp;emsp;</code>空格</font></li><li><font face="\9ED1\4F53">这是黑体&ensp;&ensp;字体，前面有两个<code>&amp;ensp;</code>空格</font></li><li><font face="\5B8B\4F53">这是宋体&thinsp;&thinsp;&thinsp;&thinsp;&thinsp;&thinsp;字体，前面有六个<code>&amp;thinsp;</code>空格</font></li></ul><hr><h3 id="amp-zwnj-零宽不连字"><a href="#amp-zwnj-零宽不连字" class="headerlink" title="&amp;zwnj;-零宽不连字"></a><code>&amp;zwnj;</code>-零宽不连字</h3><p>&emsp;&emsp;它叫<strong>零宽不连字</strong>，全称是 <strong>Zero Width Non Joiner</strong>，简称“ZWNJ”，是一个<strong>不打印字符</strong>，放在<strong>电子文本的两个字符之间，抑制本来会发生的连字，而是以这两个字符原本的字形来绘制</strong>。<em>Unicode</em>中的零宽不连字<strong>字符映射为</strong>（zero width non-joiner，<code>U+200C</code>），HTML<strong>字符值引用</strong>为<code>&amp;#8204</code></p><h3 id="amp-zwj-零宽连字"><a href="#amp-zwj-零宽连字" class="headerlink" title="&amp;zwj;-零宽连字"></a><code>&amp;zwj;</code>-零宽连字</h3><p>&emsp;&emsp;它叫<strong>零宽连字</strong>，全称是 <strong>Zero Width Joiner</strong>，简称“ZWJ”，是一个<strong>不打印字符</strong>，放在某些需要<strong>复杂排版语言（如阿拉伯语、印地语）的两个字符之间，使得这两个本不会发生连字的字符产生了连字效果</strong>。零宽连字符的Unicode码位是<code>U+200D</code> (HTML:<code>&amp;#8205;</code>、<code>&amp;zwj;</code>）。</p><p>此外，<strong>浏览器还会把以下字符当作空白进行解析</strong>：空格<code>&amp;#x0020;</code>、制表位<code>&amp;#x0009;</code>、换行<code>&amp;#x000A;</code>、回车<code>&amp;#x000D;</code>和<code>&amp;#12288;</code>等等。</p><hr><h2 id="markdowm首行缩进方法"><a href="#markdowm首行缩进方法" class="headerlink" title="markdowm首行缩进方法"></a>markdowm首行缩进方法</h2><p>通过上述对HTML中实体空格的介绍，可以总结出以下几种可以用在markdown中充当首行缩进的方法：</p><ul><li>使用<code>&amp;emsp;</code>-全角空格，优点：占据的宽度正好是<u>1个中文宽度</u>，而且<strong>基本上不受字体影响</strong>，<strong>推荐使用这个进行首行缩进</strong></li><li>使用<code>&amp;ensp;</code>-半角空格，优点：占据的宽度正好是<u>1/2个中文宽度</u>，需要使用两格才能达到缩进效果，而且<strong>基本上不受字体影响</strong></li><li>使用<code>&amp;nbsp;</code>-不换行空格，缺点：<u>需要使用四个来代表两个中文字符</u>，并且<strong>受字体影响较大</strong></li></ul><hr><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.jianshu.com/p/31eade263e7a" target="_blank" rel="noopener">markdown空格缩进以及HTML空格实体</a></li><li><a href="https://blog.csdn.net/testcs_dn/article/details/78957685" target="_blank" rel="noopener">markdown编辑器中可以使用的6种空格标记</a></li></ul><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;本文主要学习了HTML中的6种实体空格以及在实际markdown写作中会涉及到的空格缩进应该使用哪种空格实体会比较好，最后发现使用&lt;code&gt;&amp;amp;emsp;&lt;/code&gt;-全角空格在中文markdown写作中是最合适的&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="其他内容学习" scheme="http://showteeth.tech/categories/%E5%85%B6%E4%BB%96%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="markdown" scheme="http://showteeth.tech/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>总结|位、字节、字符和编码</title>
    <link href="http://showteeth.tech/posts/56690.html"/>
    <id>http://showteeth.tech/posts/56690.html</id>
    <published>2019-02-28T16:58:24.000Z</published>
    <updated>2019-03-07T04:22:36.842Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>本文主要讲解了编码、字符、字节、位的概念，以及不同编码情况下字节与字符的对应关系，主要包括<code>ASCII码</code>、<code>UTF-8编码</code>、<code>Unicode编码</code>、<code>UTF-16编码</code>和<code>UTF-32编码</code>。</p></div><a id="more"></a><h2 id="编码问题的由来，相关概念的理解"><a href="#编码问题的由来，相关概念的理解" class="headerlink" title="编码问题的由来，相关概念的理解"></a>编码问题的由来，相关概念的理解</h2><h3 id="字符与编码的发展"><a href="#字符与编码的发展" class="headerlink" title="字符与编码的发展"></a>字符与编码的发展</h3><p>从计算机对多国语言的支持角度看，大致可以分为三个阶段：<br><table><tr><th width="10%">　</th><th width="10%">系统内码</th><th width="60%">说明</th><th width="20%">系统</th></tr><tr><td>阶段一</td><td>ASCII</td><td>计算机刚开始只支持英语，其它语言不能够在计算机上存储和显示。</td><td>英文 DOS</td></tr><tr><td>阶段二</td><td>ANSI编码（本地化）</td><td>为使计算机支持更多语言，通常使用 0x80~0xFF 范围的 <strong>2 个字节来表示 1 个字符</strong>。比如：汉字 '中' 在中文操作系统中，使用 [0xD6,0xD0] 这两个字节存储。不同的国家和地区制定了不同的标准，由此产生了 GB2312, BIG5, JIS 等各自的编码标准。这些 <strong>使用 2 个字节来代表一个字符的各种汉字延伸编码方式，称为 ANSI 编码</strong>。在简体中文系统下，ANSI 编码代表 GB2312 编码，在日文操作系统下，ANSI 编码代表 JIS 编码。<strong>不同 ANSI 编码之间 互不兼容 </strong>，当信息在国际间交流时，无法将属于两种语言的文字，存储在同一段 <strong>ANSI 编码</strong>的文本中。</td><td>中文 DOS，中文 Windows 95/98，日文 Windows 95/98</td></tr><tr><td>阶段三</td><td>UNICODE（国际化）</td><td>为了使国际间信息交流更加方便，国际组织制定了 <strong>UNICODE 字符集</strong>，为各种语言中的每一个字符设定了统一并且唯一的数字编号，以满足跨语言、跨平台进行文本转换、处理的要求。</td><td>Windows NT/2000/XP，Linux，Java</td></tr></table></p><p>字符串在内存中的存放方法：</p><p>在 <strong>ASCII</strong> 阶段，<strong>单字节字符串</strong>使用<strong>一个字节存放一个字符（SBCS）</strong>。比如，”Bob123” 在内存中为：<br><u>42</u> <u>6F</u> <u>62</u> <u>31</u> <u>32</u> <u>33</u> <u>00</u><br>&nbsp;B&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp;&nbsp;b&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;\0</p><p>在使用 <strong>ANSI 编码</strong>支持多种语言阶段，每个字符使用一个字节或多个字节来表示（MBCS），因此，这种方式存放的字符也被称作<strong>多字节字符</strong>。比如，”中文123” 在中文 Windows 95 内存中为7个字节，<strong>每个汉字占2个字节，每个英文和数字字符占1个字节</strong>：</p><p><u>D6 D0</u> <u>CE C4</u> <u>31</u> <u>32</u> <u>33</u> <u>00</u><br>&emsp;中&emsp;&emsp;文&emsp;1&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;\0</p><p>在 <strong>UNICODE</strong> 被采用之后，计算机存放字符串时，改为存放每个字符在 UNICODE 字符集中的序号。目前计算机<strong>一般使用 2 个字节（16 位）来存放一个序号（DBCS）</strong>，因此，这种方式存放的字符也被称作<strong>宽字节字符</strong>。比如，字符串 “中文123” 在 Windows 2000 下，内存中实际存放的是 5 个序号：</p><p><u>2D 4E</u> <u>87 65</u> <u>31 00</u> <u>32 00</u> <u>33 00</u> <u>00 00</u> &lt;-在 x86 CPU 中，低字节在前<br>&emsp;中&emsp;&emsp;文&emsp;&emsp;1&emsp;&emsp;2&emsp;&emsp;3&emsp;&emsp;\0<br>一共占 10 个字节</p><hr><h3 id="字符、字节、字符串"><a href="#字符、字节、字符串" class="headerlink" title="字符、字节、字符串"></a>字符、字节、字符串</h3><p>理解编码的关键，是要把字符的概念和字节的概念理解准确。这两个概念容易混淆，我们在此做一下区分：</p><table><tr><th width="10%">　</th><th width="70%">概念描述</th><th width="20%">举例</th></tr><tr><td>字符</td><td>人们使用的记号，抽象意义上的一个符号。</td><td>'1', '中', 'a', '$', '￥', ……</td></tr><tr><td>字节</td><td>计算机中存储数据的单元，一个8位的二进制数，是一个很具体的存储空间。</td><td>0x01, 0x45, 0xFA, ……</td></tr><tr><td>ANSI字符串</td><td>在内存中，如果“字符”是以 <strong>ANSI 编码</strong>形式存在的，<strong>一个字符可能使用一个字节或多个字节</strong>来表示，那么我们称这种字符串为 <strong>ANSI 字符串</strong>或者<strong>多字节字符串</strong>。</td><td>"中文123"（占7字节）</td></tr><tr><td>UNICODE字符串</td><td>在内存中，如果“字符”是以在 UNICODE 中的序号存在的，那么我们称这种字符串为 <strong>UNICODE 字符串或者宽字节字符串</strong>。</td><td>L"中文123"（占10字节）</td></tr></table><p>由于不同 ANSI 编码所规定的标准是不相同的，因此，对于一个给定的<strong>多字节字符串</strong>，我们必须知道它采用的是哪一种编码规则，才能够知道它包含了哪些“字符”。而对于 <strong>UNICODE 字符串</strong>来说，不管在什么环境下，它所代表的“字符”内容总是不变的。</p><hr><h3 id="字符集与编码"><a href="#字符集与编码" class="headerlink" title="字符集与编码"></a>字符集与编码</h3><p>各个国家和地区所制定的不同 ANSI 编码标准中，都只规定了各自语言所需的“字符”。比如：汉字标准（GB2312）中没有规定韩国语字符怎样存储。这些 ANSI 编码标准所规定的内容包含两层含义：</p><ol><li>使用哪些字符。也就是说哪些汉字，字母和符号会被收入标准中。所包含“字符”的集合就叫做“<strong>字符集</strong>”。</li><li>规定每个“字符”分别用一个字节还是多个字节存储，用哪些字节来存储，这个规定就叫做“<strong>编码</strong>”。</li></ol><p>各个国家和地区在制定编码标准的时候，“字符的集合”和“编码”一般都是同时制定的。因此，平常我们所说的“字符集”，比如：GB2312, GBK, JIS 等，除了有“字符的集合”这层含义外，同时也包含了“编码”的含义。</p><p>“<strong>UNICODE 字符集</strong>”包含了各种语言中使用到的所有“字符”。用来给 UNICODE 字符集编码的标准有很多种，比如：UTF-8, UTF-7, UTF-16, UnicodeLittle, UnicodeBig 等。</p><hr><h3 id="常用的编码简介"><a href="#常用的编码简介" class="headerlink" title="常用的编码简介"></a>常用的编码简介</h3><p>简单介绍一下常用的编码规则，为后边的章节做一个准备。在这里，我们根据编码规则的特点，把所有的编码分成三类：<br><table><tr><th width="15%">分类</th><th width="15%">编码标准</th><th width="70%">说明</th></tr><tr><td>单字节字符</td><td>ISO-8859-1</td><td>最简单的编码规则，每一个字节直接作为一个 UNICODE 字符。比如，[0xD6, 0xD0] 这两个字节，通过 iso-8859-1 转化为字符串时，将直接得到 [0x00D6, 0x00D0] 两个 UNICODE 字符，即 "ÖÐ"。反之，将 UNICODE 字符串通过 iso-8859-1 转化为字节串时，只能正常转化 0~255 范围的字符。</td></tr><tr><td>ANSI</td><td>GB2312,BIG5,Shift_JIS,ISO-8859-2 ……</td><td>把 UNICODE 字符串通过 ANSI 编码转化为“字节串”时，根据各自编码的规定，一个 UNICODE 字符可能转化成一个字节或多个字节。反之，将字节串转化成字符串时，也可能多个字节转化成一个字符。比如，[0xD6, 0xD0] 这两个字节，通过 GB2312 转化为字符串时，将得到 [0x4E2D] 一个字符，即 '中' 字。“ANSI 编码”的<strong>特点</strong>：1. 这些“ANSI 编码标准”都只能处理各自语言范围之内的 UNICODE 字符。2. “UNICODE 字符”与“转换出来的字节”之间的关系是人为规定的。</td></tr><tr><td>UNICODE</td><td>UTF-8,UTF-16, UnicodeBig ……</td><td>与“ANSI 编码”类似的，把字符串通过 UNICODE 编码转化成“字节串”时，一个 UNICODE 字符可能转化成一个字节或多个字节。<strong>与“ANSI 编码”不同的是</strong>：1. 这些“UNICODE 编码”能够处理所有的 UNICODE 字符。2. “UNICODE 字符”与“转换出来的字节”之间是可以通过计算得到的。</td></tr></table></p><p>我们实际上没有必要去深究每一种编码具体把某一个字符编码成了哪几个字节，我们<strong>只需要知道“编码”的概念就是把“字符”转化成“字节”就可以了</strong>。对于“UNICODE 编码”，由于它们是可以通过计算得到的，因此，在特殊的场合，我们可以去了解某一种“UNICODE 编码”是怎样的规则。</p><hr><p><br></p><h2 id="简介介绍区别"><a href="#简介介绍区别" class="headerlink" title="简介介绍区别"></a>简介介绍区别</h2><p><strong>位（bit）</strong>：计算机存储信息的最小单位，11001100是一个八位二进制数。</p><p><strong>字节（byte）</strong>：是一种计量单位，表示数据量多少，是计算机存储容量基本单位，习惯上用大写 B 来表示,1B（byte,字节）= 8bit（位）</p><p><strong>字符</strong>：是指计算机中使用的字母、数字、字和符号，比如<code>1、2、3、A、B、C、~！·#￥%……—*（）——+、</code>等等。</p><p><strong>编码</strong>：把“字符”转化成“字节”</p><p>不同编码里，字符和字节的对应关系如下：</p><p>ASCII码：</p><ul><li>1个英文字母（不分大小写）= 1个字节的空间</li><li>1个中文汉字 = 2个字节的空间</li></ul><p>Unicode编码：</p><ul><li>1个英文字符 = 2个字节</li><li>英文标点 = 2个字节</li><li>1个中文（含繁体） = 2个字节</li><li>中文标点 = 2个字节</li></ul><p>UTF-8编码：</p><ul><li>1个英文字符 = 1个字节</li><li>英文标点 = 1个字节</li><li>1个中文（含繁体） = 3个字节</li><li>中文标点 = 3个字节</li></ul><p>UTF-16编码：</p><ul><li>一个英文字母字符或一个汉字字符存储都需要2个字节</li><li>Unicode扩展区的一些汉字存储需要4个字节</li></ul><p>UTF-32编码：</p><ul><li>世界上任何字符的存储都需要4个字节</li></ul><div class="note info"><p>unicode编码、UTF-8编码、UTF-16编码、UTF-32编码都是对Unicode字符集进行编码的实现方式</p></div><hr><h2 id="查看系统编码"><a href="#查看系统编码" class="headerlink" title="查看系统编码"></a>查看系统编码</h2><h3 id="linux系统"><a href="#linux系统" class="headerlink" title="linux系统"></a>linux系统</h3><blockquote><p><code>locale</code><br><strong>LANG=en_US.UTF-8</strong><br>LC_CTYPE=en_US.UTF-8<br>LC_NUMERIC=”en_US.UTF-8”<br>LC_TIME=”en_US.UTF-8”<br>LC_COLLATE=”en_US.UTF-8”<br>LC_MONETARY=”en_US.UTF-8”<br>LC_MESSAGES=”en_US.UTF-8”<br>LC_PAPER=”en_US.UTF-8”<br>LC_NAME=”en_US.UTF-8”<br>LC_ADDRESS=”en_US.UTF-8”<br>LC_TELEPHONE=”en_US.UTF-8”<br>LC_MEASUREMENT=”en_US.UTF-8”<br>LC_IDENTIFICATION=”en_US.UTF-8”<br>LC_ALL=</p></blockquote><p><strong>可以看出linux系统的默认编码是UTF-8</strong></p><h3 id="windows系统"><a href="#windows系统" class="headerlink" title="windows系统"></a>windows系统</h3><p>windows在dos环境下输入chcp：</p><blockquote><p><code>chcp</code><br>活动代码页: 936</p></blockquote><p><strong>活动代码页为：936，对应的编码格式为GBK</strong></p><hr><p><br></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://blog.csdn.net/u012156116/article/details/79923484" target="_blank" rel="noopener">字符与字节的区别</a></li><li><a href="http://www.regexlab.com/zh/encoding.htm" target="_blank" rel="noopener">字符，字节和编码</a></li><li><a href="https://www.cnblogs.com/yangxiaoqin/p/8460395.html" target="_blank" rel="noopener">位、字节、字符的区别</a></li><li><a href="https://blog.csdn.net/Deft_MKJing/article/details/79460485" target="_blank" rel="noopener">UTF-8和Unicode关系</a></li><li><a href="https://www.cnblogs.com/wpcockroach/p/3907324.html" target="_blank" rel="noopener">简单几句话总结Unicode，UTF-8和UTF-16</a></li></ul><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;本文主要讲解了编码、字符、字节、位的概念，以及不同编码情况下字节与字符的对应关系，主要包括&lt;code&gt;ASCII码&lt;/code&gt;、&lt;code&gt;UTF-8编码&lt;/code&gt;、&lt;code&gt;Unicode编码&lt;/code&gt;、&lt;code&gt;UTF-16编码&lt;/code&gt;和&lt;code&gt;UTF-32编码&lt;/code&gt;。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="基础" scheme="http://showteeth.tech/categories/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="计算机基础" scheme="http://showteeth.tech/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>单行命令嵌套</title>
    <link href="http://showteeth.tech/posts/50164.html"/>
    <id>http://showteeth.tech/posts/50164.html</id>
    <published>2019-02-28T08:07:00.000Z</published>
    <updated>2019-03-01T08:56:52.382Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>单行命令嵌套，也就是一行命令使用另一行命令的结果，或者将命令的结果当做参数传给另一个命令，使用方法<code>command1 &lt;(command2)</code>.</p></div><a id="more"></a><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p>将command2的结果作为command1的输入：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">  command1 &lt;(command2)</span><br></pre></td></tr></table></figure><p></p><hr><h2 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h2><p>uniq命令去重常常需要先进行排序操作：</p><blockquote><p><code>uniq -c &lt;(sort uniq.txt)</code><br>1 i am test<br>2 i love test<br>1 i want go abroad<br>4 this is a test<br>1 those are good men<br>1 we are good men<br>1 whom have a try<br>1 WhoM have a try<br>1 you have a try</p></blockquote><p>当前上述也可以直接使用<strong>管道符<code>|</code></strong>来操作</p><p>但是如果是像<code>join</code>这种<strong>需要操作两个文件的</strong>，单纯地使用管道符就很难达到目的，<code>join</code>对指定列进行连接时也需要进行排序操作：</p><blockquote><p><code>cat test1.txt</code><br>aa 1 2<br>bb 2 3<br>cc 4 6<br>dd 3 3</p></blockquote><blockquote><p><code>cat test2.txt</code><br>aa 2 1<br>bb 8 2<br>ff 2 4<br>cc 4 4<br>dd 5 5</p></blockquote><p>管道符和命令嵌套合用：</p><blockquote><p><strong><code>sort -k 1,1 test2.txt |join -j 1 &lt;(sort -k 1,1 test1.txt) -</code></strong><br>aa 1 2 2 1<br>bb 2 3 8 2<br>cc 4 6 4 4<br>dd 3 3 5 5</p></blockquote><p>当然也可以直接使用命令嵌套：</p><blockquote><p><strong><code>join -j 1 &lt;(sort -k 1,1 test1.txt) &lt;(sort -k 1,1 test2.txt)</code></strong><br>aa 1 2 2 1<br>bb 2 3 8 2<br>cc 4 6 4 4<br>dd 3 3 5 5</p></blockquote><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;单行命令嵌套，也就是一行命令使用另一行命令的结果，或者将命令的结果当做参数传给另一个命令，使用方法&lt;code&gt;command1 &amp;lt;(command2)&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://showteeth.tech/categories/Linux/"/>
    
    
      <category term="常用内容总结" scheme="http://showteeth.tech/tags/%E5%B8%B8%E7%94%A8%E5%86%85%E5%AE%B9%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>cut-按列切分文件字段工具</title>
    <link href="http://showteeth.tech/posts/64687.html"/>
    <id>http://showteeth.tech/posts/64687.html</id>
    <published>2019-02-28T07:35:38.000Z</published>
    <updated>2019-03-06T06:41:35.897Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>本文主要学习了Linux下对每一行文本按照给定的分隔符进行切割并按照指定的范围提取字段、字符或字节的命令<code>cut</code>，其主要选项包括：<code>-d</code>、<code>-f</code>、<code>--complement</code>、<code>-s</code>、<code>-c</code>、<code>-b</code>、<code>-n</code>和<code>--output-delimiter</code>。</p></div><a id="more"></a><h2 id="cut用法"><a href="#cut用法" class="headerlink" title="cut用法"></a>cut用法</h2><ul><li><code>cut</code>命令从文件的每一行剪切字节、字符或字段并将这些字节、字符或字段写至标准输出</li><li>如果不指定文件，<code>cut</code>命令将读取标准输入</li></ul><h3 id="cut命令格式"><a href="#cut命令格式" class="headerlink" title="cut命令格式"></a>cut命令格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Usage: </span><br><span class="line">  cut OPTION [FILE]</span><br></pre></td></tr></table></figure><hr><h3 id="cut-options说明"><a href="#cut-options说明" class="headerlink" title="cut options说明"></a>cut options说明</h3><style>table th:first-of-type{width:15%}table th:nth-of-type(2){width:25%}table th:nth-of-type(3){width:60%}</style><table><thead><tr><th>参数</th><th>完整参数</th><th>说明</th></tr></thead><tbody><tr><td>-b</td><td>–bytes=LIST</td><td>以字节为单位进行分割，这些字节位置将忽略多字节字符边界，除非也指定了-n标志</td></tr><tr><td>-c</td><td>–characters=LIST</td><td>以字符为单位进行分割</td></tr><tr><td>-d</td><td>–delimiter=DELIM</td><td>自定义分隔符，默认为制表符tab</td></tr><tr><td>-f</td><td>–fields=LIST</td><td>与-d一同使用，显示指定字段的内容；也会打印不包含分隔符的行，除非指定了-s参数</td></tr><tr><td>-n</td><td></td><td>with -b: 取消分割多字节字符，仅和 -b 标志一起使用；如果字符的最后一个字节落在由 -b 标志的 List 参数指示的范围之内，该字符将被写出，否则该字符将被排除</td></tr><tr><td></td><td>–complement</td><td>补足被选择的字节、字符或字段</td></tr><tr><td>-s</td><td>–only-delimited</td><td>不打印没有包含分隔符的行，有利于去掉注释和标题</td></tr><tr><td></td><td>–output-delimiter=STRING</td><td>指定输出内容的分隔符</td></tr></tbody></table><hr><h3 id="cut指定字段、字符或字节范围的方法"><a href="#cut指定字段、字符或字节范围的方法" class="headerlink" title="cut指定字段、字符或字节范围的方法"></a>cut指定字段、字符或字节范围的方法</h3><p>指定字段、字符或字节范围有以下三种方法：</p><ul><li><strong>N-</strong>：获取<em>连续</em>范围，<strong>从第N个</strong>字节、字符、字段<strong>到结尾</strong>；</li><li><strong>N-M</strong>：获取<em>连续</em>范围，<strong>从第N个</strong>字节、字符、字段<strong>到第M个（包括M在内）</strong>字节、字符、字段；</li><li><strong>-M</strong>：获取<em>连续</em>范围，<strong>从第1个</strong>字节、字符、字段<strong>到第M个（包括M在内）</strong>字节、字符、字段</li><li><strong>N,M</strong>：获取<em>不连续</em>范围，得到<strong>第N个</strong>字节、字符、字段和<strong>第M个</strong>字节、字符、字段</li><li><strong>N,M,Z-P</strong>：获取<em>连续范围和不连续</em>范围，<strong>第N个</strong>字节、字符、字段、<strong>第M个</strong>字节、字符、字段以及<strong>从第Z个</strong>字节、字符、字段<strong>到第P个（包括P在内）</strong>字节、字符、字段</li></ul><div class="note info"><p>逗号(,)可以使用多个</p></div><hr><p><br></p><h2 id="cut用法实例"><a href="#cut用法实例" class="headerlink" title="cut用法实例"></a>cut用法实例</h2><h3 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h3><blockquote><p><code>cat cut.txt</code><br>No Name Mark Percent<br>01 tom 69 91<br>02 jack 71 87<br>03 alex 68 98</p></blockquote><h3 id="d-自定义分隔符"><a href="#d-自定义分隔符" class="headerlink" title="-d 自定义分隔符"></a>-d 自定义分隔符</h3><p><mark>默认-d是制表符tab，这个很关键，不是空白字符，同时自定义的分隔符必须是单个的字符，比如单个的空格，不能是两个或以上空格</mark></p><blockquote><p><code>cut -d &#39; &#39; -f 1 cut.txt</code><br>No<br>01<br>02<br>03</p></blockquote><blockquote><p><code>awk &#39;{print $1&quot;;&quot;$2&quot;;&quot;$3&quot;;&quot;$4}&#39; cut.txt |cut -d &#39;;&#39; -f 1</code><br>No<br>01<br>02<br>03</p></blockquote><hr><h3 id="f-提取指定字段内容"><a href="#f-提取指定字段内容" class="headerlink" title="-f 提取指定字段内容"></a>-f 提取指定字段内容</h3><p>选取<strong>单个filed</strong>如上面-d用法示例</p><p><strong>选取多个字段，直接将多个字段在-f选项后使用,分割即可：</strong></p><blockquote><p><strong><code>cut -d &#39; &#39; -f 1,3 cut.txt</code></strong><br>No Mark<br>01 69<br>02 71<br>03 68</p></blockquote><p><strong>也可以使用<code>-</code>和<code>,</code>混用的方法：</strong></p><blockquote><p><strong><code>cut -d &#39; &#39; -f 1,3-4 cut.txt</code></strong><br>No Mark Percent<br>01 69 91<br>02 71 87<br>03 68 98</p></blockquote><hr><h3 id="–complement-提取指定字段之外的内容"><a href="#–complement-提取指定字段之外的内容" class="headerlink" title="–complement 提取指定字段之外的内容"></a>–complement 提取指定字段之外的内容</h3><blockquote><p><strong><code>cut -d &#39; &#39; -f 1,3 --complement cut.txt</code></strong><br>Name Percent<br>tom 91<br>jack 87<br>alex 98</p></blockquote><p><strong>这里得到的结果和上面单纯使用<code>-f</code>得到的结果可以说是互补的，因为<code>--complement</code>是提取指定字段之外的内容</strong></p><hr><h3 id="s-不打印没有包含分隔符的行"><a href="#s-不打印没有包含分隔符的行" class="headerlink" title="-s 不打印没有包含分隔符的行"></a>-s 不打印没有包含分隔符的行</h3><p>在cut.txt上增加一行文本，其分隔符和其他几行不同：</p><blockquote><p><code>cat cut.txt</code><br>#this-is-test<br>No Name Mark Percent<br>01 tom 69 91<br>02 jack 71 87<br>03 alex 68 98</p></blockquote><p><strong>默认情况，如果一行不包含分隔符，就会输出这一行</strong>：</p><blockquote><p>cut -d ‘ ‘ -f 1 cut.txt<br>#this-is-test<br>No<br>01<br>02<br>03</p></blockquote><p>为了防止上述情形出现，可以使用<code>-s</code>选项：</p><blockquote><p><code>cut -d &#39; &#39; -s -f 1 cut.txt</code><br>No<br>01<br>02<br>03</p></blockquote><p>可以发现，不包含空格作为分隔符的第一行就没有进行输出</p><hr><h3 id="c-提取指定字符范围的内容"><a href="#c-提取指定字符范围的内容" class="headerlink" title="-c 提取指定字符范围的内容"></a>-c 提取指定字符范围的内容</h3><blockquote><p><code>cat cut2.txt</code><br>abcdefghijklmnopqrstuvwxyz<br>abcdefghijklmnopqrstuvwxyz<br>abcdefghijklmnopqrstuvwxyz<br>abcdefghijklmnopqrstuvwxyz<br>abcdefghijklmnopqrstuvwxyz</p></blockquote><p><strong>指定连续范围：</strong></p><blockquote><p><code>cut -c -2 cut2.txt</code><br>ab<br>ab<br>ab<br>ab<br>ab</p></blockquote><blockquote><p><code>cut -c 5- cut2.txt</code><br>efghijklmnopqrstuvwxyz<br>efghijklmnopqrstuvwxyz<br>efghijklmnopqrstuvwxyz<br>efghijklmnopqrstuvwxyz<br>efghijklmnopqrstuvwxyz</p></blockquote><p><strong>指定不连续范围和连续范围（<code>,</code>和<code>-</code>混用）：</strong></p><blockquote><p><code>cut -c 1,3-5 cut2.txt</code><br>acde<br>acde<br>acde<br>acde<br>acde</p></blockquote><hr><h3 id="b-提取指定字符范围的内容"><a href="#b-提取指定字符范围的内容" class="headerlink" title="-b 提取指定字符范围的内容"></a>-b 提取指定字符范围的内容</h3><blockquote><p><code>cut -b 1-5 cut2.txt</code><br>abcde<br>abcde<br>abcde<br>abcde<br>abcde</p></blockquote><p><strong>这结果咋一看和前面的<code>-c</code>没有什么区别，这是因为操作对象都是英文字母，而在<code>ASCII码</code>和<code>UTF-8编码</code>中英文字母的字节和字符是相等的</strong>，具体的字节和字符的区别见<a href="http://showteeth.tech/posts/56690.html">这篇博客</a></p><p>由于我使用的<strong>vscode的默认编码方式为<code>utf-8</code></strong>，所以<strong>英文字母的字节和字符是相等的</strong>，而<strong>中文1个中文（含繁体） = 3个字节</strong>，为了凸显-b和-c的区别，下面采用中文进行测试：</p><blockquote><p><code>cat cut3.txt</code><br>星期一<br>星期二<br>星期三<br>星期四<br>星期五</p></blockquote><blockquote><p><code>cut -b 1-3 cut3.txt</code> # cut -b <strong>1-2</strong> cut3.txt<strong>结果为空</strong>，因为需要三个字节才可以<br>星<br>星<br>星<br>星<br>星</p></blockquote><blockquote><p><code>cut -c 1-3 cut3.txt</code><br>星期一<br>星期二<br>星期三<br>星期四<br>星期五</p></blockquote><div class="note info"><p>针对英文字符进行提取指定字符范围内容时，<code>-b</code>和<code>-c</code>选项没什么差别，因为在大部分编码方式中，英文字母的字节和字符是相等的，而针对中文就需要注意不同的编码方式对中文字符对应字节数的设置，当然<code>cut</code>命令还提供了了一个选项<code>-n</code>来解决上述<code>-b</code>可能遇到的问题</p></div><hr><h3 id="n-取消分割多字节字符"><a href="#n-取消分割多字节字符" class="headerlink" title="-n 取消分割多字节字符"></a>-n 取消分割多字节字符</h3><p><strong>该选项仅和 -b 选项一起使用</strong>，用来取消分割多字节字符</p><blockquote><p><code>cut -b 3 cut3.txt</code></p></blockquote><blockquote><p>cut -nb 3 cut3.txt<br>星<br>星<br>星<br>星<br>星</p></blockquote><blockquote><p><code>cut -nb 3,6,9 cut3.txt</code><br>星期一<br>星期二<br>星期三<br>星期四<br>星期五</p></blockquote><p>当<code>-nb</code>后面的数字为<code>3的整数倍（utf-8编码）</code>时就不会分割多字节字符，得到对应的字符，不过感觉这没啥大用处，一般都直接使用了<code>-c</code>参数来获取字符</p><hr><h3 id="–output-delimiter-STRING-指定输出内容是的分隔符"><a href="#–output-delimiter-STRING-指定输出内容是的分隔符" class="headerlink" title="–output-delimiter=STRING 指定输出内容是的分隔符"></a>–output-delimiter=STRING 指定输出内容是的分隔符</h3><blockquote><p><code>cut -d &#39; &#39; -f 1-3 --output-delimiter=$&#39;\t&#39; cut.txt</code><br>#this-is-test<br>No Name Mark<br>01 tom 69<br>02 jack 71<br>03 alex 68</p></blockquote><div class="note info"><p>注意这里指定输出分割符为tab的时候使用了<code>$&#39;\t&#39;</code>的方式，其中<code>$</code>和<code>单引号</code>都是必须的不能更改的，这个和<code>join</code>命令中指定分隔符的用法相同，具体原因查看<a href="http://showteeth.tech/posts/55603.html">这篇文章</a></p></div><hr><p><br></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="http://man.linuxde.net/cut" target="_blank" rel="noopener">cut命令</a></li><li><a href="https://www.cnblogs.com/fulucky/p/8124858.html" target="_blank" rel="noopener">linux的cut命令</a></li><li><a href="https://www.cnblogs.com/longjshz/p/5792502.html" target="_blank" rel="noopener">Linux下的cut选取命令详解</a></li><li><a href="https://www.cnblogs.com/Hobbies/articles/4527447.html" target="_blank" rel="noopener">linux每日一命令–cut</a></li></ul><p><br></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;本文主要学习了Linux下对每一行文本按照给定的分隔符进行切割并按照指定的范围提取字段、字符或字节的命令&lt;code&gt;cut&lt;/code&gt;，其主要选项包括：&lt;code&gt;-d&lt;/code&gt;、&lt;code&gt;-f&lt;/code&gt;、&lt;code&gt;--complement&lt;/code&gt;、&lt;code&gt;-s&lt;/code&gt;、&lt;code&gt;-c&lt;/code&gt;、&lt;code&gt;-b&lt;/code&gt;、&lt;code&gt;-n&lt;/code&gt;和&lt;code&gt;--output-delimiter&lt;/code&gt;。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://showteeth.tech/categories/Linux/"/>
    
    
      <category term="常用基本命令" scheme="http://showteeth.tech/tags/%E5%B8%B8%E7%94%A8%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
</feed>
