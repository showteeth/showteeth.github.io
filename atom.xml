<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>showteeth&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://showteeth.tech/"/>
  <updated>2019-02-19T04:01:03.116Z</updated>
  <id>http://showteeth.tech/</id>
  
  <author>
    <name>showteeth</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>test-copyright</title>
    <link href="http://showteeth.tech/posts/37032.html"/>
    <id>http://showteeth.tech/posts/37032.html</id>
    <published>2019-02-19T04:00:00.000Z</published>
    <updated>2019-02-19T04:01:03.116Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract:"></a>Abstract:</h5><p>test copyright</p><a id="more"></a><h1 id="this-is-title"><a href="#this-is-title" class="headerlink" title="this is title"></a>this is title</h1>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Abstract&quot;&gt;&lt;a href=&quot;#Abstract&quot; class=&quot;headerlink&quot; title=&quot;Abstract:&quot;&gt;&lt;/a&gt;Abstract:&lt;/h5&gt;&lt;p&gt;test copyright&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>test_password</title>
    <link href="http://showteeth.tech/posts/30737.html"/>
    <id>http://showteeth.tech/posts/30737.html</id>
    <published>2019-02-17T13:43:32.000Z</published>
    <updated>2019-02-19T04:13:06.783Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none">U2FsdGVkX184XscUapvGBM2JiRzM159kSs0ZTFFyIFW+i/lJU1DX7c/UMqzpgoHpZZQCPYDrRmvoJizq1xEI/8pmfKCXXde+oGECZbMd/2QejN8dANV+51OETulmsm9sBfSYLSn2F7M36rElvP+DRPO5mx7mqTcUXCMet7oV0gqxlBjQtNUsNofWn0kzDA71oBed8O+/KAT1uTWJj1b53EMew/VLNVDgV0AK6vC0Qwx8Gf6LhhJkIrgs2Pc9natzYiei628TMmpS/mDhKInP9iPG9W6DhBP9T8PXieenbqRBjkwKpVDD8PBvbVsZ1lwuT/PHzmot5BfkMLF6FLunn2sxiyJEvOYyEFL0+x+AsVFLLB18pJj6U/HKxNkTkgkMdR0/fKlIkfA5zlgJyKfbd6WzcS069XtNUzcRzkEkT8iJP2Na2YjbCIfOOg3QhiscQbIDi/hLLLsGSioUkQObr5526TWDrHLYD8BbcrppvpaQGHWobI6nG1AXScQsGe972GgqBqkgOn4uL0FKtXBnk+1pK/5sybpDGYAjSubcZKgVNGqvTXvG3sEzleSFB364JXqEwYShCvqJ6n9AylIJ561bFex5w3jImqOPJ/WQ3ITeuCXNvPvok5nY1eIKCsi/OXvWfiA2xQUefZ5IkSy8vqyQm/dfXcQlNYzV28z1kuWaaWCyGr0sx24Edse51rB/js5ndXe8liCPuzrdLDoslraI0DKk5evaHHWQg3MVAX1sUikrxmUHA5Q6uwHwnxwE0vlJjGcgdXlzwDAi40KSWreRHYFsBrn/tUaGJ3845oqpSZQLRnBU+VV+mdng3OKHhzspZTrs622mS0B/qRchUrY/2WT29MU8VxR5yW51+0SoN4tcUosii1DiQOXucwYI0BoJtYgAIcNJFa3U3RJIpv4tchu5b52enKYWzzwvGjzzy7wrg4ConeMA7JqMFzNI7ZFtg3oT81+OZ650My3qUbFwOlTfbKqz0I6JODSv6yuVK7pHSNHRb+EhY7XvgkKeW3EYkdeiH2qxnLNQvI1pygFjbGL9UgYrGNVARwo/3kftlX7aGMB/wDgDRWvxnEi/zxsgtj41j/RysNvDxkGH762WpmZncu8H7zhGW66JbVcChFKcZ42dfJMfRqLw2kcuzhWKsYz9OZymvQlCv5yp0Ev7cz39ocE0bInDRAQLCj/tbMf/RlZ+yhTl6tUOzuDsf2lBGgqaouNiBMOaghVUzd6z3yc14oGOfPjlY17zeSN7E/QAdYnnVTJ9I1iesM0uFtBA0u7ZxzZhUGbS4O43TiXgFUt+JqRU0Uoh2U5YtyOQJvw7Em0pYiG4zCZExJIV/pWDgeNLnetvmrOV5GSnSTTxteotWPZcw0QJcV1yDbM7UlxRdkSqlHTnoQLTPBhLvDulEwNkd9j0pFFJ/uNCjyfNpri8R5NzEqPv0UjP5auWfPNOHrKWGipqY1O1M5viVRPanOXcpK1BEgETRecfbqUvZTGCf8A5XsLtUuhWRCk=</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" placeholder="请输入密码" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Abstract&quot;&gt;&lt;a href=&quot;#Abstract&quot; class=&quot;headerlink&quot; title=&quot;Abstract:&quot;&gt;&lt;/a&gt;Abstract:&lt;/h5&gt;&lt;p&gt;这是一篇用来测试加密文章的博客。&lt;/p&gt;
    
    </summary>
    
      <category term="test" scheme="http://showteeth.tech/categories/test/"/>
    
    
      <category term="password" scheme="http://showteeth.tech/tags/password/"/>
    
  </entry>
  
  <entry>
    <title>test_templete2</title>
    <link href="http://showteeth.tech/posts/37746.html"/>
    <id>http://showteeth.tech/posts/37746.html</id>
    <published>2019-02-16T15:38:36.000Z</published>
    <updated>2019-02-17T11:19:49.821Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Abstract-测试创建博客模板"><a href="#Abstract-测试创建博客模板" class="headerlink" title="Abstract: 测试创建博客模板"></a>Abstract: 测试创建博客模板</h5><a id="more"></a><h1 id="this-is-content"><a href="#this-is-content" class="headerlink" title="this is content"></a>this is content</h1><h2 id="this-is-sub-title"><a href="#this-is-sub-title" class="headerlink" title="this is sub title"></a>this is sub title</h2><p>“百度”二字，来自于八百年前南宋词人辛弃疾的一句词：众里寻他千百度。这句话描述了词人对理想的执着追求。1999年底，身在美国硅谷的李彦宏看到了中国互联网及中文搜索引擎服务的巨大发展潜力，抱着技术改变世界的梦想，他毅然辞掉硅谷的高薪工作，携搜索引擎专利技术，于 2000年1月1日在中关村创建了百度公司。</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Abstract-测试创建博客模板&quot;&gt;&lt;a href=&quot;#Abstract-测试创建博客模板&quot; class=&quot;headerlink&quot; title=&quot;Abstract: 测试创建博客模板&quot;&gt;&lt;/a&gt;Abstract: 测试创建博客模板&lt;/h5&gt;
    
    </summary>
    
      <category term="test" scheme="http://showteeth.tech/categories/test/"/>
    
    
      <category term="templete" scheme="http://showteeth.tech/tags/templete/"/>
    
  </entry>
  
  <entry>
    <title>test-top</title>
    <link href="http://showteeth.tech/posts/48109.html"/>
    <id>http://showteeth.tech/posts/48109.html</id>
    <published>2019-02-14T16:00:00.000Z</published>
    <updated>2019-02-19T06:25:34.245Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Abstract-测试置顶操作"><a href="#Abstract-测试置顶操作" class="headerlink" title="Abstract: 测试置顶操作"></a>Abstract: 测试置顶操作</h5><a id="more"></a><h1 id="this-is-title"><a href="#this-is-title" class="headerlink" title="this is title"></a>this is title</h1><h2 id="this-is-subtitle"><a href="#this-is-subtitle" class="headerlink" title="this is subtitle"></a>this is subtitle</h2>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Abstract-测试置顶操作&quot;&gt;&lt;a href=&quot;#Abstract-测试置顶操作&quot; class=&quot;headerlink&quot; title=&quot;Abstract: 测试置顶操作&quot;&gt;&lt;/a&gt;Abstract: 测试置顶操作&lt;/h5&gt;
    
    </summary>
    
      <category term="test" scheme="http://showteeth.tech/categories/test/"/>
    
    
      <category term="top" scheme="http://showteeth.tech/tags/top/"/>
    
  </entry>
  
  <entry>
    <title>test-top2</title>
    <link href="http://showteeth.tech/posts/39162.html"/>
    <id>http://showteeth.tech/posts/39162.html</id>
    <published>2019-02-14T16:00:00.000Z</published>
    <updated>2019-02-19T06:25:45.604Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Abstract-测试置顶标签2"><a href="#Abstract-测试置顶标签2" class="headerlink" title="Abstract: 测试置顶标签2"></a>Abstract: 测试置顶标签2</h5><a id="more"></a><h1 id="this-is-title"><a href="#this-is-title" class="headerlink" title="this is title"></a>this is title</h1><h2 id="this-is-subtitle"><a href="#this-is-subtitle" class="headerlink" title="this is subtitle"></a>this is subtitle</h2>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Abstract-测试置顶标签2&quot;&gt;&lt;a href=&quot;#Abstract-测试置顶标签2&quot; class=&quot;headerlink&quot; title=&quot;Abstract: 测试置顶标签2&quot;&gt;&lt;/a&gt;Abstract: 测试置顶标签2&lt;/h5&gt;
    
    </summary>
    
      <category term="test" scheme="http://showteeth.tech/categories/test/"/>
    
    
      <category term="top" scheme="http://showteeth.tech/tags/top/"/>
    
  </entry>
  
  <entry>
    <title>四种方法实现数据双向绑定</title>
    <link href="http://showteeth.tech/posts/12160.html"/>
    <id>http://showteeth.tech/posts/12160.html</id>
    <published>2018-05-10T03:29:08.000Z</published>
    <updated>2019-02-18T17:02:57.141Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>在一些前端框架中，例如 <code>angular</code>，<code>vue</code>都有数据双向数据绑定的功能，这个功能极大的方便我们操作数据。那么接下来我会讲解一下双向数据绑定的4种实现方式。</p></blockquote><a id="more"></a><h2 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h2><h3 id="1-手动触发绑定"><a href="#1-手动触发绑定" class="headerlink" title="1.手动触发绑定"></a>1.手动触发绑定</h3><p>手动触发绑定的主要思路是通过在数据对象定义 get 和 set 方法(可以使用其他的命名方法)，调用时手动去触发 get 和 set 方法去获取数据，修改数据，改变数据后会主动去触发 get 和 set 函数中视图层的重新渲染。</p><p>简单的手动触发绑定代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>手动双向绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"input"</span> <span class="attr">s-value</span>=<span class="string">"value"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"el"</span> <span class="attr">s-text</span>=<span class="string">"value"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        let elems = [document.getElementById('el'), document.getElementById('input')];</span></span><br><span class="line"><span class="undefined">        let data = &#123;</span></span><br><span class="line"><span class="undefined">            value: ''</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        let directive = &#123;</span></span><br><span class="line"><span class="undefined">            text: function (text) &#123;</span></span><br><span class="line"><span class="undefined">                this.innerHTML = text</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            value: function (value) &#123;</span></span><br><span class="line"><span class="undefined">                this.setAttribute('value', value)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        // 监听 input 的 keyup 事件</span></span><br><span class="line"><span class="undefined">        elems[1].addEventListener('keyup', function (e) &#123;</span></span><br><span class="line"><span class="undefined">            set('value', e.target.value)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="undefined">        function scan() &#123;</span></span><br><span class="line"><span class="undefined">            for (let elem of elems) &#123;</span></span><br><span class="line"><span class="undefined">                for (let attr of elem.attributes) &#123;</span></span><br><span class="line"><span class="undefined">                    if (attr.nodeName.indexOf('s-') !== -1) &#123;</span></span><br><span class="line"><span class="undefined">                        // 调用属性指令</span></span><br><span class="line"><span class="undefined">                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function set(key, value) &#123;</span></span><br><span class="line"><span class="undefined">            data[key] = value;</span></span><br><span class="line"><span class="undefined">            scan();</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-数据劫持"><a href="#2-数据劫持" class="headerlink" title="2.数据劫持"></a>2.数据劫持</h3><p>数据劫持的基本思路是使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty" target="_blank" rel="noopener">Object.defineProperty</a> 对 ViewModel 数据对象进行 get 和 set 的监听，当有数据变动的时候扫描元素节点，然后去运行对应节点上的指令（directive）。</p><p>代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>数据劫持<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"input"</span> <span class="attr">s-value</span>=<span class="string">"value"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"el"</span> <span class="attr">s-text</span>=<span class="string">"value"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        let elems = [document.getElementById('el'), document.getElementById('input')];</span></span><br><span class="line"><span class="undefined">        let data = &#123;</span></span><br><span class="line"><span class="undefined">            value: ''</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        let directive = &#123;</span></span><br><span class="line"><span class="undefined">            text: function (text) &#123;</span></span><br><span class="line"><span class="undefined">                this.innerHTML = text</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            value: function (value) &#123;</span></span><br><span class="line"><span class="undefined">                this.setAttribute('value', value)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        let value;</span></span><br><span class="line"><span class="undefined">        defineGetAndSet(data, 'value')</span></span><br><span class="line"><span class="undefined">        // 监听 input 的 keyup 事件</span></span><br><span class="line"><span class="undefined">        elems[1].addEventListener('keyup', function (e) &#123;</span></span><br><span class="line"><span class="undefined">            data.value = e.target.value;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function scan() &#123;</span></span><br><span class="line"><span class="undefined">            for (let elem of elems) &#123;</span></span><br><span class="line"><span class="undefined">                for (let attr of elem.attributes) &#123;</span></span><br><span class="line"><span class="undefined">                    if (attr.nodeName.indexOf('s-') !== -1) &#123;</span></span><br><span class="line"><span class="undefined">                        // 调用属性指令</span></span><br><span class="line"><span class="undefined">                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function defineGetAndSet(obj, attrName) &#123;</span></span><br><span class="line"><span class="undefined">            Object.defineProperty(obj, attrName, &#123;</span></span><br><span class="line"><span class="undefined">                get: function () &#123;</span></span><br><span class="line"><span class="undefined">                    return value</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                set: function (newValue) &#123;</span></span><br><span class="line"><span class="undefined">                    value = newValue;</span></span><br><span class="line"><span class="undefined">                    scan()</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                configurable: true,</span></span><br><span class="line"><span class="undefined">                enumerable: true</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-使用-es6的-Proxy"><a href="#3-使用-es6的-Proxy" class="headerlink" title="3.使用 es6的 Proxy"></a>3.使用 es6的 Proxy</h3><p>利用<a href="http://es6.ruanyifeng.com/#docs/proxy" target="_blank" rel="noopener">Proxy</a> ，它可以目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此可以对外界的访问进行过滤和改写，实现数据双向数据绑定和上一个类似。</p><p>代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>使用 proxy 进行数据双向绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"input"</span> <span class="attr">s-value</span>=<span class="string">"value"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"el"</span> <span class="attr">s-text</span>=<span class="string">"value"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        let elems = [document.getElementById('el'), document.getElementById('input')];</span></span><br><span class="line"><span class="undefined">        let directive = &#123;</span></span><br><span class="line"><span class="undefined">            text: function (text) &#123;</span></span><br><span class="line"><span class="undefined">                this.innerHTML = text</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            value: function (value) &#123;</span></span><br><span class="line"><span class="undefined">                this.setAttribute('value', value)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        // ------------- 看下面 -------------</span></span><br><span class="line"><span class="undefined">        let data = new Proxy(&#123;&#125;, &#123;</span></span><br><span class="line"><span class="undefined">            get: function (target, key, receiver) &#123;</span></span><br><span class="line"><span class="undefined">                return target.value</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            set(target, key, value, receiver) &#123;</span></span><br><span class="line"><span class="undefined">                target.value = value;</span></span><br><span class="line"><span class="undefined">                scan();</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">        // ------------- 看上面 -------------</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        // 监听 input 的 keyup 事件</span></span><br><span class="line"><span class="undefined">        elems[1].addEventListener('keyup', function (e) &#123;</span></span><br><span class="line"><span class="undefined">            data.value = e.target.value;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function scan() &#123;</span></span><br><span class="line"><span class="undefined">            for (let elem of elems) &#123;</span></span><br><span class="line"><span class="undefined">                for (let attr of elem.attributes) &#123;</span></span><br><span class="line"><span class="undefined">                    if (attr.nodeName.indexOf('s-') !== -1) &#123;</span></span><br><span class="line"><span class="undefined">                        // 调用属性指令</span></span><br><span class="line"><span class="undefined">                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue])</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-脏检查"><a href="#4-脏检查" class="headerlink" title="4. 脏检查"></a>4. 脏检查</h3><p>脏检查的基本原理是在 ViewModel 对象的某个属性值发生变化的时候找到与这个属性值相关的所有元素，然后去比较数据变化，如果变化就用 directive 指令调用，对这个元素进行重新渲染。</p><p>简单的脏检查代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>脏检查<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"input"</span> <span class="attr">s-bind</span>=<span class="string">"value"</span> <span class="attr">s-event</span>=<span class="string">"value"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"el"</span> <span class="attr">s-event</span>=<span class="string">"text"</span> <span class="attr">s-bind</span>=<span class="string">"value"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        let elems = [document.getElementById('el'), document.getElementById('input')];</span></span><br><span class="line"><span class="undefined">        let directives = &#123;</span></span><br><span class="line"><span class="undefined">            text: function (text) &#123;</span></span><br><span class="line"><span class="undefined">                this.innerHTML = text</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            value: function (value) &#123;</span></span><br><span class="line"><span class="undefined">                this.setAttribute('value', value)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        let data = &#123;</span></span><br><span class="line"><span class="undefined">            value: ''</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        // 扫描元素，使每个元素的 directive 数组为空</span></span><br><span class="line"><span class="undefined">        scan(elems)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        // 监听 input 的 keyup 事件</span></span><br><span class="line"><span class="undefined">        elems[1].addEventListener('keyup', function (e) &#123;</span></span><br><span class="line"><span class="undefined">            data.value = e.target.value;</span></span><br><span class="line"><span class="undefined">            startDirtyCheck(e.target.getAttribute('s-bind'))</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function scan() &#123;</span></span><br><span class="line"><span class="undefined">            for (let elem of elems) &#123;</span></span><br><span class="line"><span class="undefined">                elem.directive = []</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        // 开启脏检查</span></span><br><span class="line"><span class="undefined">        function startDirtyCheck(value) &#123;</span></span><br><span class="line"><span class="undefined">            let list = document.querySelectorAll('[s-bind=' + value + ']')</span></span><br><span class="line"><span class="undefined">            dirtyCheck(list)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function dirtyCheck(elems) &#123;</span></span><br><span class="line"><span class="undefined">            // 扫描带指令的节点属性</span></span><br><span class="line"><span class="undefined">            for (let i = 0, len = elems.length; i &lt; len; i++) &#123;</span></span><br><span class="line"><span class="undefined">                let elem = elems[i];</span></span><br><span class="line"><span class="undefined">                for (let j = 0, len1 = elem.attributes.length; j &lt; len1; j++) &#123;</span></span><br><span class="line"><span class="undefined">                    let attr = elem.attributes[j];</span></span><br><span class="line"><span class="undefined">                    if (attr.nodeName.indexOf('s-event') !== -1) &#123;</span></span><br><span class="line"><span class="undefined">                        let dataKey = elem.getAttribute('s-bind')</span></span><br><span class="line"><span class="undefined">                        // 进行脏数据检查，如果数据改变，重新执行指令</span></span><br><span class="line"><span class="undefined">                        if (elem.directive[attr.nodeValue] !== data[dataKey]) &#123;</span></span><br><span class="line"><span class="undefined">                            directives[attr.nodeValue].call(elem, data[dataKey])</span></span><br><span class="line"><span class="undefined">                            elem.directive[attr.nodeValue] = data[dataKey]</span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;在一些前端框架中，例如 &lt;code&gt;angular&lt;/code&gt;，&lt;code&gt;vue&lt;/code&gt;都有数据双向数据绑定的功能，这个功能极大的方便我们操作数据。那么接下来我会讲解一下双向数据绑定的4种实现方式。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://showteeth.tech/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://showteeth.tech/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="js" scheme="http://showteeth.tech/tags/js/"/>
    
  </entry>
  
</feed>
