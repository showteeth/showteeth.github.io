{"meta":{"title":"showteeth's blog","subtitle":null,"description":null,"author":"showteeth","url":"http://showteeth.tech"},"pages":[{"title":"","date":"2019-02-23T08:29:35.901Z","updated":"2019-02-23T08:29:35.901Z","comments":false,"path":"about/index.html","permalink":"http://showteeth.tech/about/index.html","excerpt":"","text":"This is a self-introduce pageUnder construction"},{"title":"categories","date":"2019-02-19T09:38:27.000Z","updated":"2019-02-19T16:27:19.660Z","comments":false,"path":"categories/index.html","permalink":"http://showteeth.tech/categories/index.html","excerpt":"","text":""},{"title":"","date":"2019-02-19T16:02:08.886Z","updated":"2019-02-19T16:02:08.886Z","comments":true,"path":"photos/data.json","permalink":"http://showteeth.tech/photos/data.json","excerpt":"","text":"{\"list\":[{\"date\":\"2009-09\",\"arr\":{\"year\":2009,\"month\":9,\"link\":[\"2009-09-26_test5.jpg\",\"2009-09-26_test2.jpg\"],\"text\":[\"test5\",\"test2\"],\"type\":[\"image\",\"image\"]}},{\"date\":\"2007-05\",\"arr\":{\"year\":2007,\"month\":5,\"link\":[\"2007-05-28_test3.jpg\"],\"text\":[\"test3\"],\"type\":[\"image\"]}},{\"date\":\"2006-11\",\"arr\":{\"year\":2006,\"month\":11,\"link\":[\"2006-11-22_test4.jpg\"],\"text\":[\"test4\"],\"type\":[\"image\"]}},{\"date\":\"2005-07\",\"arr\":{\"year\":2005,\"month\":7,\"link\":[\"2005-07-17_test1.jpg\"],\"text\":[\"test1\"],\"type\":[\"image\"]}}]}"},{"title":"相册","date":"2019-02-19T14:40:29.000Z","updated":"2019-02-19T15:57:21.505Z","comments":true,"path":"photos/index.html","permalink":"http://showteeth.tech/photos/index.html","excerpt":"","text":"Photos图片正在加载中…setTimeout(function(){var e,t;e=\"ins.js\",t=document.createElement(\"script\"),document.getElementsByTagName(\"body\")[0].appendChild(t),t.setAttribute(\"src\",e)},0)"},{"title":"","date":"2019-02-19T14:45:22.084Z","updated":"2018-09-01T23:27:30.000Z","comments":true,"path":"photos/ins.css","permalink":"http://showteeth.tech/photos/ins.css","excerpt":"","text":"#post-instagram{padding:30px}figure{margin:0}#post-instagram .article-entry{padding-right:0}.instagram{position:relative;min-height:500px}.instagram img{width:100%}.posts-expand .post-body img{padding:0;border:0}.instagram .year{font-size:16px}.instagram .open-ins{padding:10px 0;color:#cdcdcd}.instagram .open-ins:hover{color:#657b83}.instagram .year{display:inline}.instagram .thumb{width:25%;height:0;padding-bottom:25%;position:relative;display:inline-block;text-align:center;background:#ededed;outline:1px solid #ddd}.instagram .thumb a{position:relative}.instagram .album h1 em{font-style:normal;font-size:14px;margin-left:10px}.instagram .album ul{display:flex;flex-wrap:wrap;clear:both;width:100%;text-align:left}.instagram .album li{list-style:none;display:inline-block;box-sizing:border-box;padding:0 5px;margin-bottom:-10px;height:0;width:25%;position:relative;padding-bottom:25%}.instagram .album li:before{display:none}.instagram .album div.img-box{position:absolute;width:90%;height:90%;box-shadow:0 1px 0 rgba(255,255,255,.4),0 1px 0 1px rgba(255,255,255,.1)}.instagram .album div.img-box img{width:100%;height:100%;position:absolute;z-index:2}.instagram .album div.img-box .img-bg{position:absolute;top:0;left:0;bottom:0;width:100%;margin:-5px;padding:5px;box-shadow:0 0 0 1px rgba(0,0,0,.04),0 1px 5px rgba(0,0,0,.1);transition:all .15s ease-out .1s;opacity:.2;cursor:pointer;display:block;z-index:3}.instagram .album div.img-box .icon{font-size:14px;position:absolute;left:50%;top:50%;margin-left:-7px;margin-top:-7px;color:#999;z-index:1}.instagram .album div.img-box .img-bg:hover{opacity:0}.photos-btn-wrap{border-bottom:1px solid #e5e5e5;margin-bottom:20px}.photos-btn{font-size:16px;color:#333;margin-bottom:-4px;padding:5px 8px 3px}.photos-btn.active{color:#08c;border:1px solid #e5e5e5;border-bottom:5px solid #fff}@media screen and (max-width:600px){.instagram .thumb{width:50%;padding-bottom:50%}.instagram .album li{width:100%;position:relative;padding-bottom:100%;text-align:center}.instagram .album div.img-box{margin:0;width:90%;height:90%}}"},{"title":"","date":"2019-02-19T14:45:22.101Z","updated":"2018-09-01T23:27:30.000Z","comments":true,"path":"photos/photoswipe.css","permalink":"http://showteeth.tech/photos/photoswipe.css","excerpt":"","text":"/*! PhotoSwipe main CSS by Dmitry Semenov | photoswipe.com | MIT license */.pswp{display:none;position:absolute;width:100%;height:100%;left:0;top:0;overflow:hidden;touch-action:none;z-index:1500;-webkit-text-size-adjust:100%;-webkit-backface-visibility:hidden;outline:0}.pswp *{box-sizing:border-box}.pswp img{max-width:none}.pswp--animate_opacity{opacity:.001;will-change:opacity;transition:opacity 333ms cubic-bezier(.4,0,.22,1)}.pswp--open{display:block}.pswp--zoom-allowed .pswp__img{cursor:zoom-in}.pswp--zoomed-in .pswp__img{cursor:-webkit-grab;cursor:grab}.pswp--dragging .pswp__img{cursor:-webkit-grabbing;cursor:grabbing}.pswp__bg{position:absolute;left:0;top:0;width:100%;height:100%;background:#000;opacity:0;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-backface-visibility:hidden;will-change:opacity}.pswp__scroll-wrap{position:absolute;left:0;top:0;width:100%;height:100%;overflow:hidden}.pswp__container,.pswp__zoom-wrap{touch-action:none;position:absolute;left:0;right:0;top:0;bottom:0}.pswp__container,.pswp__img{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}.pswp__zoom-wrap{position:absolute;width:100%;-webkit-transform-origin:left top;transform-origin:left top;transition:-webkit-transform 333ms cubic-bezier(.4,0,.22,1);transition:transform 333ms cubic-bezier(.4,0,.22,1);transition:transform 333ms cubic-bezier(.4,0,.22,1), -webkit-transform 333ms cubic-bezier(.4,0,.22,1)}.pswp__bg{will-change:opacity;transition:opacity 333ms cubic-bezier(.4,0,.22,1)}.pswp--animated-in .pswp__bg,.pswp--animated-in .pswp__zoom-wrap{transition:none}.pswp__container,.pswp__zoom-wrap{-webkit-backface-visibility:hidden}.pswp__item{position:absolute;left:0;right:0;top:0;bottom:0;overflow:hidden}.pswp__img{position:absolute;width:auto;height:auto;top:0;left:0}.pswp__img--placeholder{-webkit-backface-visibility:hidden}.pswp__img--placeholder--blank{background:#222}.pswp--ie .pswp__img{width:100%!important;height:auto!important;left:0;top:0}.pswp__error-msg{position:absolute;left:0;top:50%;width:100%;text-align:center;font-size:14px;line-height:16px;margin-top:-8px;color:#ccc}.pswp__error-msg a{color:#ccc;text-decoration:underline}"},{"title":"","date":"2019-02-17T05:56:14.120Z","updated":"2019-02-17T05:56:14.120Z","comments":true,"path":"projects/index.html","permalink":"http://showteeth.tech/projects/index.html","excerpt":"","text":"This is a project pageUnder construction"},{"title":"tags","date":"2019-02-19T09:37:21.000Z","updated":"2019-02-19T16:27:34.089Z","comments":false,"path":"tags/index.html","permalink":"http://showteeth.tech/tags/index.html","excerpt":"","text":""},{"title":"","date":"2019-02-19T11:25:33.167Z","updated":"2019-02-19T11:25:33.167Z","comments":true,"path":"top/index.html","permalink":"http://showteeth.tech/top/index.html","excerpt":"","text":"AV.initialize(\"leancloud_appid\",\"leancloud_appkey\")var time=0,title=\"\",url=\"\",query=new AV.Query(\"Counter\");query.notEqualTo(\"id\",0),query.descending(\"time\"),query.limit(1e3),query.find().then(function(e){for(var t=0;t"},{"title":"","date":"2019-02-19T15:47:13.702Z","updated":"2019-02-19T15:47:13.702Z","comments":true,"path":"photos/ins.js","permalink":"http://showteeth.tech/photos/ins.js","excerpt":"","text":"/******/ (function(modules) { // webpackBootstrap /******/ // The module cache /******/ var installedModules = {}; /******/ /******/ // The require function /******/ function __webpack_require__(moduleId) { /******/ /******/ // Check if module is in cache /******/ if (installedModules[moduleId]) /******/ return installedModules[moduleId].exports; /******/ /******/ // Create a new module (and put it into the cache) /******/ var module = installedModules[moduleId] = { /******/ exports: {}, /******/ id: moduleId, /******/ loaded: false /******/ }; /******/ /******/ // Execute the module function /******/ modules[moduleId].call(module.exports, module, module.exports, __webpack_require__); /******/ /******/ // Flag the module as loaded /******/ module.loaded = true; /******/ /******/ // Return the exports of the module /******/ return module.exports; /******/ } /******/ /******/ /******/ // expose the modules object (__webpack_modules__) /******/ __webpack_require__.m = modules; /******/ /******/ // expose the module cache /******/ __webpack_require__.c = installedModules; /******/ /******/ // __webpack_public_path__ /******/ __webpack_require__.p = \"/dist/\"; /******/ /******/ // Load entry module and return exports /******/ return __webpack_require__(0); /******/ }) /************************************************************************/ /******/ ([ /* 0 */ /***/ function(module, exports, __webpack_require__) { 'use strict'; __webpack_require__(1); var _view = __webpack_require__(2); var _view2 = _interopRequireDefault(_view); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } /** * @name impush-client * @description 这个项目让我发家致富… * @date 2016-12-1 */ var _collection = []; var _count = 0; var searchData; function addMask(elem) { var rect = elem.getBoundingClientRect(); var style = getComputedStyle(elem, null); var mask = document.createElement('i'); mask.className = 'icon-film'; mask.style.color = '#fff'; mask.style.fontSize = '26px'; mask.style.position = 'absolute'; mask.style.right = '10px'; mask.style.bottom = '10px'; mask.style.zIndex = 1; elem.parentNode.appendChild(mask); } var createVideoIncon = function createVideoIncon() { var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]'); for (var i = 0, len = $videoImg.length; i < len; i++) { addMask($videoImg[i]); } }; var render = function render(res) { var ulTmpl = \"\"; for (var j = 0, len2 = res.list.length; j < len2; j++) { var data = res.list[j].arr; var liTmpl = \"\"; for (var i = 0, len = data.link.length; i < len; i++) { //var minSrc = 'https://raw.githubusercontent.com/yourgithub/Blog_Album/master/min_photos/' + data.link[i]; var minSrc = 'https://raw.githubusercontent.com/showteeth/Blog_Album/master/min_photos/' + data.link[i]; // var src = 'https://raw.githubusercontent.com/yourgithub/Blog_Album/master/photos/' + data.link[i]; var src = 'https://raw.githubusercontent.com/showteeth/Blog_Album/master/photos/' + data.link[i]; var type = data.type[i]; var target = src + (type === 'video' ? '.mp4' : '.jpg'); liTmpl += '\\ \\ \\ \\ ' + data.text[i] + '\\ '; } ulTmpl = ulTmpl + '' + data.year + '年' + data.month + '月\\ ' + liTmpl + '\\ '; } document.querySelector('.instagram').innerHTML = '' + ulTmpl + ''; createVideoIncon(); _view2.default.init(); }; var replacer = function replacer(str) { var arr = str.split(\"/\"); return \"/assets/ins/\" + arr[arr.length - 1]; }; var ctrler = function ctrler(data) { var imgObj = {}; for (var i = 0, len = data.length; i < len; i++) { var y = data[i].y; var m = data[i].m; var src = replacer(data[i].src); var text = data[i].text; var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m); if (imgObj[key]) { imgObj[key].srclist.push(src); imgObj[key].text.push(text); } else { imgObj[key] = { year: y, month: m, srclist: [src], text: [text] }; } } render(imgObj); }; function loadData(success) { if (!searchData) { var xhr = new XMLHttpRequest(); xhr.open('GET', 'data.json?t=' + +new Date(), true); xhr.onload = function() { if (this.status >= 200 && this.status < 300) { var res = JSON.parse(this.response); searchData = res; success(searchData); } else { console.error(this.statusText); } }; xhr.onerror = function() { console.error(this.statusText); }; xhr.send(); } else { success(searchData); } } var Ins = { init: function init() { loadData(function(data) { render(data); }); } }; Ins.init(); // export default impush; /***/ }, /* 1 */ /***/ function(module, exports, __webpack_require__) { /* WEBPACK VAR INJECTION */ (function(global) { 'use strict'; var inViewport = __webpack_require__(3); var lazyAttrs = ['data-src']; global.lzld = lazyload(); // Provide libs using getAttribute early to get the good src // and not the fake data-src replaceGetAttribute('Image'); replaceGetAttribute('IFrame'); function registerLazyAttr(attr) { if (indexOf.call(lazyAttrs, attr) === -1) { lazyAttrs.push(attr); } } function lazyload(opts) { //console.log(\"lazyload\") opts = merge({ 'offset': 333, 'src': 'data-src', 'container': false }, opts || {}); if (typeof opts.src === 'string') { registerLazyAttr(opts.src); } var elts = []; function show(elt) { var src = findRealSrc(elt); if (src) { elt.src = src; } elt.setAttribute('data-lzled', true); elts[indexOf.call(elts, elt)] = null; } function findRealSrc(elt) { if (typeof opts.src === 'function') { return opts.src(elt); } return elt.getAttribute(opts.src); } function register(elt) { elt.onload = null; elt.removeAttribute('onload'); elt.onerror = null; elt.removeAttribute('onerror'); if (indexOf.call(elts, elt) === -1) { inViewport(elt, opts, show); } } return register; } function replaceGetAttribute(elementName) { var fullname = 'HTML' + elementName + 'Element'; if (fullname in global === false) { return; } var original = global[fullname].prototype.getAttribute; global[fullname].prototype.getAttribute = function(name) { if (name === 'src') { var realSrc; for (var i = 0, max = lazyAttrs.length; i < max; i++) { realSrc = original.call(this, lazyAttrs[i]); if (realSrc) { break; } } return realSrc || original.call(this, name); } // our own lazyloader will go through theses lines // because we use getAttribute(opts.src) return original.call(this, name); }; } function merge(defaults, opts) { for (var name in defaults) { if (opts[name] === undefined) { opts[name] = defaults[name]; } } return opts; } // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html function indexOf(value) { for (var i = this.length; i-- && this[i] !== value;) {} return i; } module.exports = lazyload; // export default impush; /* WEBPACK VAR INJECTION */ }.call(exports, (function() { return this; }()))) /***/ }, /* 2 */ /***/ function(module, exports) { 'use strict'; var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) { // parse slide data (url, title, size ...) from DOM elements // (children of gallerySelector) var parseThumbnailElements = function parseThumbnailElements(el) { el = el.parentNode.parentNode; var thumbElements = el.getElementsByClassName('thumb'), numNodes = thumbElements.length, items = [], figureEl, linkEl, size, type, // video or not target, item; for (var i = 0; i < numNodes; i++) { figureEl = thumbElements[i]; // // include only element nodes if (figureEl.nodeType !== 1) { continue; } linkEl = figureEl.children[0]; // size = linkEl.getAttribute('data-size').split('x'); type = linkEl.getAttribute('data-type'); target = linkEl.getAttribute('data-target'); // create slide object item = { src: linkEl.getAttribute('href'), w: parseInt(size[0], 10), h: parseInt(size[1], 10) }; if (figureEl.children.length > 1) { item.title = figureEl.children[1].innerHTML; } if (linkEl.children.length > 0) { item.msrc = linkEl.children[0].getAttribute('src'); item.type = type; item.target = target; item.html = ''; if (type === 'video') { //item.src = null; } } item.el = figureEl; // save link to element for getThumbBoundsFn items.push(item); } return items; }; // find nearest parent element var closest = function closest(el, fn) { return el && (fn(el) ? el : closest(el.parentNode, fn)); }; // triggers when user clicks on thumbnail var onThumbnailsClick = function onThumbnailsClick(e) { e = e || window.event; e.preventDefault ? e.preventDefault() : e.returnValue = false; var eTarget = e.target || e.srcElement; // find root element of slide var clickedListItem = closest(eTarget, function(el) { return el.tagName && el.tagName.toUpperCase() === 'FIGURE'; }); if (!clickedListItem) { return; } // find index of clicked item by looping through all child nodes // alternatively, you may define index via data- attribute var clickedGallery = clickedListItem.parentNode, // childNodes = clickedListItem.parentNode.childNodes, // numChildNodes = childNodes.length, childNodes = document.getElementsByClassName('thumb'), numChildNodes = childNodes.length, nodeIndex = 0, index; for (var i = 0; i < numChildNodes; i++) { if (childNodes[i].nodeType !== 1) { continue; } if (childNodes[i] === clickedListItem) { index = nodeIndex; break; } nodeIndex++; } if (index >= 0) { // open PhotoSwipe if valid index found openPhotoSwipe(index, clickedGallery); } return false; }; // parse picture index and gallery index from URL (#&pid=1&gid=2) var photoswipeParseHash = function photoswipeParseHash() { var hash = window.location.hash.substring(1), params = {}; if (hash.length < 5) { return params; } var vars = hash.split('&'); for (var i = 0; i < vars.length; i++) { if (!vars[i]) { continue; } var pair = vars[i].split('='); if (pair.length < 2) { continue; } params[pair[0]] = pair[1]; } if (params.gid) { params.gid = parseInt(params.gid, 10); } return params; }; var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) { var pswpElement = document.querySelectorAll('.pswp')[0], gallery, options, items; items = parseThumbnailElements(galleryElement); // define options (if needed) options = { // define gallery index (for URL) galleryUID: galleryElement.getAttribute('data-pswp-uid'), getThumbBoundsFn: function getThumbBoundsFn(index) { // See Options -> getThumbBoundsFn section of documentation for more info var thumbnail = items[index].el.getElementsByTagName('img')[0], // find thumbnail pageYScroll = window.pageYOffset || document.documentElement.scrollTop, rect = thumbnail.getBoundingClientRect(); return { x: rect.left, y: rect.top + pageYScroll, w: rect.width }; } }; // PhotoSwipe opened from URL if (fromURL) { if (options.galleryPIDs) { // parse real index when custom PIDs are used // http://photoswipe.com/documentation/faq.html#custom-pid-in-url for (var j = 0; j < items.length; j++) { if (items[j].pid == index) { options.index = j; break; } } } else { // in URL indexes start from 1 options.index = parseInt(index, 10) - 1; } } else { options.index = parseInt(index, 10); } // exit if index not found if (isNaN(options.index)) { return; } if (disableAnimation) { options.showAnimationDuration = 0; } // Pass data to PhotoSwipe and initialize it gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options); gallery.init(); var $tempVideo; var stopVideoHandle = function stopVideoHandle() { if ($tempVideo) { $tempVideo.remove(); $tempVideo = null; } }; var changeHandle = function changeHandle() { var item = gallery.currItem; stopVideoHandle(); if (item.type === 'video') { var $ctn = item.container; var style = $ctn.getElementsByClassName('pswp__img')[0].style; var $video = document.createElement('video'); $video.setAttribute('autoplay', 'autoplay'); $video.setAttribute('controls', 'controls'); $video.setAttribute('src', item.target); $video.style.width = style.width; $video.style.height = style.height; $video.style.position = 'absolute'; $video.style.zIndex = 2; $tempVideo = $video; $ctn.appendChild($video); } }; gallery.listen('initialZoomIn', changeHandle); gallery.listen('afterChange', changeHandle); gallery.listen('initialZoomOut', stopVideoHandle); }; // loop through all gallery elements and bind events var galleryElements = document.querySelectorAll(gallerySelector); for (var i = 0, l = galleryElements.length; i < l; i++) { galleryElements[i].setAttribute('data-pswp-uid', i + 1); galleryElements[i].onclick = onThumbnailsClick; } // Parse URL and open gallery if it contains #&pid=3&gid=1 var hashData = photoswipeParseHash(); if (hashData.pid && hashData.gid) { openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true); } }; var Viewer = function() { function init() { initPhotoSwipeFromDOM('.photos'); } return { init: init }; }(); module.exports = Viewer; /***/ }, /* 3 */ /***/ function(module, exports) { /* WEBPACK VAR INJECTION */ (function(global) { module.exports = inViewport; var instances = []; var supportsMutationObserver = typeof global.MutationObserver === 'function'; function inViewport(elt, params, cb) { var opts = { container: global.document.body, offset: 0 }; if (params === undefined || typeof params === 'function') { cb = params; params = {}; } var container = opts.container = params.container || opts.container; var offset = opts.offset = params.offset || opts.offset; for (var i = 0; i < instances.length; i++) { if (instances[i].container === container) { return instances[i].isInViewport(elt, offset, cb); } } return instances[ instances.push(createInViewport(container)) - 1 ].isInViewport(elt, offset, cb); } function addEvent(el, type, fn) { if (el.attachEvent) { el.attachEvent('on' + type, fn); } else { el.addEventListener(type, fn, false); } } function debounce(func, wait, immediate) { var timeout; return function() { var context = this, args = arguments; var callNow = immediate && !timeout; clearTimeout(timeout); timeout = setTimeout(later, wait); if (callNow) func.apply(context, args); function later() { timeout = null; if (!immediate) func.apply(context, args); } }; } // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708 var contains = function() { if (!global.document) { return true; } return global.document.documentElement.compareDocumentPosition ? function(a, b) { return !!(a.compareDocumentPosition(b) & 16); } : global.document.documentElement.contains ? function(a, b) { return a !== b && (a.contains ? a.contains(b) : false); } : function(a, b) { while (b = b.parentNode) { if (b === a) { return true; } } return false; }; } function createInViewport(container) { var watches = createWatches(); var scrollContainer = container === global.document.body ? global : container; var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15); addEvent(scrollContainer, 'scroll', debouncedCheck); if (scrollContainer === global) { addEvent(global, 'resize', debouncedCheck); } if (supportsMutationObserver) { observeDOM(watches, container, debouncedCheck); } // failsafe check, every 200ms we check for visible images // usecase: a hidden parent containing eleements // when the parent becomes visible, we have no event that the children // became visible setInterval(debouncedCheck, 150); function isInViewport(elt, offset, cb) { if (!cb) { return isVisible(elt, offset); } var remote = createRemote(elt, offset, cb); remote.watch(); return remote; } function createRemote(elt, offset, cb) { function watch() { watches.add(elt, offset, cb); } function dispose() { watches.remove(elt); } return { watch: watch, dispose: dispose }; } function watchInViewport(elt, offset, cb) { if (isVisible(elt, offset)) { watches.remove(elt); cb(elt); } } function isVisible(elt, offset) { if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) { return false; } // Check if the element is visible // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js if (!elt.offsetWidth || !elt.offsetHeight) { return false; } var eltRect = elt.getBoundingClientRect(); var viewport = {}; if (container === global.document.body) { viewport = { top: -offset, left: -offset, right: global.document.documentElement.clientWidth + offset, bottom: global.document.documentElement.clientHeight + offset }; } else { var containerRect = container.getBoundingClientRect(); viewport = { top: containerRect.top - offset, left: containerRect.left - offset, right: containerRect.right + offset, bottom: containerRect.bottom + offset }; } // The element must overlap with the visible part of the viewport var visible = ( (eltRect.right > viewport.left) && (eltRect.left < viewport.right) && (eltRect.bottom > viewport.top) && (eltRect.top < viewport.bottom) ); return visible; } return { container: container, isInViewport: isInViewport }; } function createWatches() { var watches = []; function add(elt, offset, cb) { if (!isWatched(elt)) { watches.push([elt, offset, cb]); } } function remove(elt) { var pos = indexOf(elt); if (pos !== -1) { watches.splice(pos, 1); } } function indexOf(elt) { for (var i = watches.length - 1; i >= 0; i--) { if (watches[i][0] === elt) { return i; } } return -1; } function isWatched(elt) { return indexOf(elt) !== -1; } function checkAll(cb) { return function() { for (var i = watches.length - 1; i >= 0; i--) { cb.apply(this, watches[i]); } }; } return { add: add, remove: remove, isWatched: isWatched, checkAll: checkAll }; } function observeDOM(watches, container, cb) { var observer = new MutationObserver(watch); var filter = Array.prototype.filter; var concat = Array.prototype.concat; observer.observe(container, { childList: true, subtree: true, // changes like style/width/height/display will be catched attributes: true }); function watch(mutations) { // some new DOM nodes where previously watched // we should check their positions if (mutations.some(knownNodes) === true) { setTimeout(cb, 0); } } function knownNodes(mutation) { var nodes = concat.call([], Array.prototype.slice.call(mutation.addedNodes), mutation.target ); return filter.call(nodes, watches.isWatched).length > 0; } } /* WEBPACK VAR INJECTION */ }.call(exports, (function() { return this; }()))) /***/ } /******/ ]);"},{"title":"","date":"2019-02-19T14:45:22.068Z","updated":"2018-09-01T23:27:30.000Z","comments":true,"path":"photos/default-skin/default-skin.css","permalink":"http://showteeth.tech/photos/default-skin/default-skin.css","excerpt":"","text":"/*! PhotoSwipe Default UI CSS by Dmitry Semenov | photoswipe.com | MIT license */.pswp__button{width:44px;height:44px;position:relative;background:0 0;cursor:pointer;overflow:visible;-webkit-appearance:none;display:block;border:0;padding:0;margin:0;float:right;opacity:.75;transition:opacity .2s;box-shadow:none}.pswp__button:focus,.pswp__button:hover{opacity:1}.pswp__button:active{outline:0;opacity:.9}.pswp__button::-moz-focus-inner{padding:0;border:0}.pswp__ui--over-close .pswp__button--close{opacity:1}.pswp__button,.pswp__button--arrow--left:before,.pswp__button--arrow--right:before{background:url(default-skin.png) 0 0 no-repeat;background-size:264px 88px;width:44px;height:44px}@media (-webkit-min-device-pixel-ratio:1.1),(-webkit-min-device-pixel-ratio:1.09375),(min-resolution:105dpi),(min-resolution:1.1dppx){.pswp--svg .pswp__button,.pswp--svg .pswp__button--arrow--left:before,.pswp--svg .pswp__button--arrow--right:before{background-image:url(default-skin.svg)}.pswp--svg .pswp__button--arrow--left,.pswp--svg .pswp__button--arrow--right{background:0 0}}.pswp__button--close{background-position:0 -44px}.pswp__button--share{background-position:-44px -44px}.pswp__button--fs{display:none}.pswp--supports-fs .pswp__button--fs{display:block}.pswp--fs .pswp__button--fs{background-position:-44px 0}.pswp__button--zoom{display:none;background-position:-88px 0}.pswp--zoom-allowed .pswp__button--zoom{display:block}.pswp--zoomed-in .pswp__button--zoom{background-position:-132px 0}.pswp--touch .pswp__button--arrow--left,.pswp--touch .pswp__button--arrow--right{visibility:hidden}.pswp__button--arrow--left,.pswp__button--arrow--right{background:0 0;top:50%;margin-top:-50px;width:70px;height:100px;position:absolute}.pswp__button--arrow--left{left:0}.pswp__button--arrow--right{right:0}.pswp__button--arrow--left:before,.pswp__button--arrow--right:before{content:'';top:35px;background-color:rgba(0,0,0,.3);height:30px;width:32px;position:absolute}.pswp__button--arrow--left:before{left:6px;background-position:-138px -44px}.pswp__button--arrow--right:before{right:6px;background-position:-94px -44px}.pswp__counter,.pswp__share-modal{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.pswp__share-modal{display:block;background:rgba(0,0,0,.5);width:100%;height:100%;top:0;left:0;padding:10px;position:absolute;z-index:1600;opacity:0;transition:opacity .25s ease-out;-webkit-backface-visibility:hidden;will-change:opacity}.pswp__share-modal--hidden{display:none}.pswp__share-tooltip{z-index:1620;position:absolute;background:#fff;top:56px;border-radius:2px;display:block;width:auto;right:44px;box-shadow:0 2px 5px rgba(0,0,0,.25);-webkit-transform:translateY(6px);transform:translateY(6px);transition:-webkit-transform .25s;transition:transform .25s;transition:transform .25s, -webkit-transform .25s;-webkit-backface-visibility:hidden;will-change:transform}.pswp__share-tooltip a{display:block;padding:8px 12px;color:#000;text-decoration:none;font-size:14px;line-height:18px}.pswp__share-tooltip a:hover{text-decoration:none;color:#000}.pswp__share-tooltip a:first-child{border-radius:2px 2px 0 0}.pswp__share-tooltip a:last-child{border-radius:0 0 2px 2px}.pswp__share-modal--fade-in{opacity:1}.pswp__share-modal--fade-in .pswp__share-tooltip{-webkit-transform:translateY(0);transform:translateY(0)}.pswp--touch .pswp__share-tooltip a{padding:16px 12px}a.pswp__share--facebook:before{content:'';display:block;width:0;height:0;position:absolute;top:-12px;right:15px;border:6px solid transparent;border-bottom-color:#fff;-webkit-pointer-events:none;-moz-pointer-events:none;pointer-events:none}a.pswp__share--facebook:hover{background:#3e5c9a;color:#fff}a.pswp__share--facebook:hover:before{border-bottom-color:#3e5c9a}a.pswp__share--twitter:hover{background:#55acee;color:#fff}a.pswp__share--pinterest:hover{background:#ccc;color:#ce272d}a.pswp__share--download:hover{background:#ddd}.pswp__counter{position:absolute;left:0;top:0;height:44px;font-size:13px;line-height:44px;color:#fff;opacity:.75;padding:0 10px}.pswp__caption{position:absolute;left:0;bottom:0;width:100%;min-height:44px}.pswp__caption small{font-size:11px;color:#bbb}.pswp__caption__center{text-align:left;max-width:420px;margin:0 auto;font-size:13px;padding:10px;line-height:20px;color:#ccc}.pswp__caption--empty{display:none}.pswp__caption--fake{visibility:hidden}.pswp__preloader{width:44px;height:44px;position:absolute;top:0;left:50%;margin-left:-22px;opacity:0;transition:opacity .25s ease-out;will-change:opacity;direction:ltr}.pswp__preloader__icn{width:20px;height:20px;margin:12px}.pswp__preloader--active{opacity:1}.pswp__preloader--active .pswp__preloader__icn{background:url(preloader.gif) 0 0 no-repeat}.pswp--css_animation .pswp__preloader--active{opacity:1}.pswp--css_animation .pswp__preloader--active .pswp__preloader__icn{-webkit-animation:clockwise .5s linear infinite;animation:clockwise .5s linear infinite}.pswp--css_animation .pswp__preloader--active .pswp__preloader__donut{-webkit-animation:donut-rotate 1s cubic-bezier(.4,0,.22,1) infinite;animation:donut-rotate 1s cubic-bezier(.4,0,.22,1) infinite}.pswp--css_animation .pswp__preloader__icn{background:0 0;opacity:.75;width:14px;height:14px;position:absolute;left:15px;top:15px;margin:0}.pswp--css_animation .pswp__preloader__cut{position:relative;width:7px;height:14px;overflow:hidden}.pswp--css_animation .pswp__preloader__donut{box-sizing:border-box;width:14px;height:14px;border:2px solid #fff;border-radius:50%;border-left-color:transparent;border-bottom-color:transparent;position:absolute;top:0;left:0;background:0 0;margin:0}@media screen and (max-width:1024px){.pswp__preloader{position:relative;left:auto;top:auto;margin:0;float:right}}@-webkit-keyframes clockwise{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes clockwise{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes donut-rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}50%{-webkit-transform:rotate(-140deg);transform:rotate(-140deg)}100%{-webkit-transform:rotate(0);transform:rotate(0)}}@keyframes donut-rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}50%{-webkit-transform:rotate(-140deg);transform:rotate(-140deg)}100%{-webkit-transform:rotate(0);transform:rotate(0)}}.pswp__ui{-webkit-font-smoothing:auto;visibility:visible;opacity:1;z-index:1550}.pswp__top-bar{position:absolute;left:0;top:0;height:44px;width:100%}.pswp--has_mouse .pswp__button--arrow--left,.pswp--has_mouse .pswp__button--arrow--right,.pswp__caption,.pswp__top-bar{-webkit-backface-visibility:hidden;will-change:opacity;transition:opacity 333ms cubic-bezier(.4,0,.22,1)}.pswp--has_mouse .pswp__button--arrow--left,.pswp--has_mouse .pswp__button--arrow--right{visibility:visible}.pswp__caption,.pswp__top-bar{background-color:rgba(0,0,0,.5)}.pswp__ui--fit .pswp__caption,.pswp__ui--fit .pswp__top-bar{background-color:rgba(0,0,0,.3)}.pswp__ui--idle .pswp__top-bar{opacity:0}.pswp__ui--idle .pswp__button--arrow--left,.pswp__ui--idle .pswp__button--arrow--right{opacity:0}.pswp__ui--hidden .pswp__button--arrow--left,.pswp__ui--hidden .pswp__button--arrow--right,.pswp__ui--hidden .pswp__caption,.pswp__ui--hidden .pswp__top-bar{opacity:.001}.pswp__ui--one-slide .pswp__button--arrow--left,.pswp__ui--one-slide .pswp__button--arrow--right,.pswp__ui--one-slide .pswp__counter{display:none}.pswp__element--disabled{display:none!important}.pswp--minimal--dark .pswp__top-bar{background:0 0}"}],"posts":[{"title":"Linux中特殊符号用法","slug":"Linux中特殊符号用法","date":"2019-02-26T02:57:41.000Z","updated":"2019-02-26T06:02:38.599Z","comments":true,"path":"posts/55603.html","link":"","permalink":"http://showteeth.tech/posts/55603.html","excerpt":"Linux中常见的特殊符号用法，包括","text":"Linux中常见的特殊符号用法，包括开始于二级标题参考链接linux 特殊符号大全Linux命令中特殊符号，排版更好看Linux中的特殊符号及含义linux中特殊符号用法","categories":[{"name":"Linux","slug":"Linux","permalink":"http://showteeth.tech/categories/Linux/"}],"tags":[{"name":"Linux特殊符号用法","slug":"Linux特殊符号用法","permalink":"http://showteeth.tech/tags/Linux特殊符号用法/"}]},{"title":"每日总结和计划","slug":"每日总结和计划","date":"2019-02-24T13:20:17.000Z","updated":"2019-02-26T02:55:11.994Z","comments":true,"path":"posts/51961.html","link":"","permalink":"http://showteeth.tech/posts/51961.html","excerpt":"2019-2-24开始的每日学习总结与计划","text":"2019-2-24开始的每日学习总结与计划.tg{border-collapse:collapse;border-spacing:0;border-color:#999}.tg td{font-family:Arial,sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#999;color:#444;background-color:#f7fdfa}.tg th{font-family:Arial,sans-serif;font-size:14px;font-weight:400;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#999;color:#fff;background-color:#26ade4}.tg .tg-phtq{background-color:#d2e4fc;border-color:inherit;text-align:left;vertical-align:top}.tg .tg-hmp3{background-color:#d2e4fc;text-align:left;vertical-align:top}.tg .tg-baqh{text-align:center;vertical-align:top}.tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top}.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}.tg .tg-0lax{text-align:left;vertical-align:top}2019-2-24今日学习完成情况今日学习情况总览：类别学习内容大致描述大概用时 Linux常用基本命令-sed学习了基本语法、掌握了选项i、n、e、f以及命令s、p、g2小时 Python 机器学习 其他内容markdown完成了markdown基本语法的学习3个小时今日学习情况总结：首先是学习了markdown基本语法，收获了很多，比如html块元素是必须要进行留空白行的、有序列表前的数字不关键、创建表格以及进行相应的优化（还不够完善）等新内容；也开始学习了linux基本命令sed，对其使用有了基本的了解，明天还要接着学习！明日学习哪些内容明日学习计划总览：markdown表格的优化（宽度调整）shell中特殊符号的学习sed命令的学习2019-2-25今日学习计划总览：类别学习内容大致描述大概用时 Linux常用基本命令-sed完成了sed的学习大概3个小时 Python 机器学习 其他内容今日学习情况总结：今天主要是完成了sed命令的学习，学习过程中发现sed和之前学的其他命令如awk、grep等有很多相似之处，有了之前的基础学起来更加容易理解，果然是学的越多学得越快！！！通过对sed命令的学习，在以后处理文本时就又增加了一个非常有力的工具！每日学习之后不要忘了： 修改todo list 修改对应文章中的链接 在前一天对应的学习任务上画删除线明日学习哪些内容明日学习计划总览：shell中特殊符号的处理markdown表格的优化（宽度调整）~sort排序命令2019-2-26今日学习计划总览：类别学习内容大致描述大概用时 Linux常用基本命令-sed完成了sed的学习大概3个小时 Python 机器学习 其他内容markdown基本语法表格优化-单元格宽度自定义大概30分钟今日学习情况总结：每日学习之后不要忘了： 修改todo list 修改对应文章中的链接 在前一天对应的学习任务上画删除线明日学习哪些内容明日学习计划总览：","categories":[{"name":"每日总结和计划","slug":"每日总结和计划","permalink":"http://showteeth.tech/categories/每日总结和计划/"}],"tags":[{"name":"每日总结和计划","slug":"每日总结和计划","permalink":"http://showteeth.tech/tags/每日总结和计划/"}]},{"title":"markdown基础语法","slug":"markdown基础语法","date":"2019-02-24T04:09:11.000Z","updated":"2019-02-26T02:52:30.210Z","comments":true,"path":"posts/65136.html","link":"","permalink":"http://showteeth.tech/posts/65136.html","excerpt":"这篇文章总结markdown基础语法，便于后续查找和使用。另有一篇next-markdown技巧和模板总结了博客写作中常用的markdown技巧和模板，有些并不是原生的markdown语法，但是写作效果很好看，需要的时候可以查阅这个。","text":"这篇文章总结markdown基础语法，便于后续查找和使用。另有一篇next-markdown技巧和模板总结了博客写作中常用的markdown技巧和模板，有些并不是原生的markdown语法，但是写作效果很好看，需要的时候可以查阅这个。markdown特性Markdown 的目标是实现易读易写兼容HTML，不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写，不需要额外标注这是 HTML 或是 Markdown，只要直接加标签就可以了，不过有一些标签需要特殊注意特殊字符转换：特殊字符如HTML中需要特殊处理的字符&lt;和&amp;，在非代码单位内，markdown会将其自动转化为&amp;lt; 和 &amp;amp;这种实体的形式（虽然在markdown中看不到，但是实际上在生成html时markdown自动将其转化为上述实体的形式），但是在code 范围内，不论是行内还是区块， &lt;和 &amp; 两个符号都一定会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code。附上HTML 中有用的字符实体在markdown使用HTML标签需要特殊注意的是 HTML 的区块元素，比如 &lt;div&gt;、&lt;table&gt;、&lt;pre&gt;、&lt;p&gt; 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进;Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 &lt;p&gt; 标签HTML 区块标签间的 Markdown 格式语法将不会被处理，如&lt;p&gt;这是**一个**测试&lt;/p&gt;中一个不会加粗显示HTML 的行内标签如 &lt;span&gt;、&lt;cite&gt;、&lt;del&gt; 可以在 Markdown 的段落、列表或是标题里随意使用与处在 HTML 区块标签间不同，Markdown 语法在 HTML 行内标签间是有效的基础语法区块元素换行和段落在markdown中进行换行操作：一行文本末尾增加两个以上的空格然后回车，如果只使用回车，不添加或者没加够空格看上去两行的文字会变为一行。markdown区分段落的关键是：这两行文字之间是否有空行，空行的定义是显示上看起来像是空的，便会被视为空行。比如，若某一行只包含空格和制表符，则该行也会被视为空行。如果这两行文字之间有空行，就代表这两行文字为两个段落，如果这两行文字之间没有空行，仅仅使用另个以上空格加回车进行换行，这两行文字仍旧是属于同一个段落。得到空行的方法：在上一行文本末尾加上两个以上空格然后回车，再加上&lt;br /&gt;即可两个段落之间有一个空行就可以证明其为两个段落，再多的空行也不会在html中渲染（上述添加&lt;br /&gt;制造空行的方式除外，增加几个&lt;br /&gt;就会有几个空行）。标题markdown依据#的数量，支持六级的标题，一个#代表一级标题，用于标题的#数目最多为6个，当数目大于6个时不再以标题的形式显现，如####### 7将直接显示为####### 7，而不是以标题的形式。当然也可以选择闭合标题的#，在标题之后加上若干数目的#，标题的级别是依据标题之前的#数目决定，和之后的#数目无关。如# 1 ##########还是代表的1级标题。区块引用 Blockquotesmarkdown使用&gt;进行引用段落内多行一同进行区块引用可以在每一行之前都加上&gt;，也可以进行偷懒，在整个段落的第一行加上&gt;引用一整行引用可以进行嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;这是一句引用这也是一个引用当然，这个还是一个引用使用blockquotes标签进行引用，可以修改文字颜色以及左边框颜色。1&lt;blockquote style=\"color:red;border-left: 3px solid #F44336;\"&gt;使用blockquotes标签进行引用&lt;/blockquote&gt;效果如下：使用blockquotes标签进行引用引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等1234567&gt; #### 这是一个标题&gt; &gt; 1. 这是第一行列表项&gt; 2. 这是第二行列表项&gt; &gt; &lt;blockquote style=\"color:red;border-left: 3px solid #F44336;\"&gt;使用blockquotes标签进行引用&lt;/blockquote&gt;&gt; **引用**结束列表markdown支持有序列表和无序列表。无序列表无序列表使用星号、加号或是减号作为列表标记。123* Red* Green* Blue等同于：123+ Red+ Green+ Blue也等同于：123- Red- Green- Blue有序列表有序列表则使用数字接着一个英文句点作为列表标记。值得注意的是有序列表中英文句号前面的数字并不重要，也就是说可以是完全相同或者不连续的数字，这些都不会影响最终解析得到的html信息，得到的结果都是相同的。1231. Bird2. McHale3. Parish等同于：1231. Bird1. McHale1. Parish多级列表多级列表的产生：先得到一级列表，然后使用tab键将后续的列表依次缩进即可得到多级列表。123* this is a test * this is a test * this is a test最终效果：this is a testthis is a testthis is a test包含段落的列表列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符。段落的每一行都可以进行缩进：1234567891. This is a list item with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit.2. Suspendisse id sem consectetuer libero luctus adipiscing.效果如下：This is a list item with two paragraphs. Lorem ipsum dolorsit amet, consectetuer adipiscing elit. Aliquam hendreritmi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreetvitae, risus. Donec sit amet nisl. Aliquam semper ipsumsit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.当然也支持只对段落首行进行缩进，和上面的段落每行都缩进结果是一样的：1234567* This is a list item with two paragraphs. This is the second paragraph in the list item. You'reonly required to indent the first line. Lorem ipsum dolorsit amet, consectetuer adipiscing elit.* Another item in the same list.包含引用的列表如果要在列表项目内放进引用，那 &gt; 就需要缩进：1234* A list item with a blockquote: &gt; This is a blockquote &gt; inside a list item.效果如下：A list item with a blockquote:This is a blockquoteinside a list item.包含代码块的列表如果要放代码块的话，该代码块就需要缩进两次，也就是 8 个空格或是 2 个制表符：123* 一列表项包含一个列表区块： &lt;代码写在这&gt;如果在行首出现数字-句点-空白，可能会误认为是有序列表，要避免这样的状况，你可以在句点前面加上反斜杠，如1986. What a great season.标记后面最少有一个空格或制表符必须和前后文本存在空行，不然列表可能不能正确解析以及后面的文本可能出现偏移。表格使用markdown原生的方式插入表格1234| 一个普通标题 | 一个普通标题 | 一个普通标题 || ------ | ------ | ------ || *短文本* | 中等文本 | 稍微长一点的文本 || 稍微长一点的文本 | 短文本 | 中等文本 |效果如下：一个普通标题一个普通标题一个普通标题短文本中等文本稍微长一点的文本稍微长一点的文本短文本中等文本表格的语句上一行必须为空行，不然表格不生效;内容和|之间的多余空格会被忽略，每行第一个|和最后一个|可以省略;-的数量至少有一个;|、-、:之间的多余空格会被忽略，不影响布局;表格内容中可以套用其他用法，如加粗、斜体等；直接在markdown原生表格之前添加html样式（style）也可以对表格样式进行修改。设置表格宽度自适应解决了按照第一列表头宽度进行自适应的问题：12345&lt;style&gt;table th:first-of-type &#123; width: 100px;&#125;&lt;/style&gt;为每一列单独设置宽度：12345678&lt;table&gt; &lt;tr&gt; &lt;th width=10%&gt;第一列&lt;/th&gt; &lt;th width=35%&gt;第二列&lt;/th&gt; &lt;th width=45%&gt;第三列&lt;/th&gt; &lt;th width=10%&gt;第四列&lt;/th&gt; &lt;/tr&gt;&lt;/table&gt;第一列占整个表格宽度的10%、第二列占35%、第三列占45%、第四列占10%。th:first-of-type 的意思是每个 &lt;th&gt; 为其父级的第一个元素，就是指第一列的表头，同理第二、三个使用 th:nth-of-type(2)、th:nth-of-type(3)修改表头的宽度表头对应的列的宽度也就得到了修改这里有一篇关于markdown表格样式优化的文章，包括鼠标悬停变色、表格滚动条、隔行变色、表头不换行和首列不换行等优化excel也能导出html，先在excel中创建表格，然后保存为html，最后复制其中的表格，参考文章表格对齐问题-:表示内容和标题栏居右对齐；:-表示内容和标题栏居左对齐；:-:表示内容和标题栏居中对齐；1234| 一个普通标题 | 一个普通标题 | 一个普通标题 || :------ | :------: | ------: || *短文本* | 中等文本 | 稍微长一点的文本 || 稍微长一点的文本 | 短文本 | 中等文本 |效果如下：一个普通标题一个普通标题一个普通标题短文本中等文本稍微长一点的文本稍微长一点的文本短文本中等文本使用html插入表格上述markdown原生的方法只能创建一些简单的表格，如果想创建复杂的表格，如合并单元格、调整表格颜色等就需要直接使用html进行创建表格。实现合并单元格：1234567891011121314151617181920&lt;table&gt; &lt;tr&gt; &lt;th&gt;项目1&lt;/th&gt; &lt;th&gt;项目2&lt;/th&gt; &lt;th&gt;项目3&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;a1&lt;/td&gt; &lt;td colspan=\"2\"&gt;a2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td rowspan=\"2\"&gt;b1&lt;/td&gt; &lt;td&gt;b2&lt;/td&gt; &lt;td&gt;b3&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;c2&lt;/td&gt; &lt;td&gt;c3&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;最终效果：项目1项目2项目3a1a2b1b2b3c2c3table标签：定义 HTML 表格tr 元素定义表格行th 元素定义表头td 元素定义表格单元td标签下的colspan（跨列-合并一行的多列）及rowspan（跨行-合并一列的多行）属性进行单元格的合并。使用html插入表格需要注意空行markdown在处理上述的表格时会产生大量的空行，除非将整个表格写成一行，不然空行的书目和整个html代码占的行数相同，解决方法是加上，将整个table套起来。12345678910111213141516171819202122&lt;escape&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt;项目1&lt;/th&gt; &lt;th&gt;项目2&lt;/th&gt; &lt;th&gt;项目3&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;a1&lt;/td&gt; &lt;td colspan=\"2\"&gt;a2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td rowspan=\"2\"&gt;b1&lt;/td&gt; &lt;td&gt;b2&lt;/td&gt; &lt;td&gt;b3&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;c2&lt;/td&gt; &lt;td&gt;c3&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/escape&gt;最终效果：项目1项目2项目3a1a2b1b2b3c2c3偷懒方法之直接复制html代码从上面html代码可以看出来写着比较麻烦，为了解决这个问题，这里有一个专门生成Latex、html、markdown、text、mediawiki支持的表格源码的网站，只需要选取相应的内容即可，还可以调整表格颜色，生成相应的css样式。生成表格源码的网站代码块代码块有两种写法：使用反引号加代码语言种类，代码写完后面也跟三个相同的符号（这种方法最为常用）；第二种写法就是简单地缩进 4 个空格或是 1 个制表符就可以。123这是一个普通段落： 这是一个代码区块。需要和普通段落之间存在空行最后的三个反引号之后不能存在空格，不然会出错分割线你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：1234567891011* * *********- - ----------------------------------------_____最终效果：使用带空格的星号、减号、底线建立空格线，空格线会粗一些。行内元素链接markdown支持两种形式的链接语法：行内式和参考式两种形式，一般行内式使用较为简单和普遍，所以这里就采用行内式的方式。链接的使用形式：1[an example](http://example.com/ \"Title\")最终效果：an example方括号内的文字（an example）表示链接作用的文字圆括号内部第一个是链接地址第二个是title：鼠标移到链接文字上显示的内容如果你是要链接到同样主机的资源，你可以使用相对路径：1See my [About](/about/) page for details.关于参考式链接:参考式的链接其实重点不在于它比较好写，而是它比较好读使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断具体关于参考是的讲解可以参考这篇文章。123456I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3]. [1]: http://google.com/ \"Google\" [2]: http://search.yahoo.com/ \"Yahoo Search\" [3]: http://search.msn.com/ \"MSN Search\"最终效果：I get 10 times more traffic from Google than fromYahoo or MSN.强调斜体markdown使用星号*和底线_作为标记强调字词的符号，被*或 _ 包围的字词会被转成用 &lt;em&gt;标签包围，显示出斜体的效果。1这是关于*斜体*的测试最终效果：这是关于斜体的测试加粗markdown使用两个星号*和底线_作为标记强调字词的符号，被两个*或 _ 包围的字词会被转成用 &lt;strong&gt;（加粗显示）包围，显示出加粗的效果。1这是关于**加粗**的测试最终效果：这是关于加粗的测试斜体加粗使用以上的斜体和加粗叠加可以实现斜体和加粗的效果：1这是关于***斜体加粗***的测试最终效果：这是关于斜体的测试删除线要加删除线的文字左右分别用两个~~号包起来，这个也可以叠加斜体以及加粗标记。1这是关于~~删除线~~的测试最终效果：这是关于删除线的测试星号*和底线_与被包围的文字之间不能有空格，不然星号*和底线_就会被当成普通的字符显示如果想加入普通的星号*和底线_，你可以用反斜线，如行内代码行内插入代码，可以直接使用反引号（`）将代码包围起来即可。如&lt;div&gt; &lt;/div&gt;就是写成：1`&lt;div&gt; &lt;/div&gt;`行内代码中加入反引号：可以用多个反引号来开启和结束代码区段，同时起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：如 A backtick-delimited string in a code span: `foo`、三个反引号就是写成：1234`` `foo` ``# 三个反引号在hexo博客中显示可能会出问题`` ``` ``插入图片使用markdown语法插入图片：使用markdown插入图片与插入链接类似，也有两种方式：行内式和参考式，这里讲解的主要为行内式。关于参考式的用法可以参考链接参考式的用法。12345![图片描述，相当于alt](http://pn9abh3rj.bkt.clouddn.com/test.png \"Optional title，相当于title\")&lt;!-- 居中操作可以使用center标签将上述包裹 --&gt;&lt;center&gt;![图片描述，相当于alt](http://pn9abh3rj.bkt.clouddn.com/test.png \"Optional title，相当于title\")&lt;/center&gt;最终效果：Optional title 是用来在鼠标移到图片上时显示的title使用markdown插入图片的缺点：一般的宽和高等属性不好修改，各个编辑器支持的写法可能有区别html代码插入图片针对使用markdown插入图片的缺点，使用html语句可以很好的解决123456&lt;!-- 使用img标签--&gt;&lt;img src=\"http://pn9abh3rj.bkt.clouddn.com/test.png\" width = \"300\" height = \"200\" alt=\"图片名称\" align=center /&gt;&lt;!-- 使用div标签包裹 --&gt;&lt;div align=\"center\"&gt;&lt;img src=\"http://pn9abh3rj.bkt.clouddn.com/test.png\" title=\"使用html插入图片\" alt=\"图片名称\" /&gt;&lt;/div&gt;最终效果：不推荐使用这个img标签来进行对齐操作，容易和文本混在一起，居中的时候还好；推荐使用div标签包裹img标签。常见问题字符转义markdown支持以下这些符号前面加上反斜杠来帮助插入普通的符号：123456789101112\\ 反斜线` 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号常见错误原因集锦：html块级元素上下没有空格，块级元素是指 &lt;div&gt;、&lt;table&gt;、&lt;pre&gt;、&lt;p&gt; 等标签列表与前后内容之间没有空格列表内容和标记之间没有空格换行操作只回车没有在上一行文本末尾增加两个以上空格停止引用需要和下一行文本空行（另起一段），不然也会被引用进去代码最后的` 之后不能存在空格，不然会将后面的内容也写入代码内强调，不管是加粗还是斜体，标记*或`不能与文本之间存在距离**，不然会失效，标记会显示成标记本身，即*或**`表格的语句上一行必须为空行，不然表格不生效参考链接markdown融合单元单元格问题Latex|html|markdown|text|mediawiki制作表格并得到相应源代码的利器Markdown 语法说明 (简体中文版)Markdown: Basics （快速入门）Markdown 基本语法Markdown-Chinese-Demo","categories":[{"name":"其他内容学习","slug":"其他内容学习","permalink":"http://showteeth.tech/categories/其他内容学习/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://showteeth.tech/tags/markdown/"}]},{"title":"sed-文本处理工具","slug":"sed-文本处理工具","date":"2019-02-24T04:08:41.000Z","updated":"2019-02-26T03:53:32.209Z","comments":true,"path":"posts/1752.html","link":"","permalink":"http://showteeth.tech/posts/1752.html","excerpt":"sed处理文本，包括sed命令的基本格式、参数和命令说明、文本的替换、打印、删除、增加、插入以及其他常用的技巧（分组、传入参数、命令连用以及对文件进行读取和写入等）。","text":"sed处理文本，包括sed命令的基本格式、参数和命令说明、文本的替换、打印、删除、增加、插入以及其他常用的技巧（分组、传入参数、命令连用以及对文件进行读取和写入等）。sed简介sed是一种流编辑器，它是文本处理中非常中的工具，能够完美的配合正则表达式使用，功能不同凡响。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕，接着处理下一行，这样不断重复，直到文件末尾（和awk都是对文件和输入的每一行进行操作）。文件内容并没有改变，除非你使用重定向存储输出。sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。sed 用法sed 基础sed 命令格式12345Usage: sed [OPTION]... &#123;script-only-if-no-other-script&#125; [input-file]...sed [options] 'command' file(s)sed [options] -f scriptfile file(s)sed options说明参数完整参数说明-e script–expression=script以选项中的指定的script来处理输入的文本文件，直接在命令行模式上进行sed动作编辑，此为默认选项-f script–files=script以选项中的指定的script文件来处理输入的文本文件-i–in-place直接在原位修改原文件-n–quiet –silent仅显示script处理后的结果-V–version显示版本信息-h–help显示帮助sed command说明命令说明a在当前行下面插入文本。i在当前行上面插入文本。c把选定的行改为新的文本。d删除，删除选择的行D删除模板块的第一行s替换指定字符h拷贝模板块的内容到内存中的缓冲区H追加模板块的内容到内存中的缓冲区g获得内存缓冲区的内容，并替代当前模板块中文本G获得内存缓冲区的内容，并追加到当前模板块文本的后面l列表不能打印字符的清单n读取下一个输入行，用下一个命令处理新的行而不是第一个命令N追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码p打印模板块的行P打印模板块的第一行q退出sedb label分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾r file从file中读行t labelif分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾T label错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾w file写并追加模板块到file末尾W file写并追加模板块的第一行到file末尾!表示后面的命令对所有没有被选定的行发生作用=打印当前行号#把注释扩展到第一个换行符以前sed 正则匹配元字符集命令说明^匹配行开始，如：/^sed/匹配所有以sed开头的行。$匹配行结束，如：/sed$/匹配所有以sed结尾的行。.匹配一个非换行符的任意字符，如：/s.d/匹配s后接一个任意字符，最后是d。*匹配0个或多个字符，如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。[]匹配一个指定范围内的字符，如/[sS]ed/匹配sed和Sed。[^]匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。(..)匹配子串，保存匹配的字符，如s/(love)able/\\1rs，loveable被替换成lovers。&amp;保存搜索字符用来替换其他字符，如s/love/&amp;/，love这成love。&lt;匹配单词的开始，如:/&lt;love/匹配包含以love开头的单词的行。&gt;匹配单词的结束，如/love&gt;/匹配包含以love结尾的单词的行。x{m}重复字符x，m次，如：/0{5}/匹配包含5个0的行。x{m,}重复字符x，至少m次，如：/0{5,}/匹配至少有5个0的行。x{m,n}重复字符x，至少m次，不多于n次，如：/0{5,10}/匹配5~10个0的行。sed 用法实例测试文件cat test.txtmy cat’s name is bettyThis is your dogmy dog’s name is frankThis is your fishmy fish’s name is georgeThis is your goatmy goat’s name is adam替换操作sed 替换标记table th:first-of-type{width:10%}命令说明g表示行内全面替换p表示打印行w表示把行写入一个文件x表示互换模板块中的文本和缓冲区中的文本y表示把一个字符翻译为另外的字符（但是不用于正则表达式）\\1子串匹配标记&amp;已匹配字符串标记sed s 替换指定字符将每一行文本中的This替换为sub1234sed -e 's/is/are/' test.txt# 省略-esed 's/is/are/' test.txt输出结果：my cat’s name are bettyThare is your dogmy dog’s name are frankThare is your fishmy fareh’s name is georgeThare is your goatmy goat’s name are adamoption的默认就是-e，所以-e可以省略s命令：替换指定字符指的是每一行的第一个发生替换，第二个以及后续的不会发生替换只打印那些发生替换的行-n选项和p命令一起使用表示只打印那些发生替换的行-n选项:仅显示script处理后的结果p命令:打印模板块的行选项、命令、命令三者连用就是：打印处理后的模板块的行1sed -n 's/is/are/p' test.txt输出结果：my cat’s name are bettyThare is your dogmy dog’s name are frankThare is your fishmy fareh’s name is georgeThare is your goatmy goat’s name are adam全局替换g命令表示行内全面替换1sed 's/is/are/g' test.txt输出结果:my cat’s name are bettyThare are your dogmy dog’s name are frankThare are your farehmy fareh’s name are georgeThare are your goatmy goat’s name are adam注意与单独的s命令的结果对比命令s、命令g之间的顺序是固定的从第几处开始替换从第二处开始替换：1sed 's/is/are/2' test.txt输出结果:my cat’s name is bettyThis are your dogmy dog’s name is frankThis are your fishmy fish’s name are georgeThis are your goatmy goat’s name is adam数字后面可以接命令g或者命令p等从每行中第N除开始全局替换：g命令之前加上数字N，表示从第N处之后的匹配开始全局替换1sed 's/is/are/2g' test.txt输出结果：my cat’s name is bettyThis are your dogmy dog’s name is frankThis are your farehmy fish’s name are georgeThis are your goatmy goat’s name is adam从第二处（包括）开始，后面的所有匹配上的都被替换掉了以行为单位进行替换命令c：把选定的行改为新的文本将第2-5行的内容取代成为this is sub of line 2-512# c 和文字之间有没有空行都可以sed '2,5c this is sub of line 2-5' test.txt最终结果：my cat’s name is bettythis is sub of line 2-5my fish’s name is georgeThis is your goatmy goat’s name is adam替换为多行的内容，只需要通过\\n进行文本的换行即可：1sed '2,5cthis is sub of line 2-5 \\nthis is a second sub' test.txt最终结果：my cat’s name is bettythis is sub of line 2-5this is a second submy fish’s name is georgeThis is your goatmy goat’s name is adam原位修改文件选项i：在文件的原位修改，不在屏幕输出，如果-i后跟着suffix，则会产生备份文件，形式为原文件名suffix。命令g也可以替换为其他命令。1sed -i_suffix 's/is/are/g' test.txt输出结果：lstest.txttest.txt_suffixcat test.txtmy cat’s name are bettyThare are your dogmy dog’s name are frankThare are your farehmy fareh’s name are georgeThare are your goatmy goat’s name are adam定界符/命令中字符 / 在sed中作为定界符使用，也可以使用任意的定界符.1234# 使用冒号替代echo sksksksksksk | sed 's:sk:ma:4g'# 使用竖线替代echo sksksksksksk | sed 's|sk|ma|4g'输出结果：skskskmamamaskskskmamama定界符出现在样式内部时，需要进行转义或者直接更换定界符这个定界符个人感觉其实是用来作为正则匹配的，和awk用法相似1234# 转义echo '/usr/local/bin' |sed 's/\\/usr/\\/test/g'# 直接更换定界符echo '/usr/local/bin' |sed 's|/usr|/test|g'输出结果：/test/local/bin/test/local/bin已匹配字符串标记&amp;&amp;：已经匹配上的内容暂存在这个变量中，方便对已匹配内容进行处理正则表达式\\w\\+匹配每一个单词，使用[&amp;]替换它，&amp;对应之前所匹配到的单词：1echo this is a test line | sed 's/\\w\\+/[&amp;]/g'最终结果：echo test is a test line |sed &#39;s/\\w\\+/[&amp;]/g&#39;[test] [is] [a] [test] [line]从上面可以看出，这种方法主要是用来针对一次匹配多个字符串，然后对多个字符串进行分开处理，而不是使用相同的处理（如使用同一个字符替换）分组标记\\1 、\\2\\1 、\\2：表示正则匹配的分组1echo this is digit 7 in a number | sed 's/digit \\([0-9]\\)/\\1/'最终结果：echo this is digit 7 in a number |sed &#39;s/digit \\([0-9]\\)/\\1/&#39;this is 7 in a number命令中digit 7，被替换成7。样式匹配到的子串是7，\\(..\\)用于匹配子串，对于匹配到的第一个子串标记为\\1，依此类推匹配到的第二个结果就是\\2,例如：1echo aaa BBB | sed 's/\\([a-z]\\+\\) \\([A-Z]\\+\\)/\\2 \\1/'最终结果：echo aaa BBB | sed &#39;s/\\([a-z]\\+\\) \\([A-Z]\\+\\)/\\2 \\1/&#39;BBB aaa括号需要进行转义传入变量-引用sed作为文本处理工具，可能经常需要传入变量来进行操作，这里提供了关于传入变量的方法，但是需要注意的是，如果表达式内部存在变量字符串，command的单引号就要变成双引号。123test=\"HELLO\"echo \"hello WORLD\" |sed \"s/hello/$test/\"最终结果：echo &quot;hello WORLD&quot; |sed &quot;s/hello/$test/&quot;HELLO WORLD组合多个命令 ;命令组合在Linux中是非常常见的，一般是使用管道符，在sed命令中可以使用;分割命令，这种用法同样和awk使用非常相似。1sed '表达式' | sed '表达式'等价于：1sed '表达式; 表达式'多个命令连用 -e选项-e本就是sed的默认选项，用于说明使用的是command而不是文件命令形式，多个命令连用，注意是有前后顺序的连用，在连用的command之前加上-e即可。1sed -e '1,5d' -e 's/my/MY/' test.txt先删除test.txt文件中的第1、5行，输出删除的内容，然后对这两行进行将my替换为MY。最终结果：This is your goatMY goat’s name is adam这个方式进行命令的连用和上面使用分号;将不同命令连写的方式效果相同使用{}连用命令使用{}将需要连用的命令包围，并使用;将多个命令隔开1sed -n '/This/&#123;s/This/this/;n;p&#125;' test.txt最终结果：my dog’s name is frankmy fish’s name is georgemy goat’s name is adam命令n：当前匹配行的下一行选项n：仅显示script处理后的结果选定行的范围 ,(逗号)选取行的范围来对文本进行处理，可以使用在不同行之间加逗号,的方式打印从第5行开始到第一个包含以this开始的行之间的所有行：1sed -n '5,/^This/p' test.txt最终结果：sed -n ‘5,/^This/p’ test.txtmy fish’s name is georgeThis is your goat行的索引开始于1需要注意的是：是包含尾部的，5,7p是包含第七行的选取行号之后不仅仅可以用来做打印，还可以进行其他操作，具体见本文使用实战打印命令 p12345678910111213141516171819202122# 打印第3行sed -n '3p' test.txt# 打印第3-5行sed -n '3,5p' test.txt# 数字和正则表达式连用# 打印从第1行开始，第一次出现This结束之间的行（起始行固定，终止行第一次正则匹配位置）sed -n '1,/This/p' test.txt# 起始行固定，终止行第一次正则匹配位置sed -n \"/my cat's name is betty/,/This/p\" test.txt# 打印从第一次匹配到This的行到第3行，然后再输出所有匹配到This的行sed -n '/This/,3p' test.txt# 如果含有This的行在第1行之后，则打印所有含有This的行sed -n '/This/,1p' test.txt# 起始行和终止行都不固定，打印全文sed -n '/my/,/This/p' test.txt最终结果：sed -n &#39;3p&#39; test.txtmy dog’s name is franksed -n &#39;3,5p&#39; test.txtmy dog’s name is frankThis is your fishmy fish’s name is georgesed -n &#39;1,/This/p&#39; test.txtmy cat’s name is bettyThis is your dogsed -n &quot;/my cat&#39;s name is betty/,/This/p&quot; test.txtmy cat’s name is bettyThis is your dogsed -n &#39;/This/,3p&#39; test.txtThis is your dogmy dog’s name is frankThis is your fishThis is your goatsed -n &#39;/This/,1p&#39; test.txtThis is your dogThis is your fishThis is your goatsed -n &#39;/my/,/This/p&#39; test.txtmy cat’s name is bettyThis is your dogmy dog’s name is frankThis is your fishmy fish’s name is georgeThis is your goatmy goat’s name is adam使用打印命令p时需要注意，sed默认会打印出所有的行（命令d除外，只会打印保留下来的行），所以想要打印出特定修改过的行需要加上选项n，如果不加，匹配上的行会打印两遍使用正则表达式进行匹配打印时需要特别小心如果数字在前面，是从数字开始到第一次匹配到正则表达式的部分（1就是从1开始，3就是从3开始看后面第一次匹配的）如果数字在后面，正则表达式在前面，那么一定会将全文中包含正则表达式的全部输出，其他部分如果数字大于正则表达式第一次出现的行，则输出正则表达式第一次出现的行到数字之间的其他内容，如果数字小于正则表达式第一次出现的行，那就只会打印包含正则表达式的行。全文匹配正则表达式的输出以及正则表达式第一次出现的行到数字之间的其他内容输出如果前后都为正则表达式，则输出全文内容关于上述正则表达式我的理解：因为数字是完全确定的，开始和结束行都很确定，所以可以很明确输出想要的结果，但是如果是正则表达式的话，不是唯一的匹配结果（段落中有几行都可以匹配上），那么如果正则表达式在前，则不知道从第几行开始当起始行，所以如果数字大于第一个匹配位置所在的行，那么以第一个匹配位置所在的行为起始行到数字规定的终止行之间的行都会输出，同时起始行可能有很多（其他位置也有匹配），所以还会输出其他匹配位置作为开始，这时如果数字小于第二个匹配位置的话，就只会输出匹配正则表达式的行，同时如果数字大于第二个匹配位置，由于第一个匹配位置的输出已经包含第二个位置，所以不会再输出一遍第二个匹配位置到终止行的信息说了很多，总结出依据，使用正则表达式结果要想正确，起始行必须固定（可以使用数字或者使用唯一匹配的正则表达式），这样才会输出起始行到终止行之间的内容，如果终止行是正则表达式，则会输出起始行到第一次匹配到正则表达式的终止行之间的内容。匹配模式取反 ！打印除第一行和第二行之外的其他行：1sed -n '1,2!p' test.txt最终结果：sed -n &#39;1,2!p&#39; test.txtmy dog’s name is frankThis is your fishmy fish’s name is georgeThis is your goatmy goat’s name is adam显示行号 =1sed -n '/my/&#123;=;p&#125;' test.txt最终结果：sed -n &#39;/my/{=;p}&#39; test.txt1my cat’s name is betty3my dog’s name is frank5my fish’s name is george7my goat’s name is adam删除命令 d命令d：删除，删除选择的行删除空白行cat test2.txtmy cat’s name is bettythis is your this dogmy dog’s name is this frankthis is your fishmy fish’s name is this georgethis is your goatmy goat’s name is this adam1sed '/^$/d' test2.txt最终结果：my cat’s name is bettythis is your this dogmy dog’s name is this frankthis is your fishmy fish’s name is this georgethis is your goatmy goat’s name is this adam空白行的表示方法：^$ (开头和结尾之间的内容为空)删除含有固定单词的行&lt;：匹配单词的开始，注意需要转义&gt;：匹配单词的结束，注意需要转义1sed '/\\&lt;This\\&gt;/d' test.txtsed &#39;/\\&lt;This\\&gt;/d&#39; test.txtmy cat’s name is bettymy dog’s name is frankmy fish’s name is georgemy goat’s name is adam正则匹配删除-删除文件中所有以my开头的行1sed '/^my/d' test2.txt最终结果：this is your this dogthis is your fishthis is your goat从某一行开始删除1sed '2,$d' test2.txt最终结果：sed &#39;2,$d&#39; test2.txtmy cat’s name is betty最后一行：$首行不是^，直接使用1删除文件最后一行1sed '$d' test2.txt最终结果：my cat’s name is bettythis is your this dogmy dog’s name is this frankthis is your fishmy fish’s name is this georgethis is your goat最后一行：$可以发现前面删掉空行的操作没有影响原始文件，如果想修改原始文件，可以加上选项i写入文件 w命令在test.txt中所有包含my的行都被写入test2.txt里：1sed -n '/my/w test2.txt' test.txt最终结果：cat test2.txtmy cat’s name is bettymy dog’s name is frankmy fish’s name is georgemy goat’s name is adam从文件读入 r命令file里的内容被读进来，显示在与test.txt匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面：cat test1.txtaaaaaaaa1sed '/my/r test1.txt' test.txt最终结果：my cat’s name is bettyaaaaaaaaaThis is your dogmy dog’s name is frankaaaaaaaaaThis is your fishmy fish’s name is georgeaaaaaaaaaThis is your goatmy goat’s name is adamaaaaaaaaa追加文件 a\\追加与上述读取不同，虽然两者都是讲在匹配的行下增加文本信息，但是读取处理的是两个文件，追加处理的是一个文件和一行或多行文本。a后面的反斜杠可有可无1sed '/^my/a\\this is a test line' test.txt最终效果：my cat’s name is bettythis is a test lineThis is your dogmy dog’s name is frankthis is a test lineThis is your fishmy fish’s name is georgethis is a test lineThis is your goatmy goat’s name is adamthis is a test line同样也可以通过追加操作也增加两行甚至多行内容：1sed '/^my/a\\this is a test line \\nthis is second line' test.txt通过使用\\n进行换行操作来达到增加多行的目的最终结果：my cat’s name is bettythis is a test linethis is second lineThis is your dogmy dog’s name is frankthis is a test linethis is second lineThis is your fishmy fish’s name is georgethis is a test linethis is second lineThis is your goatmy goat’s name is adamthis is a test linethis is second line如果命令a之前什么都不加，表明给在每一行下都增加文本当然，a之前也可以是单纯的数字插入操作 i\\插入操作和上述追加和读取操作都不同，插入是在匹配行的上面进行插入，而追加和读取是在匹配行的下方进行的追加，同时插入和追加操作都是针对单个文件和一行或多行文本。1sed '/^my/i\\this is insert line' test.txtthis is insert linemy cat’s name is bettyThis is your dogthis is insert linemy dog’s name is frankThis is your fishthis is insert linemy fish’s name is georgeThis is your goatthis is insert linemy goat’s name is adam在匹配文本上方插入多行的操作与追加类似，都是使用\\n换行1sed '/^my/i\\this is insert line \\nthis is second insert line' test.txt最终效果：this is insert linethis is second insert linemy cat’s name is bettyThis is your dogthis is insert linethis is second insert linemy dog’s name is frankThis is your fishthis is insert linethis is second insert linemy fish’s name is georgeThis is your goatthis is insert linethis is second insert linemy goat’s name is adam匹配行的下一行 n命令打印匹配字符串的下一行：12345# 下面这个写法会使得以my开头的行被打印两遍，是错误的sed '/my/&#123;n;p&#125;' test.txt# 正确的写法是仅显示script处理后的结果sed -n '/my/&#123;n;p&#125;' test.txt最终结果：sed -n &#39;/my/{n;p}&#39; test.txthhhh is your dogThis is your fishThis is your goat在原始test文件中增加了一行用于防止和普通的替换混淆如果my被匹配，则移动到匹配行的下一行，替换这一行的this为This,并打印该行：1234sed '/my/&#123;n;s/This/this/; &#125;' test.txt# 上述式子不等于sed '/my/n;s/This/this/' test.txt最终输出：my cat’s name is bettyhhhh is your dogThis is your dogmy dog’s name is frankthis is your fishmy fish’s name is georgethis is your goatmy goat’s name is adam不是以my为开头的下一行的This不会被替换为this注意花括号{}，不能丢掉使用grep、awk得到匹配行的下一行123grep -A 1 my test.txtsed -n '/my/&#123;n;p&#125;' test.txtawk '/my/&#123;getline; print&#125;' test.txt字符变换 y命令把1~10行内所有abcde转变为大写，注意，正则表达式元字符不能使用这个命令：1sed '1,10y/abcde/ABCDE/' test.txt最终结果：my CAt’s nAmE is BEttyhhhh is your DogThis is your Dogmy Dog’s nAmE is frAnkThis is your fishmy fish’s nAmE is gEorgEThis is your goAtmy goAt’s nAmE is ADAm注意这个和普通的替换不同，替换是将abcde这个字符串进行替换为ABCDE字符串，而这里是将a、b、c、d、e变为大写；与通过已匹配字符串&amp;也不同，这个更为简单打印奇数行或偶数行方法一：通过下一行（命令n）的方式打印奇数行：1sed -n 'p;n' test.txt最终结果：my cat’s name is bettyThis is your dogThis is your fishThis is your goat打印偶数行：1sed -n 'n;p' test.txt最终结果：hhhh is your dogmy dog’s name is frankmy fish’s name is georgemy goat’s name is adam命令n在前而p在后为打印偶数行命令p在前而n在后为打印奇数行命令n为当前匹配的下一行方法二：简单方法12345# 打印奇数行sed -n '1~2p' test.txt# 打印偶数行sed -n '2~2p' test.txt使用实战在开头添加start12# 主要里面的空格也是有用的sed 's/^/start /' test.txt最终效果：sed &#39;s/^/start /&#39; test.txtstart my cat’s name is bettystart This is your dogstart my dog’s name is frankstart This is your fishstart my fish’s name is georgestart This is your goatstart my goat’s name is adam在结尾增加end12# 主要里面的空格也是有用的sed 's/$/ END/' test.txt最终效果：sed &#39;s/$/ END/&#39; test.txtmy cat’s name is betty ENDThis is your dog ENDmy dog’s name is frank ENDThis is your fish ENDmy fish’s name is george ENDThis is your goat ENDmy goat’s name is adam END在前三行之前增加#号做注释1sed '1,3s/^/# /' test.txt最终结果：sed &#39;1,3s/^/# /&#39; test.txt# my cat’s name is betty# This is your dog# my dog’s name is frankThis is your fishmy fish’s name is georgeThis is your goatmy goat’s name is adam使用技巧及注意事项使用打印命令p时需要注意，sed默认会打印出所有的行（命令d除外，只会打印保留下来的行），所以想要打印出特定修改过的行需要加上选项n区分选项和命令的关系和书写相对位置（如选项和命令都有n，但是作用却不同）使用正则表达式进行匹配打印时需要特别小心如果数字在前面，是从数字开始到第一次匹配到正则表达式的部分（1就是从1开始，3就是从3开始看后面第一次匹配的）如果数字在后面，正则表达式在前面，那么一定会将全文中包含正则表达式的全部输出，其他部分如果数字大于正则表达式第一次出现的行，则输出正则表达式第一次出现的行到数字之间的其他内容，如果数字小于正则表达式第一次出现的行，那就只会打印包含正则表达式的行。全文匹配正则表达式的输出以及正则表达式第一次出现的行到数字之间的其他内容输出如果前后都为正则表达式，则输出全文中所有包含正则表达式的部分。参考链接sed命令sed命令详解，很多关于实战的讲的很好！！！sed命令用法sed_and_awk，github上148星","categories":[{"name":"Linux","slug":"Linux","permalink":"http://showteeth.tech/categories/Linux/"}],"tags":[{"name":"sed","slug":"sed","permalink":"http://showteeth.tech/tags/sed/"}]},{"title":"大致计划","slug":"大致计划","date":"2019-02-23T15:13:17.000Z","updated":"2019-02-24T11:54:11.279Z","comments":true,"path":"posts/18198.html","link":"","permalink":"http://showteeth.tech/posts/18198.html","excerpt":"对于想学习内容的大致实施计划，需要根据实际情况灵活更改。","text":"对于想学习内容的大致实施计划，需要根据实际情况灵活更改。总体思路Linux的内容比较细小，可以使用零散的时间来学习；机器学习的内容需要学习的连贯性，需要大量时间学习和理解；Python学习还好，介于Linux和机器学习内容之间；其他内容的学习不是很急切，但是一些工具性的可以先学习，比如git以及markdown，时间需求不是很大；可以将Linux中比较大的内容和其他内容学习中比较小的内容搭配，比如sed命令和下面的markdown搭配这种；大块的内容比如机器学习和Python可以放在晚上10-1点半之间（每天3个小时）？这个还需要考虑；机器学习和Python学习的内容可以放在github上。Linux学习 一个常用命令的学习 总结一个常用内容 shell编程一个技巧Python学习 一个常用命令的学习 总结一个常用内容 shell编程一个技巧机器学习学习 一个常用命令的学习 总结一个常用内容 shell编程一个技巧其他内容学习 一个常用命令的学习 总结一个常用内容 shell编程一个技巧","categories":[{"name":"规划","slug":"规划","permalink":"http://showteeth.tech/categories/规划/"},{"name":"每日学习","slug":"规划/每日学习","permalink":"http://showteeth.tech/categories/规划/每日学习/"}],"tags":[{"name":"每日学习","slug":"每日学习","permalink":"http://showteeth.tech/tags/每日学习/"}]},{"title":"其他想学习的内容","slug":"其他想学习的内容","date":"2019-02-23T12:17:33.000Z","updated":"2019-02-25T16:29:54.924Z","comments":true,"path":"posts/49862.html","link":"","permalink":"http://showteeth.tech/posts/49862.html","excerpt":"其他想学习的内容汇总，包括Latex排版、git使用、readthedocs+mkdocs静态网站、markdown学习、docker学习以及snakemake等内容，如果遇到后续会持续添加。","text":"其他想学习的内容汇总，包括Latex排版、git使用、readthedocs+mkdocs静态网站、markdown学习、docker学习以及snakemake等内容，如果遇到后续会持续添加。markdown学习&emsp;&emsp;在后面的学习中，我将尽可能使用markdown进行文档的编写，这样看着更加美观，所以有必要对齐进行完善的学习，同时在真正的语法与在博客中遇到的可能有所差别，所以这里的将主要关注一些基础的语法，其他在博客写作中常用的可以参考之前写的博客。markdown基础语法学习next-markdown技巧和模板git使用&emsp;&emsp;接触到github之后，git操作是经常需要使用的，所以对其进行学习非常有必要。Git教程-廖雪峰Pro GitLatex排版&emsp;&emsp;第一次真正见识到latex是看到清本大佬使用latex对课程论文进行排版以及数学公式编写，觉得非常牛逼，同时也反思了自己的本科经历，果然大佬就是大佬！啥也不说了学习吧。一份其实很短的 LaTeX 入门文档Markdown中输入数学公式及LaTex常用数学符号整理刘海洋-latex入门readthedocs+mkdocs静态网站&emsp;&emsp;在binbin师兄的带领下，也算是接触了一下readthedocs+mkdocs静态网站（写技术文档），感觉也挺好看的，可以用来展示自己使用markdown编写的一些文本，主要是指项目。mkdocs的官方网站好用的参考很好的教程mkdocs可用的拓展docker&emsp;&emsp;docker是开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。Docker——从入门到实践docker学习笔记snakemake&emsp;&emsp;snakemake是用来编写任务流程的工具。snakemake使用笔记snakemake-tutorial使用Snakemake搭建分析流程实例-binbin师兄写的","categories":[{"name":"规划","slug":"规划","permalink":"http://showteeth.tech/categories/规划/"},{"name":"其他内容学习","slug":"规划/其他内容学习","permalink":"http://showteeth.tech/categories/规划/其他内容学习/"}],"tags":[{"name":"学习计划","slug":"学习计划","permalink":"http://showteeth.tech/tags/学习计划/"},{"name":"其他内容学习","slug":"其他内容学习","permalink":"http://showteeth.tech/tags/其他内容学习/"}]},{"title":"机器学习学习计划","slug":"机器学习学习计划","date":"2019-02-23T03:36:14.000Z","updated":"2019-02-23T07:52:42.781Z","comments":true,"path":"posts/130.html","link":"","permalink":"http://showteeth.tech/posts/130.html","excerpt":"需要学习的机器学习内容汇总，包括自己总结的学习路线、书本和视频内容学习、竞赛等实战项目、很好的博主和网站以及收藏的shell相关书本等相关内容。","text":"需要学习的机器学习内容汇总，包括自己总结的学习路线、书本和视频内容学习、竞赛等实战项目、很好的博主和网站以及收藏的shell相关书本等相关内容。自己规划的学习路线第一阶段-经典课程学习&emsp;&emsp;我觉得可以先通过一些经典课程，比如吴恩达老师或者林轩田老师在Coursera上的课程视频来对机器学习有一个初步了解，并通过课程配套的编程习题来动手实现一下算法，来提升一些感性的认识。第二阶段-经典教材学习&emsp;&emsp;之后再选择一本经典教材，学习其中理论和算法的基础部分。同时也可以尝试把讲到的算法实现一下，这样将书本和实践结合起来的办法，我觉得比较有效，这个过程的学习可以与第一个阶段同时进行，学习经典的书本的时候参考视频可以加深理解，目前很多书本都有相应的视频学习课程。第三阶段-实战&emsp;&emsp;通过这两个阶段的学习，已经掌握了机器学习的基本原理，并且对常用的经典算法，如boosting, svm, logistic regression乃至neural network比较熟悉以后，就可以考虑做一个大的project, 例如尝试参加一个在线的数据科学竞赛，通过这样一个过程，可能就能真正体会到入门的感觉。第三阶段-提升&emsp;&emsp;借助一些比较经典的、但是也需要一些基础的书来进行提升阶段的学习。如果只是想在毕业之后能找到算法工程师的工作，《统计学习方法》、CS229、CS231N、《deep learning》这些书再加上leetcode、数据挖掘比赛、以及相关项目经验就已经足够课程与教材学习&emsp;&emsp;现在机器学习部分主要是想根据书本进行学习，同时借助相应的视频课程，也就是上面自己总结学习路线的第一个和第二个阶段。 《统计学习方法》（李航） 《机器学习》（周志华） ISL(An Introduction to Statistical Learning: with Applications in R) 机器学习Machine-Learning 《机器学习实战》 《机器学习实战：基于Scikit-Learn和TensorFlow》 机器学习基石、技法视频 吴恩达机器学习视频 ISL配套视频 上交张志华统计机器学习视频《统计学习方法》（李航）这本书比较精炼，基本上是把模型推导一遍然后给出一个很简单的例子帮助你理解（完整的解释与论证）。《统计学习方法》（李航）《机器学习》（周志华）比较简单，有些只是提及，并没有很好地解释和证明，更系统和全面一点；是偏教材的书籍，需要有人引导才能更好地使用。《机器学习》（周志华）ISL(An Introduction to Statistical Learning: with Applications in R)ESL的基础书，统计学习的入门书，通俗易懂；监督学习占了大部分篇幅，我觉得这本书最好的部分就是模型的讨论都围绕variance和bias的trade-off展开，还有就是对模型的整体性能。ISL(An Introduction to Statistical Learning: with Applications in R)机器学习Machine-Learninggithub上别人总结的学习路径，可以看看。机器学习Machine-Learning《机器学习实战》用最基本的pyton语法，从底层上让你构建代码；理论讲的不是很清楚不是很透彻《机器学习实战》《机器学习实战：基于Scikit-Learn和TensorFlow》评价较好《机器学习实战：基于Scikit-Learn和TensorFlow》机器学习基石、技法视频机器学习基石视频机器学习基技法视频吴恩达机器学习视频吴恩达机器学习视频ISL配套视频ISL配套视频上交张志华统计机器学习视频上交张志华统计机器学习视频机器学习实战项目好的项目&emsp;&emsp;搜集的好的机器学习项目 AI项目实战AI项目实战AI项目实战竞赛Kaggle“泰迪杯”数据挖掘挑战赛中国高校计算机大赛——大数据挑战赛Kesci 科赛AI Challenger 全球AI挑战赛datafountain-DF竞赛平台sas中国高校数据分析大赛统计建模大赛研究生数学建模竞赛深圳杯数学建模挑战赛电工杯数学建模竞赛名称时间范围所需时间“泰迪杯”数据挖掘挑战赛3.31 4.11 4.15差不多一个半月中国高校计算机大赛-大数据挑战赛5.26 7.25 8.20差不多三个月研究生数学建模竞赛9.10 9.13 9.15 9.19 9.20 9.21三天深圳杯数学建模挑战赛4.15 6.10 8月下旬不详电工杯数学建模5.23 5.25 5.28 7.15不详统计建模大赛5-6月不详sas中国高校数据分析大赛10.10不详竞赛对应的教程学习Kaggle Competition Past SolutionsKaggle入门，看这一篇就够了Kaggle比赛：Text Normalization for English银牌全程记录Kaggle 首战拿银总结House Prices: 比赛经验分享Kaggle泰坦尼克如何在 Kaggle 首战中进入前 10%大数据竞赛平台——Kaggle 入门篇Python机器学习kaggle案例DATA TRAIN | 数据分析学习计划可视化与可视分析优秀的博主和网站机器学习、深度学习各种资料，很完善Jupyter notebooks Machine Learning and Deep Learning in python using Scikit-Learn and TensorFlow.各种资源的中文翻译人大机器学习笔记机器学习算法Python3机器学习机器学习、深度学习鹅厂大佬Scikit-learn使用总结收藏的机器学习相关书本和笔记李沐 动手学深度学习斯坦福机器学习笔记Sklearn 与 TensorFlow 机器学习实用指南Sklearn 与 TensorFlow 机器学习实用指南scikit-learn (sklearn) 官方文档中文版国科大机器学习课程&amp;机器学习笔记AiLearning: 机器学习 - MachineLearning - ML、深度学习 - DeepLearning - DL、自然语言处理 NLP机器学习算法機器學習：使用PythonNeural Networks and Deep Learning中文神经网络与深度学习另一个版本机器学习训练秘籍Algorithm_Interview_Notes-ChineseNotebooks for my “Deep Learning with TensorFlow 2 and Keras” course","categories":[{"name":"规划","slug":"规划","permalink":"http://showteeth.tech/categories/规划/"},{"name":"机器学习","slug":"规划/机器学习","permalink":"http://showteeth.tech/categories/规划/机器学习/"}],"tags":[{"name":"学习计划","slug":"学习计划","permalink":"http://showteeth.tech/tags/学习计划/"},{"name":"机器学习","slug":"机器学习","permalink":"http://showteeth.tech/tags/机器学习/"}]},{"title":"Python学习计划","slug":"Python学习计划","date":"2019-02-23T03:35:14.000Z","updated":"2019-02-24T02:56:53.931Z","comments":true,"path":"posts/22463.html","link":"","permalink":"http://showteeth.tech/posts/22463.html","excerpt":"需要学习的Python内容汇总，包括面向对象、常用模块使用、其他技巧整理、常用工具整理、实战项目、优秀的博主和网站以及收藏的Python相关书本等相关内容。","text":"需要学习的Python内容汇总，包括面向对象、常用模块使用、其他技巧整理、常用工具整理、实战项目、优秀的博主和网站以及收藏的Python相关书本等相关内容。面向对象&emsp;&emsp;这个是我一直想要学习的内容，但是由于诸多原因还没能学习，所以把这个放在了Python学习的第一位。面向对象面向对象-网页收藏夹常用模块使用&emsp;&emsp;这里是一些比较常用的模块的学习。 numpy-数组与矩阵运算 matplotlib-绘图 Seaborn-绘图 SciPy-科学计算 argparse-命令行选项与参数解析 Bokeh-交互式数据可视化 HDF5-大数据存储与读取 tqdm-显示运行进度条 logging-日志 glob-文件操作相关模块 os-处理文件和目录 sys-程序与python解释器的交互 rpy2-调用R语言 collections-内建的一个集合模块numpy-数组与矩阵运算numpy-数组与矩阵运算numpy-数组与矩阵运算matplotlib-绘图matplotlib-绘图Seaborn-绘图Seaborn-绘图SciPy-科学计算SciPy-科学计算argparse-命令行选项与参数解析argparse-命令行选项与参数解析Bokeh-交互式数据可视化Bokeh-交互式数据可视化HDF5-大数据存储与读取HDF5-大数据存储与读取tqdm-显示运行进度条tqdm-显示运行进度条logging-日志logging-日志glob-文件操作相关模块glob-文件操作相关模块os-处理文件和目录os-处理文件和目录sys-程序与python解释器的交互sys-程序与python解释器的交互rpy2-调用R语言rpy2-调用R语言rpy2-调用R语言collections-内建的一个集合模块collections-内建的一个集合模块其他技巧整理&emsp;&emsp;这部分内容虽然不是具体的模块，但是对他们的理解和应用对于Python的学习非常有益处。 main函数的理解 接入pipelinemain函数的理解接入pipeline接入pipeline接入pipeline常用工具整理jupyter notebookjupyter server搭建jupyter server搭建关于Jupyter Notebook的28个技巧印象笔记实战项目&emsp;&emsp;这部分是收集的一些实战项目，可以在学习的过程中穿插学习，巩固对知识的掌握 以撸代码的形式学习Python Python项目-w3cschool 电影分析-爬虫+可视化 12个Python实战项目教程 Python练手项目推荐 Python100例测试以撸代码的形式学习Python以撸代码的形式学习PythonPython项目-w3cschool以撸代码的形式学习Python电影分析-爬虫+可视化电影分析-爬虫+可视化12个Python实战项目教程12个Python实战项目教程Python练手项目推荐Python练手项目推荐Python100例测试Python100例测试优秀的博主和网站廖雪峰Python数据之道收藏的Python相关书本Python之numpy教程Matplotlib用户指南类与对象编写高质量代码改善 Python 程序的 91 个建议Python 核心编程 第二版Python进阶Python数据结构与算法Python 数据科学入门教程Sklearn 与 TensorFlow 机器学习实用指南scikit-learn (sklearn) 官方文档中文版Scikit-learn 秘籍python数据分析与挖掘实战的代码笔记Python3网络爬虫开发实战Python 文本数据分析初学指南","categories":[{"name":"规划","slug":"规划","permalink":"http://showteeth.tech/categories/规划/"},{"name":"Python学习","slug":"规划/Python学习","permalink":"http://showteeth.tech/categories/规划/Python学习/"}],"tags":[{"name":"学习计划","slug":"学习计划","permalink":"http://showteeth.tech/tags/学习计划/"},{"name":"Python","slug":"Python","permalink":"http://showteeth.tech/tags/Python/"}]},{"title":"Linux学习计划","slug":"Linux学习计划","date":"2019-02-22T13:06:39.000Z","updated":"2019-02-25T16:29:34.360Z","comments":true,"path":"posts/34794.html","link":"","permalink":"http://showteeth.tech/posts/34794.html","excerpt":"需要学习的Linux内容汇总，包括基本命令、其他一些常用的总结、shell编程、小技巧、其他博主的命令总结、很好的博主和网站以及收藏的shell相关书本等相关内容。","text":"需要学习的Linux内容汇总，包括基本命令、其他一些常用的总结、shell编程、小技巧、其他博主的命令总结、很好的博主和网站以及收藏的shell相关书本等相关内容。常用基本命令&emsp;&emsp;这些命令是在工作和学习中常用的一些命令，有些我之前系统的学习过，但是学习的笔记都存放在我的印象笔记上，等有时间了会把这些笔记整理到这个博客上（回顾之前学习的内容），感觉博客上面记笔记会比较清爽，便于后期回顾学习，还没有系统学习过的命令后期都将直接呈现在这个博客上。下面列出了需要学习的常用命令，接下来将依据这个进行学习，同时在学习中遇到新的常用命令也会进行补充和完善，同时这一页主要是一个综括页，具体的每一个命令的学习笔记都将单独的页面展示，但是可以通过这个页面直接链接过去。 awk系列-强大的文本处理语言 find-搜索文件名 grep-搜索文件内容 sed-文本处理工具 sort-排序 uniq-去重 join-连接文本 cut-按列切分文件字段工具 comm-文件比较，文本文件的交集、差集与求差 cat-显示、读取或拼接文件内容 wget-下载网站文件或网页 curl-命令行下的高级网络工具 nohup-不挂断地运行命令 打印输出 数据归档和解压缩 paste-按列合并文件 split-按大小分割文件 csplit-根据文本内容切割文件 scp-跨平台复制命令 shuf-随机打乱文件 seq-产生固定步长整数 ps-报告当前系统的进程状态 rsnyc-远程数据同步 xargs-将输入转换成命令行参数 read-从键盘或文件中获取标准输入 time-计算命令执行花费的时间 获取时间日期格式和延时awk系列-强大的文本处理语言该系列包括13个小节，已经学习完毕 ，笔记都保存在印象笔记上。find-搜索文件名grep-搜索文件内容sed-文本处理工具sed-文本处理工具sort-排序sort-排序uniq-去重uniq-去重join-连接文本join-连接文本cut-按列切分文件字段工具cut-按列切分文件字段工具comm-文件比较，文本文件的交集、差集与求差comm-文件比较，文本文件的交集、差集与求差cat-显示、读取或拼接文件内容cat-显示、读取或拼接文件内容wget-下载网站文件或网页wget-下载网站文件或网页curl-命令行下的高级网络工具wget-下载网站文件或网页nohup-不挂断地运行命令nohup-不挂断地运行命令打印输出打印输出数据归档和解压缩数据归档和解压缩paste-按列合并文件paste-按列合并文件split-按大小分割文件split-按大小分割文件csplit-根据文本内容切割文件csplit-根据文本内容切割文件scp-跨平台复制命令scp-跨平台复制命令shuf-随机打乱文件shuf-随机打乱文件seq-产生固定步长整数seq-产生固定步长整数ps-报告当前系统的进程状态ps-报告当前系统的进程状态rsnyc-远程数据同步rsnyc-远程数据同步xargs-将输入转换成命令行参数xargs-将输入转换成命令行参数read-从键盘或文件中获取标准输入read-从键盘或文件中获取标准输入time-计算命令执行花费的时间time-计算命令执行花费的时间获取时间日期格式和延时获取时间日期格式和延时其他一些常用内容总结&emsp;&emsp;这些虽然不是具体的linux命令，但是在具体学习中页非常实用，所以有必要进行积累和整理。 Linux中特殊符号用法 浮点计算并保留小数（对列或者对数） 字符串截取方法 单行命令嵌套 输入输出重定向Linux中特殊符号用法Linux中特殊符号用法浮点计算并保留小数（对列或者对数）浮点计算并保留小数字符串截取方法字符串截取方法单行命令嵌套单行命令嵌套输入输出重定向输入输出重定向shell编程&emsp;&emsp;这一块平常接触没有那些常用命令那么频繁，但是也很多很实用（不用为了一个简单的目的去编写一个Python脚本），所以这里需要系统的学习一下。 传递参数 循环结构 if判断 数组 数学运算循环结构循环结构if判断if判断传递参数传递参数数组数组数学运算数学运算小技巧&emsp;&emsp;这里总结一下使用常用命令以及进行shell编程的一些常用小技巧。awk使用技巧awk使用技巧shell技巧-非shell脚本shell技巧-非shell脚本shell脚本技巧shell脚本技巧其他博主的命令总结&emsp;&emsp;其他优秀的博主整理的常用命令，可作为自查以及必要时查阅。97条 Linux 常用命令总结文件与目录基础自查很好的博主和网站大佬博客，讲解非常细致常用命令和shell总结、很完善查询各种linux命令，基本都有且分类清楚查询各种linux命令，基本都有其他博主的每日一个linux命令讲解以及实际问题代码收藏的shell相关书本鸟哥的Linux私房菜：基础学习篇高级Bash脚本编程指南Shell 编程范例shell脚本linux command line中文版","categories":[{"name":"规划","slug":"规划","permalink":"http://showteeth.tech/categories/规划/"},{"name":"Linux学习","slug":"规划/Linux学习","permalink":"http://showteeth.tech/categories/规划/Linux学习/"}],"tags":[{"name":"学习计划","slug":"学习计划","permalink":"http://showteeth.tech/tags/学习计划/"},{"name":"Linux","slug":"Linux","permalink":"http://showteeth.tech/tags/Linux/"}]},{"title":"next-markdown技巧和模板-持续更新","slug":"useful_markdown_templete","date":"2019-02-16T15:38:36.000Z","updated":"2019-02-24T11:46:22.357Z","comments":true,"path":"posts/37746.html","link":"","permalink":"http://showteeth.tech/posts/37746.html","excerpt":"博客中常用markdown的样式和模板","text":"博客中常用markdown的样式和模板markdown技巧分割线和空行1234&lt;hr /&gt;上面是分割线&lt;br /&gt;上面是空行上面是分割线上面是空行markdown引用以及html写法123&lt;blockquote&gt;引用内容&lt;/blockquote&gt;&lt;!-- 如果前后间隙很小，可以像下面这样写 --&gt;&lt;p&gt;&lt;blockquote&gt;引用内容&lt;/blockquote&gt;&lt;/p&gt;效果如下：引用内容引用内容居中和右对齐1234&lt;!-- 居中 --&gt;&lt;center&gt;内容&lt;/center&gt;&lt;!-- 右对齐 --&gt;&lt;div style=\"text-align:right\"&gt;内容&lt;/div&gt;效果如下：内容内容字体大小和颜色123&lt;font color=\"#FF0000\" size=\"8px\"&gt;红色&lt;/font&gt;&lt;font color=\"#FFFF00\" size=\"6px\"&gt;黄色&lt;/font&gt;&lt;font color=\"#00FF00\" size=\"4px\"&gt;绿色&lt;/font&gt;效果如下：红色黄色绿色更多颜色请查看 web安全色、颜色对照表字体高亮显示使用mark标签进行标记，高亮显示文档中的文字12&lt;mark&gt;这是一个标记&lt;/mark&gt;使用mark标签进行标记，&lt;mark&gt;高亮显示&lt;/mark&gt;文档中的文字效果如下：使用mark标签进行标记，高亮显示文档中的文字插入表格1234| 一个普通标题 | 一个普通标题 | 一个普通标题 || ------ | ------ | ------ || *短文本* | 中等文本 | 稍微长一点的文本 || 稍微长一点的文本 | 短文本 | 中等文本 |效果如下：一个普通标题一个普通标题一个普通标题短文本中等文本稍微长一点的文本稍微长一点的文本短文本中等文本表格的语句上一行必须为空行，不然表格不生效;内容和|之间的多余空格会被忽略，每行第一个|和最后一个|可以省略;-的数量至少有一个;|、-、:之间的多余空格会被忽略，不影响布局;表格内容中可以套用其他用法，如加粗、斜体等。表格对齐问题-:表示内容和标题栏居右对齐；:-表示内容和标题栏居左对齐；:-:表示内容和标题栏居中对齐；1234| 一个普通标题 | 一个普通标题 | 一个普通标题 || :------ | :------: | ------: || *短文本* | 中等文本 | 稍微长一点的文本 || 稍微长一点的文本 | 短文本 | 中等文本 |效果如下：一个普通标题一个普通标题一个普通标题短文本中等文本稍微长一点的文本稍微长一点的文本短文本中等文本合并单元格、修改表格样式Todo list1234&lt;ul&gt;&lt;li&gt;&lt;i class=\"fa fa-check-square\"&gt;&lt;/i&gt; 已完成&lt;/li&gt;&lt;li&gt;&lt;i class=\"fa fa-square\"&gt;&lt;/i&gt; 未完成&lt;/li&gt;&lt;/ul&gt;效果如下： 已完成 未完成Note 嵌套 Todo list123456789101112131415161718192021222324&lt;!-- 一共有两种写法，效果看下面 --&gt;&lt;div class=\"note primary\"&gt; &lt;i class=\"fa fa-check-square\"&gt;&lt;/i&gt; 已完成 &lt;i class=\"fa fa-check-square\"&gt;&lt;/i&gt; 已完成 &lt;i class=\"fa fa-check-square\"&gt;&lt;/i&gt; 已完成 &lt;i class=\"fa fa-check-square\"&gt;&lt;/i&gt; 已完成 &lt;i class=\"fa fa-check-square\"&gt;&lt;/i&gt; 已完成 &lt;i class=\"fa fa-square\"&gt;&lt;/i&gt; 未完成 &lt;i class=\"fa fa-square\"&gt;&lt;/i&gt; 未完成 &lt;i class=\"fa fa-square\"&gt;&lt;/i&gt; 未完成&lt;/div&gt;&lt;div class=\"note primary\"&gt; &lt;p&gt; &lt;i class=\"fa fa-check-square\"&gt;&lt;/i&gt; 已完成 &lt;i class=\"fa fa-check-square\"&gt;&lt;/i&gt; 已完成 &lt;i class=\"fa fa-check-square\"&gt;&lt;/i&gt; 已完成 &lt;i class=\"fa fa-check-square\"&gt;&lt;/i&gt; 已完成 &lt;i class=\"fa fa-check-square\"&gt;&lt;/i&gt; 已完成 &lt;i class=\"fa fa-square\"&gt;&lt;/i&gt; 未完成 &lt;i class=\"fa fa-square\"&gt;&lt;/i&gt; 未完成 &lt;i class=\"fa fa-square\"&gt;&lt;/i&gt; 未完成 &lt;/p&gt;&lt;/div&gt;效果如下： 已完成 已完成 已完成 已完成 已完成 未完成 未完成 未完成 已完成 已完成 已完成 已完成 已完成 未完成 未完成 未完成插入代码代码块1&lt;!-- ```[language] [title] [url] [link-text] --&gt;注意前后都，上面演示如果后面加了会出错language表示代码语言title表示出现在代码框左上角的标题url表示超链接地址link-text表示超链接的名称这 4 项应该是根据空格来分隔，而不是[]，故请不要加[]。除非如果你想写后面两个，但不想写前面两个，那么就必须加 [] 了，要这样写：[] [] [url] [link text] 个人只验证出可以加title，url和text没验证成功。效果如下：title1&lt;div&gt;&lt;/div&gt;各种支持语言的名称可以查看这篇文章行内代码1`test`Font Awesome放大图标的方法示例：123456&lt;i class=\"fa fa-download\"&gt;&lt;/i&gt; 普通&lt;i class=\"fa fa-download fa-lg\"&gt;&lt;/i&gt; 变大 33%&lt;i class=\"fa fa-download fa-2x\"&gt;&lt;/i&gt; 两倍大#fa-fw：ensuring proper alignment of the icons&lt;i class=\"fa fa-download fa-fw\"&gt;&lt;/i&gt; 图标和文字之间合适间距效果如下： 普通 变大 33% 两倍大 图标和文字之间合适间距fa-fw：ensuring proper alignment of the iconsnote标签next主题的note标签功能我一发现就爱上了，实在很好看啊~~~~首先该功能可以在next\\_config.yml配置文件中进行配置，默认是打开的，但是可以挑选自己喜欢的模式。12345678910111213# Note tag (bs-callout).note: # Note tag style values: # - simple bs-callout old alert style. Default. # - modern bs-callout new (v2-v3) alert style. # - flat flat callout style with background, like on Mozilla or StackOverflow. # - disabled disable all CSS styles import of note tag. style: flat icons: true border_radius: 3 # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6). # Offset also applied to label tag variables. This option can work with disabled note tag. light_bg_offset: 0我自己选择了其中的flat style，其用法如下：123456789101112131415&lt;div class=\"note default\"&gt;&lt;p&gt;default&lt;/p&gt;&lt;/div&gt;&lt;div class=\"note primary\"&gt;&lt;p&gt;primary&lt;/p&gt;&lt;/div&gt;&lt;div class=\"note success\"&gt;&lt;p&gt;success&lt;/p&gt;&lt;/div&gt;&lt;div class=\"note info\"&gt;&lt;p&gt;info&lt;/p&gt;&lt;/div&gt;&lt;div class=\"note warning\"&gt;&lt;p&gt;warning&lt;/p&gt;&lt;/div&gt;&lt;div class=\"note danger\"&gt;&lt;p&gt;danger&lt;/p&gt;&lt;/div&gt;&lt;div class=\"note danger no-icon\"&gt;&lt;p&gt;danger no-icon&lt;/p&gt;&lt;/div&gt;&lt;div class=\"note danger\"&gt;&lt;p&gt;danger&lt;/p&gt;&lt;p&gt;danger&lt;/p&gt;&lt;p&gt;danger&lt;/p&gt;&lt;/div&gt;&#123;% note danger %&#125;note danger, note danger, note dangernote danger, note danger, note dangernote danger, note danger, note danger&#123;% endnote %&#125;效果如下：defaultprimarysuccessinfowarningdangerdanger no-iconnote danger, note danger, note dangernote danger, note danger, note dangernote danger, note danger, note dangernext\\_config.yml三种样式的具体情况请看网站label标签该标签也是在next\\_config.yml配置文件中，默认是打开的123456* Usage:** &#123;% label [class] %&#125;Content&#123;% endlabel %&#125;** [class] : default | primary | success | info | warning | danger.* If not defined, default class will be selected.default1&#123;% label default@default %&#125;primary1&#123;% label primary@primary %&#125;success1&#123;% label success@success %&#125;info1&#123;% label info@info %&#125;warning1&#123;% label warning@warning %&#125;danger1&#123;% label danger@danger %&#125;12345Lorem &#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; amet, consectetur &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125; tempor incididunt ut labore et dolore magna aliqua.Ut enim *&#123;% label warning @ad %&#125;* minim veniam, quis **&#123;% label danger @nostrud %&#125;** exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Duis aute irure dolor in reprehenderit in voluptate ~~&#123;% label default @velit %&#125;~~ &lt;mark&gt;esse&lt;/mark&gt; cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.效果如下：Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.更多相关使用请看网站Tab 选项卡该标签也是在next\\_config.yml配置文件中1234567# Tabs tag.tabs: enable: true transition: tabs: true labels: true border_radius: 3用法讲解：123456789101112131415161718192021222324tabs.js | global hexo script.Usage:&#123;% tabs [Unique name], [index] %&#125;&lt;!-- tab [Tab caption]@[icon] --&gt;Any content (support inline tags too).&lt;!-- endtab --&gt;&#123;% endtabs %&#125;[Unique name] : Unique name of tabs block tag without comma. Will be used in #id's as prefix for each tab with their index numbers. If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes. Only for current url of post/page must be unique![index] : Index number of active tab. If not defined, first tab (1) will be selected. If index is -1, no tab will be selected. It's will be something like spoiler. May be not defined.[Tab caption] : Caption of current tab. If not caption specified, unique name with tab index suffix will be used as caption of tab. If not caption specified, but specified icon, caption will empty. May be not defined.[icon] : Font awesome icon. May be not defined.设定选中第二个选项卡应用示例：1234567891011&#123;% tabs 选项卡, 2 %&#125;&lt;!-- tab --&gt;**这是选项卡 1** 呵呵哈哈哈哈哈哈&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**这是选项卡 2** 额。。。&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**这是选项卡 3** 哇，你找到我了！&lt;!-- endtab --&gt;&#123;% endtabs %&#125;效果如下：选项卡 1选项卡 2选项卡 3这是选项卡 1 呵呵哈哈哈哈哈哈这是选项卡 2 额。。。这是选项卡 3 哇，你找到我了！tabs 选项卡, 2：选项卡表示选项卡的名称，如果为tab，得到的选项卡显示为tab 1、tab 2、tab 3；2 表示一开始在第二个选项卡，非必须，若数值为 -1 则隐藏选项卡内容(也就是不显示呵呵哈哈哈哈哈哈这一些话，点击之后才会显示)。自定义每个选项卡的名称1234567891011&#123;% tabs Fourth unique name %&#125;&lt;!-- tab Solution 1 --&gt;**This is Tab 1.**&lt;!-- endtab --&gt;&lt;!-- tab Solution 2 --&gt;**This is Tab 2.**&lt;!-- endtab --&gt;&lt;!-- tab Solution 3 --&gt;**This is Tab 3.**&lt;!-- endtab --&gt;&#123;% endtabs %&#125;效果如下：Solution 1Solution 2Solution 3This is Tab 1.This is Tab 2.This is Tab 3.上面的solution 1、2、3即为自定义的，每个tab都可以设置自己的每个tab只显示图标1234567891011&#123;% tabs Fifth unique name %&#125;&lt;!-- tab @text-width --&gt;**This is Tab 1.**&lt;!-- endtab --&gt;&lt;!-- tab @amazon --&gt;**This is Tab 2.**&lt;!-- endtab --&gt;&lt;!-- tab @bold --&gt;**This is Tab 3.**&lt;!-- endtab --&gt;&#123;% endtabs %&#125;效果如下：This is Tab 1.This is Tab 2.This is Tab 3.上面的@amazon即为图标icon既显示图标有显示名称1234567891011&#123;% tabs Sixth unique name %&#125;&lt;!-- tab Solution 1@text-width --&gt;**This is Tab 1.**&lt;!-- endtab --&gt;&lt;!-- tab Solution 2@amazon --&gt;**This is Tab 2.**&lt;!-- endtab --&gt;&lt;!-- tab Solution 3@bold --&gt;**This is Tab 3.**&lt;!-- endtab --&gt;&#123;% endtabs %&#125;效果如下：这个貌似会报错制作链接，快速访问多个tabs组参见网址tabs中套用其他标签12345678910111213141516171819202122232425262728293031323334353637383940&#123;% tabs Tags %&#125;&lt;!-- tab --&gt;**This is Tab 1.**1. One2. Two3. ThreeTabbed code block: nano /etc&#123;% code %&#125;code block tagcode block tagcode block tag&#123;% endcode %&#125;&#123;% note default %&#125;Note default tag.&#123;% endnote %&#125;&#123;% youtube A1Qb4zfurA8 %&#125;&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 2.*** Five* Six* Seven&#123;% note primary %&#125;&#123;% youtube rX3W5evpeJE %&#125;&#123;% endnote %&#125;&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 3.**&#123;% note success %&#125;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.&#123;% endnote %&#125;&lt;!-- endtab --&gt;&#123;% endtabs %&#125;最终效果：Tags 1Tags 2Tags 3This is Tab 1.OneTwoThreeTabbed code block:nano /etc 123code block tagcode block tagcode block tagNote default tag.This is Tab 2.FiveSixSevenThis is Tab 3.Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.按钮样式12345678# fa-lg：放大图标33%# fa-fw：图标和文字之间合理间距显示# download：图标的名称，fa-download，这里只写download即可&#123;% btn https://almostover.ru/2016-01/hexo-theme-next-test/#Button-tag-test, 更多关于按钮的使用点这里, download fa-lg fa-fw %&#125;&lt;div class=\"text-center\"&gt;&#123;% btn https://almostover.ru/2016-01/hexo-theme-next-test/#Button-tag-test, 更多关于按钮的使用点这里, download fa-lg fa-fw %&#125;&lt;/div&gt;&#123;% btn https://almostover.ru/2016-01/hexo-theme-next-test/#Button-tag-test, 更多关于按钮的使用点这里, download fa-lg fa-rotate-90 %&#125;最终效果：更多关于按钮的使用点这里更多关于按钮的使用点这里更多关于按钮的使用点这里点击上面的按钮可以跳转到另一个网址，查看更过关于按钮的操作可以将其放在html语句中进行居中等各种操作btn后跟着点击按钮之后想访问的链接fa-lg：放大图标33%fa-fw：图标和文字之间合理间距显示fa-rotate-90：顺时针旋转90度download：图标的名称，fa-download，这里只写download即可插入照片因为图片功能在markdown语法中比较常用，所以将其单列出来，便于查找。使用七牛作为图床用法实例：123456&#123;% qnimg test2.png title:\"test\" alt:\"图片说明\" 'class:class1 class2' extend:?imageView2/2/w/600 %&#125;&lt;!-- 将其插入html语句中 --&gt;&lt;div align=\"right\"&gt;&#123;% qnimg test2.png title:\"test\" alt:\"图片说明\" 'class:class1 class2' extend:?imageView2/2/w/600 %&#125;&lt;/div&gt;title：鼠标移到图片上显示的名称alt：图片不能正常加载时显示的说明文字extend:?imageView2/2/w/600 ：表示生成宽度最多600px的缩略图最终效果：好像会自动进行居中处理常规markdown语法12345![图片描述，相当于alt](http://pn9abh3rj.bkt.clouddn.com/test.png \"Optional title，相当于title\")&lt;!-- 居中操作可以使用center标签将上述包裹 --&gt;&lt;center&gt;![图片描述，相当于alt](http://pn9abh3rj.bkt.clouddn.com/test.png \"Optional title，相当于title\")&lt;/center&gt;最终效果：Optional title 是用来在鼠标移到图片上时显示的title使用markdown插入图片的缺点：一般的宽和高等属性不好修改，各个编辑器支持的写法可能有区别html代码插入图片针对使用markdown插入图片的缺点，使用html语句可以很好的解决123456&lt;!-- 使用img标签--&gt;&lt;img src=\"http://pn9abh3rj.bkt.clouddn.com/test.png\" width = \"300\" height = \"200\" alt=\"图片名称\" align=center /&gt;&lt;!-- 使用div标签包裹 --&gt;&lt;div align=\"center\"&gt;&lt;img src=\"http://pn9abh3rj.bkt.clouddn.com/test.png\" title=\"使用html插入图片\" alt=\"图片名称\" /&gt;&lt;/div&gt;最终效果：不推荐使用这个img标签来进行对齐操作，容易和文本混在一起，居中的时候还好；推荐使用div标签包裹img标签。tips博客一般都以二级标题开始写起html代码如div标签后面一定要空行标签之间一般都是可以嵌套的插入图片推荐使用div标签包裹img标签实现写完一段记得空行！！！尽量每写完一段就空一行，尤其是代码段和文字之间，不然可能会出现markdown语法不能识别的情况（前面的错误可能导致后续很多语法都不能正常识别，在找错误的时候看第一个不能识别的位置）参考链接很详细很好的技巧文章也是很好的教程，可结合上一个看支持highlight的语言note、label、button、tab使用讲解及示例note、label、tab使用讲解及示例","categories":[{"name":"hexo","slug":"hexo","permalink":"http://showteeth.tech/categories/hexo/"},{"name":"next","slug":"hexo/next","permalink":"http://showteeth.tech/categories/hexo/next/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://showteeth.tech/tags/markdown/"},{"name":"next","slug":"next","permalink":"http://showteeth.tech/tags/next/"},{"name":"tips","slug":"tips","permalink":"http://showteeth.tech/tags/tips/"}]}]}